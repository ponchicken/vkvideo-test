{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"hasMouse\"],\n    _excluded2 = [\"children\"],\n    _excluded3 = [\"options\", \"popupDirection\", \"renderOption\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport NativeSelect from \"../NativeSelect/NativeSelect\";\nimport CustomSelect from \"../CustomSelect/CustomSelect\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\n\nvar Select = function Select(_ref) {\n  var hasMouse = _ref.hasMouse,\n      props = _objectWithoutProperties(_ref, _excluded); // Use custom select if device has connected a mouse\n\n\n  if (hasMouse) {\n    var children = props.children,\n        _restProps = _objectWithoutProperties(props, _excluded2);\n\n    return createScopedElement(CustomSelect, _restProps);\n  }\n\n  var _props$options = props.options,\n      options = _props$options === void 0 ? [] : _props$options,\n      popupDirection = props.popupDirection,\n      renderOption = props.renderOption,\n      restProps = _objectWithoutProperties(props, _excluded3);\n\n  return createScopedElement(NativeSelect, restProps, options.map(function (_ref2) {\n    var label = _ref2.label,\n        value = _ref2.value;\n    return createScopedElement(\"option\", {\n      value: value,\n      key: \"\".concat(value)\n    }, label);\n  }));\n}; // eslint-disable-next-line import/no-default-export\n\n\nexport default withAdaptivity(Select, {\n  hasMouse: true\n});","map":{"version":3,"mappings":";;;;;AACA,OAAOA,YAAP;AACA,OAAOC,YAAP;AACA,SAASC,cAAT;;AAQA,IAAMC,MAA0D,GAAG,SAA7DA,MAA6D,OAGhD;EAAA,IAFjBC,QAEiB,QAFjBA,QAEiB;EAAA,IADdC,KACc,8CACjB;;;EACA,IAAID,QAAJ,EAAc;IACZ,IAAQE,QAAR,GAAmCD,KAAnC,CAAQC,QAAR;IAAA,IAAqBC,UAArB,4BAAmCF,KAAnC;;IAEA,OAAOG,oBAACP,YAAD,EAAkBM,UAAlB,CAAP;EACD;;EAED,qBAAqEF,KAArE,CAAQI,OAAR;EAAA,IAAQA,OAAR,+BAAkB,EAAlB;EAAA,IAAsBC,cAAtB,GAAqEL,KAArE,CAAsBK,cAAtB;EAAA,IAAsCC,YAAtC,GAAqEN,KAArE,CAAsCM,YAAtC;EAAA,IAAuDJ,SAAvD,4BAAqEF,KAArE;;EAEA,OACEG,oBAACR,YAAD,EAAkBO,SAAlB,EACGE,OAAO,CAACG,GAARH,CAAY;IAAA,IAAGI,KAAH,SAAGA,KAAH;IAAA,IAAUC,KAAV,SAAUA,KAAV;IAAA,OACXN;MAAQM,KAAK,EAAEA,KAAf;MAAsBC,GAAG,YAAKD,KAAL;IAAzB,GACGD,KADH,CADW;EAAZ,EADH,CADF;AAbF,E,CAwBA;;;AACA,eAAeX,cAAc,CAACC,MAAD,EAAS;EACpCC,QAAQ,EAAE;AAD0B,CAAT,CAA7B","names":["NativeSelect","CustomSelect","withAdaptivity","Select","hasMouse","props","children","restProps","createScopedElement","options","popupDirection","renderOption","map","label","value","key"],"sources":["/Users/al.balandin/code/vkvideo-test/node_modules/@vkontakte/vkui/src/components/Select/Select.tsx"],"sourcesContent":["import * as React from \"react\";\nimport NativeSelect from \"../NativeSelect/NativeSelect\";\nimport CustomSelect, { CustomSelectProps } from \"../CustomSelect/CustomSelect\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport {\n  AdaptivityContextInterface,\n  AdaptivityProps,\n} from \"../AdaptivityProvider/AdaptivityContext\";\n\nexport interface SelectProps extends CustomSelectProps, AdaptivityProps {}\n\nconst Select: React.FC<SelectProps & AdaptivityContextInterface> = ({\n  hasMouse,\n  ...props\n}: SelectProps) => {\n  // Use custom select if device has connected a mouse\n  if (hasMouse) {\n    const { children, ...restProps } = props;\n\n    return <CustomSelect {...restProps} />;\n  }\n\n  const { options = [], popupDirection, renderOption, ...restProps } = props;\n\n  return (\n    <NativeSelect {...restProps}>\n      {options.map(({ label, value }) => (\n        <option value={value} key={`${value}`}>\n          {label}\n        </option>\n      ))}\n    </NativeSelect>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default withAdaptivity(Select, {\n  hasMouse: true,\n});\n"]},"metadata":{},"sourceType":"module"}