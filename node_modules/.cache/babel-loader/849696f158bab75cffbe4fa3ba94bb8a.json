{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"header\", \"viewWidth\", \"viewHeight\", \"sizeX\", \"hasMouse\", \"onClose\", \"settlingHeight\", \"dynamicContentHeight\", \"getModalContentRef\", \"nav\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { ModalRootContext, useModalRegistry } from \"../ModalRoot/ModalRootContext\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useOrientationChange } from \"../../hooks/useOrientationChange\";\nimport { withAdaptivity, ViewHeight, ViewWidth } from \"../../hoc/withAdaptivity\";\nimport ModalDismissButton from \"../ModalDismissButton/ModalDismissButton\";\nimport { multiRef } from \"../../lib/utils\";\nimport { ModalType } from \"../ModalRoot/types\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nvar warn = warnOnce(\"ModalPage\");\n\nvar ModalPage = function ModalPage(props) {\n  var _React$useContext = React.useContext(ModalRootContext),\n      updateModalHeight = _React$useContext.updateModalHeight;\n\n  var children = props.children,\n      header = props.header,\n      viewWidth = props.viewWidth,\n      viewHeight = props.viewHeight,\n      sizeX = props.sizeX,\n      hasMouse = props.hasMouse,\n      onClose = props.onClose,\n      settlingHeight = props.settlingHeight,\n      dynamicContentHeight = props.dynamicContentHeight,\n      getModalContentRef = props.getModalContentRef,\n      nav = props.nav,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var platform = usePlatform();\n  var orientation = useOrientationChange();\n  React.useEffect(updateModalHeight, [children, orientation, updateModalHeight]);\n  var isDesktop = viewWidth >= ViewWidth.SMALL_TABLET && (hasMouse || viewHeight >= ViewHeight.MEDIUM);\n  var canShowCloseBtn = viewWidth >= ViewWidth.SMALL_TABLET;\n  var modalContext = React.useContext(ModalRootContext);\n\n  var _useModalRegistry = useModalRegistry(getNavId(props, warn), ModalType.PAGE),\n      refs = _useModalRegistry.refs;\n\n  return createScopedElement(\"div\", _extends({}, restProps, {\n    vkuiClass: classNames(getClassName(\"ModalPage\", platform), \"ModalPage--sizeX-\".concat(sizeX), {\n      \"ModalPage--desktop\": isDesktop\n    })\n  }), createScopedElement(\"div\", {\n    vkuiClass: \"ModalPage__in-wrap\",\n    ref: refs.innerElement\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"ModalPage__in\"\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"ModalPage__header\",\n    ref: refs.headerElement\n  }, header), createScopedElement(\"div\", {\n    vkuiClass: \"ModalPage__content-wrap\"\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"ModalPage__content\",\n    ref: multiRef(refs.contentElement, getModalContentRef)\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"ModalPage__content-in\"\n  }, children))), canShowCloseBtn && createScopedElement(ModalDismissButton, {\n    onClick: onClose || modalContext.onClose\n  }))));\n};\n\nModalPage.defaultProps = {\n  settlingHeight: 75\n}; // eslint-disable-next-line import/no-default-export\n\nexport default withAdaptivity(ModalPage, {\n  viewWidth: true,\n  viewHeight: true,\n  sizeX: true,\n  hasMouse: true\n});","map":{"version":3,"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT;AACA,SAASC,UAAT;AACA,SACEC,gBADF,EAEEC,gBAFF;AAIA,SAASC,WAAT;AACA,SAASC,oBAAT;AACA,SACEC,cADF,EAEEC,UAFF,EAGEC,SAHF;AASA,OAAOC,kBAAP;AACA,SAASC,QAAT;AACA,SAASC,SAAT;AACA,SAASC,QAAT;AACA,SAASC,QAAT;AAuBA,IAAMC,IAAI,GAAGD,QAAQ,CAAC,WAAD,CAArB;;AACA,IAAME,SAAgE,GAAG,SAAnEA,SAAmE,CACvEC,KADuE,EAEpE;EACH,wBAA8BjB,KAAK,CAACkB,UAANlB,CAAiBG,gBAAjBH,CAA9B;EAAA,IAAQmB,iBAAR,qBAAQA,iBAAR;;EAEA,IACEC,QADF,GAaIH,KAbJ,CACEG,QADF;EAAA,IAEEC,MAFF,GAaIJ,KAbJ,CAEEI,MAFF;EAAA,IAGEC,SAHF,GAaIL,KAbJ,CAGEK,SAHF;EAAA,IAIEC,UAJF,GAaIN,KAbJ,CAIEM,UAJF;EAAA,IAKEC,KALF,GAaIP,KAbJ,CAKEO,KALF;EAAA,IAMEC,QANF,GAaIR,KAbJ,CAMEQ,QANF;EAAA,IAOEC,OAPF,GAaIT,KAbJ,CAOES,OAPF;EAAA,IAQEC,cARF,GAaIV,KAbJ,CAQEU,cARF;EAAA,IASEC,oBATF,GAaIX,KAbJ,CASEW,oBATF;EAAA,IAUEC,kBAVF,GAaIZ,KAbJ,CAUEY,kBAVF;EAAA,IAWEC,GAXF,GAaIb,KAbJ,CAWEa,GAXF;EAAA,IAYKC,SAZL,4BAaId,KAbJ;;EAeA,IAAMe,QAAQ,GAAG3B,WAAW,EAA5B;EACA,IAAM4B,WAAW,GAAG3B,oBAAoB,EAAxC;EAEAN,KAAK,CAACkC,SAANlC,CAAgBmB,iBAAhBnB,EAAmC,CACjCoB,QADiC,EAEjCa,WAFiC,EAGjCd,iBAHiC,CAAnCnB;EAMA,IAAMmC,SAAS,GACbb,SAAS,IAAIb,SAAS,CAAC2B,YAAvBd,KACCG,QAAQ,IAAIF,UAAU,IAAIf,UAAU,CAAC6B,MADtCf,CADF;EAGA,IAAMgB,eAAe,GAAGhB,SAAS,IAAIb,SAAS,CAAC2B,YAA/C;EAEA,IAAMG,YAAY,GAAGvC,KAAK,CAACkB,UAANlB,CAAiBG,gBAAjBH,CAArB;;EACA,wBAAiBI,gBAAgB,CAACS,QAAQ,CAACI,KAAD,EAAQF,IAAR,CAAT,EAAwBH,SAAS,CAAC4B,IAAlC,CAAjC;EAAA,IAAQC,IAAR,qBAAQA,IAAR;;EAEA,OACEC,wCACMX,SADN;IAEEY,SAAS,EAAEzC,UAAU,CACnBD,YAAY,CAAC,WAAD,EAAc+B,QAAd,CADO,6BAECR,KAFD,GAGnB;MACE,sBAAsBW;IADxB,CAHmB;EAFvB,IAUEO;IAAKC,SAAS,EAAC,oBAAf;IAAoCC,GAAG,EAAEH,IAAI,CAACI;EAA9C,GACEH;IAAKC,SAAS,EAAC;EAAf,GACED;IAAKC,SAAS,EAAC,mBAAf;IAAmCC,GAAG,EAAEH,IAAI,CAACK;EAA7C,GACGzB,MADH,CADF,EAKEqB;IAAKC,SAAS,EAAC;EAAf,GACED;IACEC,SAAS,EAAC,oBADZ;IAEEC,GAAG,EAAEjC,QAAQ,CACX8B,IAAI,CAACM,cADM,EAEXlB,kBAFW;EAFf,GAOEa;IAAKC,SAAS,EAAC;EAAf,GAAwCvB,QAAxC,CAPF,CADF,CALF,EAgBGkB,eAAe,IACdI,oBAAChC,kBAAD;IAAoBsC,OAAO,EAAEtB,OAAO,IAAIa,YAAY,CAACb;EAArD,EAjBJ,CADF,CAVF,CADF;AArCF;;AA0EAV,SAAS,CAACiC,YAAVjC,GAAyB;EACvBW,cAAc,EAAE;AADO,CAAzBX,C,CAIA;;AACA,eAAeT,cAAc,CAACS,SAAD,EAAY;EACvCM,SAAS,EAAE,IAD4B;EAEvCC,UAAU,EAAE,IAF2B;EAGvCC,KAAK,EAAE,IAHgC;EAIvCC,QAAQ,EAAE;AAJ6B,CAAZ,CAA7B","names":["React","getClassName","classNames","ModalRootContext","useModalRegistry","usePlatform","useOrientationChange","withAdaptivity","ViewHeight","ViewWidth","ModalDismissButton","multiRef","ModalType","getNavId","warnOnce","warn","ModalPage","props","useContext","updateModalHeight","children","header","viewWidth","viewHeight","sizeX","hasMouse","onClose","settlingHeight","dynamicContentHeight","getModalContentRef","nav","restProps","platform","orientation","useEffect","isDesktop","SMALL_TABLET","MEDIUM","canShowCloseBtn","modalContext","PAGE","refs","createScopedElement","vkuiClass","ref","innerElement","headerElement","contentElement","onClick","defaultProps"],"sources":["/Users/al.balandin/code/vkvideo-test/node_modules/@vkontakte/vkui/src/components/ModalPage/ModalPage.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport {\n  ModalRootContext,\n  useModalRegistry,\n} from \"../ModalRoot/ModalRootContext\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useOrientationChange } from \"../../hooks/useOrientationChange\";\nimport {\n  withAdaptivity,\n  ViewHeight,\n  ViewWidth,\n} from \"../../hoc/withAdaptivity\";\nimport {\n  AdaptivityContextInterface,\n  AdaptivityProps,\n} from \"../AdaptivityProvider/AdaptivityContext\";\nimport ModalDismissButton from \"../ModalDismissButton/ModalDismissButton\";\nimport { multiRef } from \"../../lib/utils\";\nimport { ModalType } from \"../ModalRoot/types\";\nimport { getNavId, NavIdProps } from \"../../lib/getNavId\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport \"./ModalPage.css\";\n\nexport interface ModalPageProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    AdaptivityProps,\n    NavIdProps {\n  /**\n   * Шапка модальной страницы, `<ModalPageHeader />`\n   */\n  header?: React.ReactNode;\n  onClose?: VoidFunction;\n  /**\n   * Процент, на который изначально будет открыта модальная страница. При `settlingHeight={100}` модальная страница раскрывается на всю высоту.\n   */\n  settlingHeight?: number;\n  /**\n   * Если высота контента в модальной странице может поменяться, нужно установить это свойство\n   */\n  dynamicContentHeight?: boolean;\n  getModalContentRef?: React.Ref<HTMLDivElement>;\n}\n\nconst warn = warnOnce(\"ModalPage\");\nconst ModalPage: React.FC<ModalPageProps & AdaptivityContextInterface> = (\n  props\n) => {\n  const { updateModalHeight } = React.useContext(ModalRootContext);\n\n  const {\n    children,\n    header,\n    viewWidth,\n    viewHeight,\n    sizeX,\n    hasMouse,\n    onClose,\n    settlingHeight,\n    dynamicContentHeight,\n    getModalContentRef,\n    nav,\n    ...restProps\n  } = props;\n\n  const platform = usePlatform();\n  const orientation = useOrientationChange();\n\n  React.useEffect(updateModalHeight, [\n    children,\n    orientation,\n    updateModalHeight,\n  ]);\n\n  const isDesktop =\n    viewWidth >= ViewWidth.SMALL_TABLET &&\n    (hasMouse || viewHeight >= ViewHeight.MEDIUM);\n  const canShowCloseBtn = viewWidth >= ViewWidth.SMALL_TABLET;\n\n  const modalContext = React.useContext(ModalRootContext);\n  const { refs } = useModalRegistry(getNavId(props, warn), ModalType.PAGE);\n\n  return (\n    <div\n      {...restProps}\n      vkuiClass={classNames(\n        getClassName(\"ModalPage\", platform),\n        `ModalPage--sizeX-${sizeX}`,\n        {\n          \"ModalPage--desktop\": isDesktop,\n        }\n      )}\n    >\n      <div vkuiClass=\"ModalPage__in-wrap\" ref={refs.innerElement}>\n        <div vkuiClass=\"ModalPage__in\">\n          <div vkuiClass=\"ModalPage__header\" ref={refs.headerElement}>\n            {header}\n          </div>\n\n          <div vkuiClass=\"ModalPage__content-wrap\">\n            <div\n              vkuiClass=\"ModalPage__content\"\n              ref={multiRef<HTMLDivElement>(\n                refs.contentElement,\n                getModalContentRef\n              )}\n            >\n              <div vkuiClass=\"ModalPage__content-in\">{children}</div>\n            </div>\n          </div>\n          {canShowCloseBtn && (\n            <ModalDismissButton onClick={onClose || modalContext.onClose} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nModalPage.defaultProps = {\n  settlingHeight: 75,\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default withAdaptivity(ModalPage, {\n  viewWidth: true,\n  viewHeight: true,\n  sizeX: true,\n  hasMouse: true,\n});\n"]},"metadata":{},"sourceType":"module"}