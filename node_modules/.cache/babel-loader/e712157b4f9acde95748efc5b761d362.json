{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"active\", \"hovered\", \"children\", \"getRootRef\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport Tappable from \"../Tappable/Tappable\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport Text from \"../Typography/Text/Text\";\n/**\n * @deprecated Этот компонент устарел и будет удален в 5.0.0.\n */\n\nexport var SliderSwitchButton = function SliderSwitchButton(props) {\n  var _classNames;\n\n  var active = props.active,\n      hovered = props.hovered,\n      children = props.children,\n      getRootRef = props.getRootRef,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var platform = usePlatform();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      focus = _React$useState2[0],\n      setFocus = _React$useState2[1];\n\n  var toggleFocus = function toggleFocus() {\n    setFocus(!focus);\n  };\n\n  return createScopedElement(Tappable, _extends({}, restProps, {\n    vkuiClass: classNames(getClassName(\"SliderSwitch__button\", platform), (_classNames = {}, _defineProperty(_classNames, \"SliderSwitch__button--active\", active), _defineProperty(_classNames, \"SliderSwitch__button--hover\", !active && hovered), _defineProperty(_classNames, \"SliderSwitch__button--activeHover\", active && hovered), _defineProperty(_classNames, \"SliderSwitch__button--focus\", focus && !hovered), _classNames)),\n    Component: \"button\",\n    type: \"button\",\n    getRootRef: getRootRef,\n    \"aria-pressed\": active,\n    onFocus: toggleFocus,\n    onBlur: toggleFocus,\n    tabIndex: 0,\n    hasActive: false,\n    hoverMode: \"opacity\"\n  }), createScopedElement(Text, {\n    weight: \"medium\"\n  }, children));\n};","map":{"version":3,"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP;AACA,SAASC,YAAT;AACA,SAASC,UAAT;AAEA,SAASC,WAAT;AACA,OAAOC,IAAP;AAUA;AACA;AACA;;AACA,OAAO,IAAMC,kBAAwD,GAAG,SAA3DA,kBAA2D,CACtEC,KADsE,EAEnE;EAAA;;EACH,IAAQC,MAAR,GAAgED,KAAhE,CAAQC,MAAR;EAAA,IAAgBC,OAAhB,GAAgEF,KAAhE,CAAgBE,OAAhB;EAAA,IAAyBC,QAAzB,GAAgEH,KAAhE,CAAyBG,QAAzB;EAAA,IAAmCC,UAAnC,GAAgEJ,KAAhE,CAAmCI,UAAnC;EAAA,IAAkDC,SAAlD,4BAAgEL,KAAhE;;EACA,IAAMM,QAAQ,GAAGT,WAAW,EAA5B;;EACA,sBAA0BJ,KAAK,CAACc,QAANd,CAAe,KAAfA,CAA1B;EAAA;EAAA,IAAOe,KAAP;EAAA,IAAcC,QAAd;;EAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;IACxBD,QAAQ,CAAC,CAACD,KAAF,CAARC;EADF;;EAIA,OACEE,oBAACjB,QAAD,eACMW,SADN;IAEEO,SAAS,EAAEhB,UAAU,CAACD,YAAY,CAAC,sBAAD,EAAyBW,QAAzB,CAAb,kDAClB,8BADkB,EACeL,MADf,gCAElB,6BAFkB,EAEc,CAACA,MAAD,IAAWC,OAFzB,gCAGlB,mCAHkB,EAGoBD,MAAM,IAAIC,OAH9B,gCAIlB,6BAJkB,EAIcM,KAAK,IAAI,CAACN,OAJxB,gBAFvB;IAQEW,SAAS,EAAC,QARZ;IASEC,IAAI,EAAC,QATP;IAUEV,UAAU,EAAEA,UAVd;IAWE,gBAAcH,MAXhB;IAYEc,OAAO,EAAEL,WAZX;IAaEM,MAAM,EAAEN,WAbV;IAcEO,QAAQ,EAAE,CAdZ;IAeEC,SAAS,EAAE,KAfb;IAgBEC,SAAS,EAAC;EAhBZ,IAkBER,oBAACb,IAAD;IAAMsB,MAAM,EAAC;EAAb,GAAuBjB,QAAvB,CAlBF,CADF;AAXK","names":["React","Tappable","getClassName","classNames","usePlatform","Text","SliderSwitchButton","props","active","hovered","children","getRootRef","restProps","platform","useState","focus","setFocus","toggleFocus","createScopedElement","vkuiClass","Component","type","onFocus","onBlur","tabIndex","hasActive","hoverMode","weight"],"sources":["/Users/al.balandin/code/vkvideo-test/node_modules/@vkontakte/vkui/src/components/SliderSwitch/SliderSwitchButton.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Tappable from \"../Tappable/Tappable\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { HasRootRef } from \"../../types\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport Text from \"../Typography/Text/Text\";\nimport \"./SliderSwitch.css\";\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLElement>,\n    HasRootRef<HTMLElement> {\n  active?: boolean;\n  hovered?: boolean;\n}\n\n/**\n * @deprecated Этот компонент устарел и будет удален в 5.0.0.\n */\nexport const SliderSwitchButton: React.FunctionComponent<ButtonProps> = (\n  props: ButtonProps\n) => {\n  const { active, hovered, children, getRootRef, ...restProps } = props;\n  const platform = usePlatform();\n  const [focus, setFocus] = React.useState(false);\n\n  const toggleFocus = () => {\n    setFocus(!focus);\n  };\n\n  return (\n    <Tappable\n      {...restProps}\n      vkuiClass={classNames(getClassName(\"SliderSwitch__button\", platform), {\n        [\"SliderSwitch__button--active\"]: active,\n        [\"SliderSwitch__button--hover\"]: !active && hovered,\n        [\"SliderSwitch__button--activeHover\"]: active && hovered,\n        [\"SliderSwitch__button--focus\"]: focus && !hovered,\n      })}\n      Component=\"button\"\n      type=\"button\"\n      getRootRef={getRootRef}\n      aria-pressed={active}\n      onFocus={toggleFocus}\n      onBlur={toggleFocus}\n      tabIndex={0}\n      hasActive={false}\n      hoverMode=\"opacity\"\n    >\n      <Text weight=\"medium\">{children}</Text>\n    </Tappable>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}