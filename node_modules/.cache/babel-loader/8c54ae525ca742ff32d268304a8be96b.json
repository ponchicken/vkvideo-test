{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n/**\n * Удаляет ключи `keys` из объекта и возвращает его копию\n */\n\n\nexport function deleteObjectKeys(object) {\n  var keys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  var newObject = _objectSpread({}, object);\n\n  keys.forEach(function (key) {\n    return delete newObject[key];\n  });\n  return newObject;\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAGA,OAAO,SAASA,gBAAT,CAA4EC,MAA5E,EAA0G;EAAA,IAAnBC,IAAmB,uEAAP,EAAO;;EAC/G,IAAMC,SAAS,qBAAQF,MAAR,CAAf;;EACAC,IAAI,CAACE,OAALF,CAAa,UAACG,GAAD;IAAA,OAAS,OAAOF,SAAS,CAACE,GAAD,CAAzB;EAAb;EACA,OAAOF,SAAP;AACD","names":["deleteObjectKeys","object","keys","newObject","forEach","key"],"sources":["/Users/al.balandin/code/vkvideo-test/node_modules/@vkontakte/vkui/node_modules/@vkontakte/vkjs/src/objects.ts"],"sourcesContent":["/**\n * Удаляет ключи `keys` из объекта и возвращает его копию\n */\nexport function deleteObjectKeys<T extends Record<string, any>, K extends keyof T>(object: T, keys: K[] = []): T {\n  const newObject = { ...object };\n  keys.forEach((key) => delete newObject[key]);\n  return newObject;\n}\n"]},"metadata":{},"sourceType":"module"}