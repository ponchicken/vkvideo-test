{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"popout\", \"modal\", \"platform\", \"activePanel\", \"splitCol\", \"configProvider\", \"history\", \"nav\", \"onTransition\", \"onSwipeBack\", \"onSwipeBackStart\", \"onSwipeBackCancel\", \"window\", \"document\", \"scroll\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { transitionEvent, animationEvent } from \"../../lib/supportEvents\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { IOS, ANDROID, VKCOM } from \"../../lib/platform\";\nimport { Touch } from \"../Touch/Touch\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\nimport { withContext } from \"../../hoc/withContext\";\nimport { ConfigProviderContext } from \"../ConfigProvider/ConfigProviderContext\";\nimport { SplitColContext } from \"../SplitCol/SplitCol\";\nimport { AppRootPortal } from \"../AppRoot/AppRootPortal\";\nimport { canUseDOM, withDOM } from \"../../lib/dom\";\nimport { ScrollContext } from \"../AppRoot/ScrollContext\";\nimport { NavTransitionProvider } from \"../NavTransitionContext/NavTransitionContext\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { swipeBackExcluded } from \"./utils\";\nvar SwipeBackResults;\n\n(function (SwipeBackResults) {\n  SwipeBackResults[SwipeBackResults[\"fail\"] = 1] = \"fail\";\n  SwipeBackResults[SwipeBackResults[\"success\"] = 2] = \"success\";\n})(SwipeBackResults || (SwipeBackResults = {}));\n\nexport var scrollsCache = {};\nvar warn = warnOnce(\"View\");\n\nvar View = /*#__PURE__*/function (_React$Component) {\n  _inherits(View, _React$Component);\n\n  var _super = _createSuper(View);\n\n  function View(props) {\n    var _this;\n\n    _classCallCheck(this, View);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"scrolls\", scrollsCache[getNavId(_this.props)] || {});\n\n    _defineProperty(_assertThisInitialized(_this), \"transitionFinishTimeout\", undefined);\n\n    _defineProperty(_assertThisInitialized(_this), \"animationFinishTimeout\", undefined);\n\n    _defineProperty(_assertThisInitialized(_this), \"panelNodes\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"transitionEndHandler\", function (e) {\n      if ((!e || [\"vkui-animation-ios-next-forward\", \"vkui-animation-ios-prev-back\", \"vkui-animation-view-next-forward\", \"vkui-animation-view-prev-back\"].includes(e.animationName)) && _this.state.prevPanel !== null) {\n        _this.flushTransition(_this.state.prevPanel, Boolean(_this.state.isBack));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"swipingBackTransitionEndHandler\", function (e) {\n      // indexOf because of vendor prefixes in old browsers\n      if (!e || e !== null && e !== void 0 && e.propertyName.includes(\"transform\") && (e === null || e === void 0 ? void 0 : e.target) === _this.pickPanel(_this.state.swipeBackNextPanel)) {\n        switch (_this.state.swipeBackResult) {\n          case SwipeBackResults.fail:\n            _this.onSwipeBackCancel();\n\n            break;\n\n          case SwipeBackResults.success:\n            _this.onSwipeBackSuccess();\n\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMoveX\", function (e) {\n      if (swipeBackExcluded(e)) {\n        return;\n      }\n\n      var _this$props = _this.props,\n          platform = _this$props.platform,\n          configProvider = _this$props.configProvider;\n\n      if (platform === IOS && !(configProvider !== null && configProvider !== void 0 && configProvider.isWebView) && (e.startX <= 70 || e.startX >= _this.window.innerWidth - 70) && !_this.state.browserSwipe) {\n        _this.setState({\n          browserSwipe: true\n        });\n      }\n\n      if (platform === IOS && configProvider !== null && configProvider !== void 0 && configProvider.isWebView && _this.props.onSwipeBack) {\n        var _this$props$history$l, _this$props$history;\n\n        if (_this.state.animated && e.startX <= 70 || !_this.window) {\n          return;\n        }\n\n        if (e.startX <= 70 && !_this.state.swipingBack && ((_this$props$history$l = (_this$props$history = _this.props.history) === null || _this$props$history === void 0 ? void 0 : _this$props$history.length) !== null && _this$props$history$l !== void 0 ? _this$props$history$l : 0) > 1) {\n          if (_this.state.activePanel !== null) {\n            var _this$props$scroll;\n\n            _this.scrolls[_this.state.activePanel] = (_this$props$scroll = _this.props.scroll) === null || _this$props$scroll === void 0 ? void 0 : _this$props$scroll.getScroll().y;\n          }\n\n          _this.setState({\n            swipingBack: true,\n            swipebackStartX: e.startX,\n            swipeBackPrevPanel: _this.state.activePanel,\n            swipeBackNextPanel: _this.props.history.slice(-2)[0]\n          });\n        }\n\n        if (_this.state.swipingBack) {\n          var swipeBackShift = 0;\n\n          if (e.shiftX < 0) {\n            swipeBackShift = 0;\n          } else if (e.shiftX > _this.window.innerWidth - _this.state.swipebackStartX) {\n            var _this$window;\n\n            swipeBackShift = (_this$window = _this.window) === null || _this$window === void 0 ? void 0 : _this$window.innerWidth;\n          } else {\n            swipeBackShift = e.shiftX;\n          }\n\n          _this.setState({\n            swipeBackShift: swipeBackShift\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEnd\", function (e) {\n      if (_this.state.swipingBack && _this.window) {\n        var _this$window$innerWid, _this$window2;\n\n        var speed = _this.state.swipeBackShift / e.duration * 1000;\n\n        if (_this.state.swipeBackShift === 0) {\n          _this.onSwipeBackCancel();\n        } else if (_this.state.swipeBackShift >= ((_this$window$innerWid = (_this$window2 = _this.window) === null || _this$window2 === void 0 ? void 0 : _this$window2.innerWidth) !== null && _this$window$innerWid !== void 0 ? _this$window$innerWid : 0)) {\n          _this.onSwipeBackSuccess();\n        } else if (speed > 250 || _this.state.swipebackStartX + _this.state.swipeBackShift > _this.window.innerWidth / 2) {\n          _this.setState({\n            swipeBackResult: SwipeBackResults.success\n          });\n        } else {\n          _this.setState({\n            swipeBackResult: SwipeBackResults.fail\n          });\n        }\n      }\n    });\n\n    _this.state = {\n      animated: false,\n      visiblePanels: [props.activePanel],\n      activePanel: props.activePanel,\n      isBack: undefined,\n      prevPanel: null,\n      nextPanel: null,\n      swipingBack: false,\n      swipebackStartX: 0,\n      swipeBackShift: 0,\n      swipeBackNextPanel: null,\n      swipeBackPrevPanel: null,\n      swipeBackResult: null,\n      browserSwipe: false\n    };\n    return _this;\n  }\n\n  _createClass(View, [{\n    key: \"document\",\n    get: function get() {\n      return this.props.document;\n    }\n  }, {\n    key: \"window\",\n    get: function get() {\n      return this.props.window;\n    }\n  }, {\n    key: \"panels\",\n    get: function get() {\n      return React.Children.toArray(this.props.children);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (process.env.NODE_ENV === \"development\") {\n        var _this$props2 = this.props,\n            popout = _this$props2.popout,\n            modal = _this$props2.modal;\n        popout && warn(\"Свойство popout устарело и будет удалено в 5.0.0. Используйте одноименное свойство у SplitLayout.\");\n        modal && warn(\"Свойство modal устарело и будет удалено в 5.0.0. Используйте одноименное свойство у SplitLayout.\");\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var id = getNavId(this.props);\n\n      if (id) {\n        scrollsCache[id] = this.scrolls;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      this.props.popout && !prevProps.popout && this.blurActiveElement();\n      this.props.modal && !prevProps.modal && this.blurActiveElement(); // Нужен переход\n\n      if (prevProps.activePanel !== this.props.activePanel && !prevState.swipingBack && !prevState.browserSwipe) {\n        var _this$props$scroll2;\n\n        var firstLayerId = this.panels.map(function (panel) {\n          return getNavId(panel.props, warn);\n        }).find(function (id) {\n          return id === prevProps.activePanel || id === _this2.props.activePanel;\n        });\n        var isBack = firstLayerId === this.props.activePanel;\n        this.scrolls[prevProps.activePanel] = (_this$props$scroll2 = this.props.scroll) === null || _this$props$scroll2 === void 0 ? void 0 : _this$props$scroll2.getScroll().y;\n\n        if (this.shouldDisableTransitionMotion()) {\n          this.flushTransition(prevProps.activePanel, isBack);\n        } else {\n          this.blurActiveElement();\n          this.setState({\n            visiblePanels: [prevProps.activePanel, this.props.activePanel],\n            prevPanel: prevProps.activePanel,\n            nextPanel: this.props.activePanel,\n            activePanel: null,\n            animated: true,\n            isBack: isBack\n          }); // Фолбек анимации перехода\n\n          if (!animationEvent.supported) {\n            if (this.animationFinishTimeout) {\n              clearTimeout(this.animationFinishTimeout);\n            }\n\n            this.animationFinishTimeout = setTimeout(this.transitionEndHandler, this.props.platform === ANDROID || this.props.platform === VKCOM ? 300 : 600);\n          }\n        }\n      } // Закончилась анимация свайпа назад\n\n\n      if (prevProps.activePanel !== this.props.activePanel && prevState.swipingBack) {\n        var nextPanel = this.props.activePanel;\n        var prevPanel = prevProps.activePanel;\n\n        if (prevState.swipeBackPrevPanel !== null) {\n          this.scrolls[prevState.swipeBackPrevPanel] = 0;\n        }\n\n        this.setState({\n          swipeBackPrevPanel: null,\n          swipeBackNextPanel: null,\n          swipingBack: false,\n          swipeBackResult: null,\n          swipebackStartX: 0,\n          swipeBackShift: 0,\n          activePanel: nextPanel,\n          visiblePanels: [nextPanel]\n        }, function () {\n          if (_this2.state.activePanel !== null) {\n            var _this2$props$scroll;\n\n            (_this2$props$scroll = _this2.props.scroll) === null || _this2$props$scroll === void 0 ? void 0 : _this2$props$scroll.scrollTo(0, _this2.scrolls[_this2.state.activePanel]);\n          }\n\n          prevProps.onTransition && prevProps.onTransition({\n            isBack: true,\n            from: prevPanel,\n            to: nextPanel\n          });\n        });\n      } // Начался свайп назад\n\n\n      if (!prevState.swipingBack && this.state.swipingBack) {\n        this.props.onSwipeBackStart && this.props.onSwipeBackStart();\n      } // Началась анимация завершения свайпа назад.\n\n\n      if (!prevState.swipeBackResult && this.state.swipeBackResult) {\n        this.waitTransitionFinish(this.pickPanel(this.state.swipeBackNextPanel), this.swipingBackTransitionEndHandler);\n      } // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n\n\n      if (prevState.swipeBackResult === SwipeBackResults.fail && !this.state.swipeBackResult && this.state.activePanel !== null) {\n        var _this$props$scroll3;\n\n        (_this$props$scroll3 = this.props.scroll) === null || _this$props$scroll3 === void 0 ? void 0 : _this$props$scroll3.scrollTo(0, this.scrolls[this.state.activePanel]);\n      } // Закончился Safari свайп\n\n\n      if (prevProps.activePanel !== this.props.activePanel && this.state.browserSwipe) {\n        this.setState({\n          browserSwipe: false,\n          nextPanel: null,\n          prevPanel: null,\n          animated: false,\n          visiblePanels: [this.props.activePanel],\n          activePanel: this.props.activePanel\n        });\n      }\n    }\n  }, {\n    key: \"shouldDisableTransitionMotion\",\n    value: function shouldDisableTransitionMotion() {\n      var _this$props$configPro, _this$props$splitCol;\n\n      return ((_this$props$configPro = this.props.configProvider) === null || _this$props$configPro === void 0 ? void 0 : _this$props$configPro.transitionMotionEnabled) === false || !((_this$props$splitCol = this.props.splitCol) !== null && _this$props$splitCol !== void 0 && _this$props$splitCol.animate);\n    }\n  }, {\n    key: \"waitTransitionFinish\",\n    value: function waitTransitionFinish(elem, eventHandler) {\n      if (transitionEvent.supported && transitionEvent.name && elem) {\n        elem.removeEventListener(transitionEvent.name, eventHandler);\n        elem.addEventListener(transitionEvent.name, eventHandler);\n      } else {\n        if (this.transitionFinishTimeout) {\n          clearTimeout(this.transitionFinishTimeout);\n        }\n\n        this.transitionFinishTimeout = setTimeout(eventHandler, this.props.platform === ANDROID || this.props.platform === VKCOM ? 300 : 600);\n      }\n    }\n  }, {\n    key: \"blurActiveElement\",\n    value: function blurActiveElement() {\n      var _this$document;\n\n      if (typeof this.window !== \"undefined\" && (_this$document = this.document) !== null && _this$document !== void 0 && _this$document.activeElement) {\n        this.document.activeElement.blur();\n      }\n    }\n  }, {\n    key: \"pickPanel\",\n    value: function pickPanel(id) {\n      if (id === null) {\n        return undefined;\n      }\n\n      return this.panelNodes[id];\n    }\n  }, {\n    key: \"flushTransition\",\n    value: function flushTransition(prevPanel, isBack) {\n      var _this3 = this;\n\n      var activePanel = this.props.activePanel;\n\n      if (isBack) {\n        this.scrolls[prevPanel] = 0;\n      }\n\n      this.setState({\n        prevPanel: null,\n        nextPanel: null,\n        visiblePanels: [activePanel],\n        activePanel: activePanel,\n        animated: false,\n        isBack: undefined\n      }, function () {\n        var _this3$props$scroll;\n\n        (_this3$props$scroll = _this3.props.scroll) === null || _this3$props$scroll === void 0 ? void 0 : _this3$props$scroll.scrollTo(0, isBack ? _this3.scrolls[activePanel] : 0);\n        _this3.props.onTransition && _this3.props.onTransition({\n          isBack: isBack,\n          from: prevPanel,\n          to: activePanel\n        });\n      });\n    }\n  }, {\n    key: \"onSwipeBackSuccess\",\n    value: function onSwipeBackSuccess() {\n      this.props.onSwipeBack && this.props.onSwipeBack();\n    }\n  }, {\n    key: \"onSwipeBackCancel\",\n    value: function onSwipeBackCancel() {\n      this.props.onSwipeBackCancel && this.props.onSwipeBackCancel();\n      this.setState({\n        swipeBackPrevPanel: null,\n        swipeBackNextPanel: null,\n        swipingBack: false,\n        swipeBackResult: null,\n        swipebackStartX: 0,\n        swipeBackShift: 0\n      });\n    }\n  }, {\n    key: \"calcPanelSwipeStyles\",\n    value: function calcPanelSwipeStyles(panelId) {\n      if (!canUseDOM || !this.window) {\n        return {};\n      }\n\n      var isPrev = panelId === this.state.swipeBackPrevPanel;\n      var isNext = panelId === this.state.swipeBackNextPanel;\n\n      if (!isPrev && !isNext || this.state.swipeBackResult) {\n        return {};\n      }\n\n      var prevPanelTranslate = \"\".concat(this.state.swipeBackShift, \"px\");\n      var nextPanelTranslate = \"\".concat(-50 + this.state.swipeBackShift * 100 / this.window.innerWidth / 2, \"%\");\n      var prevPanelShadow = 0.3 * (this.window.innerWidth - this.state.swipeBackShift) / this.window.innerWidth;\n\n      if (this.state.swipeBackResult) {\n        return isPrev ? {\n          boxShadow: \"-2px 0 12px rgba(0, 0, 0, \".concat(prevPanelShadow, \")\")\n        } : {};\n      }\n\n      if (isNext) {\n        return {\n          transform: \"translate3d(\".concat(nextPanelTranslate, \", 0, 0)\"),\n          WebkitTransform: \"translate3d(\".concat(nextPanelTranslate, \", 0, 0)\")\n        };\n      }\n\n      if (isPrev) {\n        return {\n          transform: \"translate3d(\".concat(prevPanelTranslate, \", 0, 0)\"),\n          WebkitTransform: \"translate3d(\".concat(prevPanelTranslate, \", 0, 0)\"),\n          boxShadow: \"-2px 0 12px rgba(0, 0, 0, \".concat(prevPanelShadow, \")\")\n        };\n      }\n\n      return {};\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props3 = this.props,\n          popout = _this$props3.popout,\n          modal = _this$props3.modal,\n          platform = _this$props3.platform,\n          _1 = _this$props3.activePanel,\n          splitCol = _this$props3.splitCol,\n          configProvider = _this$props3.configProvider,\n          history = _this$props3.history,\n          nav = _this$props3.nav,\n          onTransition = _this$props3.onTransition,\n          onSwipeBack = _this$props3.onSwipeBack,\n          onSwipeBackStart = _this$props3.onSwipeBackStart,\n          onSwipeBackCancel = _this$props3.onSwipeBackCancel,\n          window = _this$props3.window,\n          document = _this$props3.document,\n          scroll = _this$props3.scroll,\n          restProps = _objectWithoutProperties(_this$props3, _excluded);\n\n      var _this$state = this.state,\n          prevPanel = _this$state.prevPanel,\n          nextPanel = _this$state.nextPanel,\n          activePanel = _this$state.activePanel,\n          swipeBackPrevPanel = _this$state.swipeBackPrevPanel,\n          swipeBackNextPanel = _this$state.swipeBackNextPanel,\n          swipeBackResult = _this$state.swipeBackResult,\n          isBack = _this$state.isBack,\n          animated = _this$state.animated;\n      var hasPopout = !!popout;\n      var hasModal = !!modal;\n      var panels = this.panels.filter(function (panel) {\n        var panelId = getNavId(panel.props, warn);\n        return panelId !== undefined && _this4.state.visiblePanels.includes(panelId) || panelId === swipeBackPrevPanel || panelId === swipeBackNextPanel;\n      });\n      var disableAnimation = this.shouldDisableTransitionMotion();\n      var modifiers = {\n        \"View--animated\": !disableAnimation && animated,\n        \"View--swiping-back\": !disableAnimation && this.state.swipingBack,\n        \"View--no-motion\": disableAnimation\n      };\n      return createScopedElement(Touch, _extends({\n        Component: \"section\"\n      }, restProps, {\n        vkuiClass: classNames(getClassName(\"View\", platform), modifiers),\n        onMoveX: this.onMoveX,\n        onEnd: this.onEnd\n      }), createScopedElement(\"div\", {\n        vkuiClass: \"View__panels\"\n      }, panels.map(function (panel) {\n        var _this4$scrolls;\n\n        var panelId = getNavId(panel.props, warn);\n        var isPrev = panelId === prevPanel || panelId === swipeBackPrevPanel;\n        var isTransitionTarget = animated && panelId === (isBack ? prevPanel : nextPanel);\n        var compensateScroll = isPrev || panelId === swipeBackNextPanel || panelId === nextPanel && isBack;\n        return createScopedElement(\"div\", {\n          vkuiClass: classNames(\"View__panel\", {\n            \"View__panel--active\": panelId === activePanel,\n            \"View__panel--prev\": panelId === prevPanel,\n            \"View__panel--next\": panelId === nextPanel,\n            \"View__panel--swipe-back-prev\": panelId === swipeBackPrevPanel,\n            \"View__panel--swipe-back-next\": panelId === swipeBackNextPanel,\n            \"View__panel--swipe-back-success\": swipeBackResult === SwipeBackResults.success,\n            \"View__panel--swipe-back-failed\": swipeBackResult === SwipeBackResults.fail\n          }),\n          onAnimationEnd: isTransitionTarget ? _this4.transitionEndHandler : undefined,\n          ref: function ref(el) {\n            return panelId !== undefined && (_this4.panelNodes[panelId] = el);\n          },\n          style: _this4.calcPanelSwipeStyles(panelId),\n          key: panelId\n        }, createScopedElement(\"div\", {\n          vkuiClass: \"View__panel-in\",\n          style: {\n            marginTop: compensateScroll ? -((_this4$scrolls = _this4.scrolls[panelId]) !== null && _this4$scrolls !== void 0 ? _this4$scrolls : 0) : undefined\n          }\n        }, createScopedElement(NavTransitionProvider, {\n          entering: panelId === nextPanel || panelId === swipeBackNextPanel\n        }, panel)));\n      })), createScopedElement(AppRootPortal, null, hasPopout && createScopedElement(\"div\", {\n        vkuiClass: \"View__popout\"\n      }, popout), hasModal && createScopedElement(\"div\", {\n        vkuiClass: \"View__modal\"\n      }, modal)));\n    }\n  }]);\n\n  return View;\n}(React.Component); // eslint-disable-next-line import/no-default-export\n\n\n_defineProperty(View, \"defaultProps\", {\n  history: []\n});\n\nexport default withContext(withContext(withContext(withPlatform(withDOM(View)), SplitColContext, \"splitCol\"), ConfigProviderContext, \"configProvider\"), ScrollContext, \"scroll\");","map":{"version":3,"mappings":"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","names":["React","classNames","transitionEvent","animationEvent","getClassName","IOS","ANDROID","VKCOM","Touch","withPlatform","withContext","ConfigProviderContext","SplitColContext","AppRootPortal","canUseDOM","withDOM","ScrollContext","NavTransitionProvider","getNavId","warnOnce","swipeBackExcluded","SwipeBackResults","scrollsCache","warn","View","props","_classCallCheck","_this","_defineProperty","undefined","e","includes","animationName","state","prevPanel","flushTransition","Boolean","isBack","propertyName","target","pickPanel","swipeBackNextPanel","swipeBackResult","fail","onSwipeBackCancel","success","onSwipeBackSuccess","platform","configProvider","isWebView","startX","window","innerWidth","browserSwipe","setState","onSwipeBack","animated","swipingBack","history","_this$props$history","length","activePanel","scrolls","scroll","_this$props$scroll","getScroll","y","swipebackStartX","swipeBackPrevPanel","slice","swipeBackShift","shiftX","_this$window","speed","duration","_this$window2","visiblePanels","nextPanel","document","Children","toArray","children","process","env","NODE_ENV","popout","modal","id","prevProps","prevState","blurActiveElement","firstLayerId","panels","map","panel","find","_this2","_this$props$scroll2","shouldDisableTransitionMotion","supported","animationFinishTimeout","clearTimeout","setTimeout","transitionEndHandler","scrollTo","onTransition","from","to","onSwipeBackStart","waitTransitionFinish","swipingBackTransitionEndHandler","transitionMotionEnabled","splitCol","_this$props$splitCol","animate","elem","eventHandler","name","removeEventListener","addEventListener","transitionFinishTimeout","_this$document","activeElement","blur","panelNodes","_this3","panelId","isPrev","isNext","prevPanelTranslate","nextPanelTranslate","prevPanelShadow","boxShadow","transform","WebkitTransform","_1","nav","restProps","hasPopout","hasModal","filter","_this4","disableAnimation","modifiers","createScopedElement","Component","vkuiClass","onMoveX","onEnd","isTransitionTarget","compensateScroll","onAnimationEnd","ref","el","style","calcPanelSwipeStyles","key","marginTop","entering"],"sources":["/Users/al.balandin/code/vkvideo-test/node_modules/@vkontakte/vkui/src/components/View/View.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { transitionEvent, animationEvent } from \"../../lib/supportEvents\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { IOS, ANDROID, VKCOM } from \"../../lib/platform\";\nimport { Touch, TouchEvent } from \"../Touch/Touch\";\nimport { HasPlatform } from \"../../types\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\nimport { withContext } from \"../../hoc/withContext\";\nimport {\n  ConfigProviderContext,\n  ConfigProviderContextInterface,\n} from \"../ConfigProvider/ConfigProviderContext\";\nimport { SplitColContext, SplitColContextProps } from \"../SplitCol/SplitCol\";\nimport { AppRootPortal } from \"../AppRoot/AppRootPortal\";\nimport { canUseDOM, withDOM, DOMProps } from \"../../lib/dom\";\nimport {\n  ScrollContext,\n  ScrollContextInterface,\n} from \"../AppRoot/ScrollContext\";\nimport { NavTransitionProvider } from \"../NavTransitionContext/NavTransitionContext\";\nimport { getNavId, NavIdProps } from \"../../lib/getNavId\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { swipeBackExcluded } from \"./utils\";\nimport \"./View.css\";\n\nenum SwipeBackResults {\n  fail = 1,\n  success,\n}\n\ninterface Scrolls {\n  [index: string]: number | undefined;\n}\n\ninterface ViewsScrolls {\n  [index: string]: Scrolls;\n}\n\ntype TransitionEventHandler = (e?: TransitionEvent) => void;\n\nexport let scrollsCache: ViewsScrolls = {};\n\nexport interface ViewProps\n  extends React.HTMLAttributes<HTMLElement>,\n    HasPlatform,\n    NavIdProps {\n  activePanel: string;\n  /**\n   * @deprecated будет удалено в 5.0.0. Используйте одноименное свойство у `SplitLayout`.\n   *\n   * Свойство для отрисовки `Alert`, `ActionSheet` и `ScreenSpinner`.\n   */\n  popout?: React.ReactNode;\n  /**\n   * @deprecated будет удалено в 5.0.0. Используйте одноименное свойство у `SplitLayout`.\n   *\n   * Свойство для отрисовки `ModalRoot`.\n   */\n  modal?: React.ReactNode;\n  onTransition?(params: { isBack: boolean; from: string; to: string }): void;\n  /**\n   * callback свайпа назад\n   */\n  onSwipeBack?(): void;\n  /**\n   * callback начала анимации свайпа назад.\n   */\n  onSwipeBackStart?(): void;\n  /**\n   * callback завершения анимации отмененного пользователем свайпа\n   */\n  onSwipeBackCancel?(): void;\n  history?: string[];\n  /**\n   * @ignore\n   */\n  splitCol?: SplitColContextProps;\n  /**\n   * @ignore\n   */\n  configProvider?: ConfigProviderContextInterface;\n  /**\n   * @ignore\n   */\n  scroll?: ScrollContextInterface;\n}\n\nexport interface ViewState {\n  animated: boolean;\n\n  visiblePanels: string[];\n  activePanel: string | null;\n  isBack: boolean | undefined;\n  prevPanel: string | null;\n  nextPanel: string | null;\n\n  swipingBack: boolean;\n  swipebackStartX: number;\n  swipeBackShift: number;\n  swipeBackNextPanel: string | null;\n  swipeBackPrevPanel: string | null;\n  swipeBackResult: SwipeBackResults | null;\n\n  browserSwipe: boolean;\n}\n\nconst warn = warnOnce(\"View\");\nclass View extends React.Component<ViewProps & DOMProps, ViewState> {\n  constructor(props: ViewProps) {\n    super(props);\n\n    this.state = {\n      animated: false,\n\n      visiblePanels: [props.activePanel],\n      activePanel: props.activePanel,\n      isBack: undefined,\n      prevPanel: null,\n      nextPanel: null,\n\n      swipingBack: false,\n      swipebackStartX: 0,\n      swipeBackShift: 0,\n      swipeBackNextPanel: null,\n      swipeBackPrevPanel: null,\n      swipeBackResult: null,\n\n      browserSwipe: false,\n    };\n  }\n\n  static defaultProps: Partial<ViewProps> = {\n    history: [],\n  };\n\n  private readonly scrolls = scrollsCache[getNavId(this.props) as string] || {};\n  private transitionFinishTimeout: number | undefined = undefined;\n  private animationFinishTimeout: number | undefined = undefined;\n\n  get document() {\n    return this.props.document;\n  }\n\n  get window() {\n    return this.props.window;\n  }\n\n  get panels() {\n    return React.Children.toArray(this.props.children) as React.ReactElement[];\n  }\n\n  panelNodes: { [id: string]: HTMLDivElement | null } = {};\n\n  componentDidMount() {\n    if (process.env.NODE_ENV === \"development\") {\n      const { popout, modal } = this.props;\n      popout &&\n        warn(\n          \"Свойство popout устарело и будет удалено в 5.0.0. Используйте одноименное свойство у SplitLayout.\"\n        );\n      modal &&\n        warn(\n          \"Свойство modal устарело и будет удалено в 5.0.0. Используйте одноименное свойство у SplitLayout.\"\n        );\n    }\n  }\n\n  componentWillUnmount() {\n    const id = getNavId(this.props);\n    if (id) {\n      scrollsCache[id] = this.scrolls;\n    }\n  }\n\n  componentDidUpdate(prevProps: ViewProps, prevState: ViewState) {\n    this.props.popout && !prevProps.popout && this.blurActiveElement();\n    this.props.modal && !prevProps.modal && this.blurActiveElement();\n\n    // Нужен переход\n    if (\n      prevProps.activePanel !== this.props.activePanel &&\n      !prevState.swipingBack &&\n      !prevState.browserSwipe\n    ) {\n      const firstLayerId = this.panels\n        .map((panel) => getNavId(panel.props, warn))\n        .find(\n          (id) => id === prevProps.activePanel || id === this.props.activePanel\n        );\n\n      const isBack = firstLayerId === this.props.activePanel;\n      this.scrolls[prevProps.activePanel] = this.props.scroll?.getScroll().y;\n\n      if (this.shouldDisableTransitionMotion()) {\n        this.flushTransition(prevProps.activePanel, isBack);\n      } else {\n        this.blurActiveElement();\n\n        this.setState({\n          visiblePanels: [prevProps.activePanel, this.props.activePanel],\n          prevPanel: prevProps.activePanel,\n          nextPanel: this.props.activePanel,\n          activePanel: null,\n          animated: true,\n          isBack,\n        });\n\n        // Фолбек анимации перехода\n        if (!animationEvent.supported) {\n          if (this.animationFinishTimeout) {\n            clearTimeout(this.animationFinishTimeout);\n          }\n          this.animationFinishTimeout = setTimeout(\n            this.transitionEndHandler,\n            this.props.platform === ANDROID || this.props.platform === VKCOM\n              ? 300\n              : 600\n          );\n        }\n      }\n    }\n\n    // Закончилась анимация свайпа назад\n    if (\n      prevProps.activePanel !== this.props.activePanel &&\n      prevState.swipingBack\n    ) {\n      const nextPanel = this.props.activePanel;\n      const prevPanel = prevProps.activePanel;\n      if (prevState.swipeBackPrevPanel !== null) {\n        this.scrolls[prevState.swipeBackPrevPanel] = 0;\n      }\n      this.setState(\n        {\n          swipeBackPrevPanel: null,\n          swipeBackNextPanel: null,\n          swipingBack: false,\n          swipeBackResult: null,\n          swipebackStartX: 0,\n          swipeBackShift: 0,\n          activePanel: nextPanel,\n          visiblePanels: [nextPanel],\n        },\n        () => {\n          if (this.state.activePanel !== null) {\n            this.props.scroll?.scrollTo(\n              0,\n              this.scrolls[this.state.activePanel]\n            );\n          }\n          prevProps.onTransition &&\n            prevProps.onTransition({\n              isBack: true,\n              from: prevPanel,\n              to: nextPanel,\n            });\n        }\n      );\n    }\n\n    // Начался свайп назад\n    if (!prevState.swipingBack && this.state.swipingBack) {\n      this.props.onSwipeBackStart && this.props.onSwipeBackStart();\n    }\n\n    // Началась анимация завершения свайпа назад.\n    if (!prevState.swipeBackResult && this.state.swipeBackResult) {\n      this.waitTransitionFinish(\n        this.pickPanel(this.state.swipeBackNextPanel),\n        this.swipingBackTransitionEndHandler\n      );\n    }\n\n    // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n    if (\n      prevState.swipeBackResult === SwipeBackResults.fail &&\n      !this.state.swipeBackResult &&\n      this.state.activePanel !== null\n    ) {\n      this.props.scroll?.scrollTo(0, this.scrolls[this.state.activePanel]);\n    }\n\n    // Закончился Safari свайп\n    if (\n      prevProps.activePanel !== this.props.activePanel &&\n      this.state.browserSwipe\n    ) {\n      this.setState({\n        browserSwipe: false,\n        nextPanel: null,\n        prevPanel: null,\n        animated: false,\n        visiblePanels: [this.props.activePanel],\n        activePanel: this.props.activePanel,\n      });\n    }\n  }\n\n  shouldDisableTransitionMotion(): boolean {\n    return (\n      this.props.configProvider?.transitionMotionEnabled === false ||\n      !this.props.splitCol?.animate\n    );\n  }\n\n  waitTransitionFinish(\n    elem: HTMLElement | null | undefined,\n    eventHandler: TransitionEventHandler\n  ): void {\n    if (transitionEvent.supported && transitionEvent.name && elem) {\n      elem.removeEventListener(\n        transitionEvent.name as keyof HTMLElementEventMap,\n        eventHandler as EventListener\n      );\n      elem.addEventListener(\n        transitionEvent.name as keyof HTMLElementEventMap,\n        eventHandler as EventListener\n      );\n    } else {\n      if (this.transitionFinishTimeout) {\n        clearTimeout(this.transitionFinishTimeout);\n      }\n      this.transitionFinishTimeout = setTimeout(\n        eventHandler,\n        this.props.platform === ANDROID || this.props.platform === VKCOM\n          ? 300\n          : 600\n      );\n    }\n  }\n\n  blurActiveElement(): void {\n    if (typeof this.window !== \"undefined\" && this.document?.activeElement) {\n      (this.document.activeElement as HTMLElement).blur();\n    }\n  }\n\n  pickPanel(id: string | null) {\n    if (id === null) {\n      return undefined;\n    }\n    return this.panelNodes[id];\n  }\n\n  flushTransition(prevPanel: string, isBack: boolean) {\n    const activePanel = this.props.activePanel;\n    if (isBack) {\n      this.scrolls[prevPanel] = 0;\n    }\n    this.setState(\n      {\n        prevPanel: null,\n        nextPanel: null,\n        visiblePanels: [activePanel],\n        activePanel,\n        animated: false,\n        isBack: undefined,\n      },\n      () => {\n        this.props.scroll?.scrollTo(0, isBack ? this.scrolls[activePanel] : 0);\n        this.props.onTransition &&\n          this.props.onTransition({ isBack, from: prevPanel, to: activePanel });\n      }\n    );\n  }\n\n  transitionEndHandler = (e?: React.AnimationEvent): void => {\n    if (\n      (!e ||\n        [\n          \"vkui-animation-ios-next-forward\",\n          \"vkui-animation-ios-prev-back\",\n          \"vkui-animation-view-next-forward\",\n          \"vkui-animation-view-prev-back\",\n        ].includes(e.animationName)) &&\n      this.state.prevPanel !== null\n    ) {\n      this.flushTransition(this.state.prevPanel, Boolean(this.state.isBack));\n    }\n  };\n\n  swipingBackTransitionEndHandler = (e?: TransitionEvent): void => {\n    // indexOf because of vendor prefixes in old browsers\n    if (\n      !e ||\n      (e?.propertyName.includes(\"transform\") &&\n        e?.target === this.pickPanel(this.state.swipeBackNextPanel))\n    ) {\n      switch (this.state.swipeBackResult) {\n        case SwipeBackResults.fail:\n          this.onSwipeBackCancel();\n          break;\n        case SwipeBackResults.success:\n          this.onSwipeBackSuccess();\n      }\n    }\n  };\n\n  onSwipeBackSuccess(): void {\n    this.props.onSwipeBack && this.props.onSwipeBack();\n  }\n\n  onSwipeBackCancel(): void {\n    this.props.onSwipeBackCancel && this.props.onSwipeBackCancel();\n    this.setState({\n      swipeBackPrevPanel: null,\n      swipeBackNextPanel: null,\n      swipingBack: false,\n      swipeBackResult: null,\n      swipebackStartX: 0,\n      swipeBackShift: 0,\n    });\n  }\n\n  onMoveX = (e: TouchEvent): void => {\n    if (swipeBackExcluded(e)) {\n      return;\n    }\n\n    const { platform, configProvider } = this.props;\n\n    if (\n      platform === IOS &&\n      !configProvider?.isWebView &&\n      (e.startX <= 70 || e.startX >= this.window!.innerWidth - 70) &&\n      !this.state.browserSwipe\n    ) {\n      this.setState({ browserSwipe: true });\n    }\n\n    if (\n      platform === IOS &&\n      configProvider?.isWebView &&\n      this.props.onSwipeBack\n    ) {\n      if ((this.state.animated && e.startX <= 70) || !this.window) {\n        return;\n      }\n\n      if (\n        e.startX <= 70 &&\n        !this.state.swipingBack &&\n        (this.props.history?.length ?? 0) > 1\n      ) {\n        if (this.state.activePanel !== null) {\n          this.scrolls[this.state.activePanel] =\n            this.props.scroll?.getScroll().y;\n        }\n        this.setState({\n          swipingBack: true,\n          swipebackStartX: e.startX,\n          swipeBackPrevPanel: this.state.activePanel,\n          swipeBackNextPanel: this.props.history!.slice(-2)[0],\n        });\n      }\n      if (this.state.swipingBack) {\n        let swipeBackShift = 0;\n        if (e.shiftX < 0) {\n          swipeBackShift = 0;\n        } else if (\n          e.shiftX >\n          this.window.innerWidth - this.state.swipebackStartX\n        ) {\n          swipeBackShift = this.window?.innerWidth;\n        } else {\n          swipeBackShift = e.shiftX;\n        }\n        this.setState({ swipeBackShift });\n      }\n    }\n  };\n\n  onEnd = (e: TouchEvent): void => {\n    if (this.state.swipingBack && this.window) {\n      const speed = (this.state.swipeBackShift / e.duration) * 1000;\n      if (this.state.swipeBackShift === 0) {\n        this.onSwipeBackCancel();\n      } else if (this.state.swipeBackShift >= (this.window?.innerWidth ?? 0)) {\n        this.onSwipeBackSuccess();\n      } else if (\n        speed > 250 ||\n        this.state.swipebackStartX + this.state.swipeBackShift >\n          this.window.innerWidth / 2\n      ) {\n        this.setState({ swipeBackResult: SwipeBackResults.success });\n      } else {\n        this.setState({ swipeBackResult: SwipeBackResults.fail });\n      }\n    }\n  };\n\n  calcPanelSwipeStyles(panelId: string | undefined): React.CSSProperties {\n    if (!canUseDOM || !this.window) {\n      return {};\n    }\n\n    const isPrev = panelId === this.state.swipeBackPrevPanel;\n    const isNext = panelId === this.state.swipeBackNextPanel;\n\n    if ((!isPrev && !isNext) || this.state.swipeBackResult) {\n      return {};\n    }\n\n    let prevPanelTranslate = `${this.state.swipeBackShift}px`;\n    let nextPanelTranslate = `${\n      -50 + (this.state.swipeBackShift * 100) / this.window.innerWidth / 2\n    }%`;\n    let prevPanelShadow =\n      (0.3 * (this.window.innerWidth - this.state.swipeBackShift)) /\n      this.window.innerWidth;\n\n    if (this.state.swipeBackResult) {\n      return isPrev\n        ? { boxShadow: `-2px 0 12px rgba(0, 0, 0, ${prevPanelShadow})` }\n        : {};\n    }\n\n    if (isNext) {\n      return {\n        transform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n      };\n    }\n    if (isPrev) {\n      return {\n        transform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        boxShadow: `-2px 0 12px rgba(0, 0, 0, ${prevPanelShadow})`,\n      };\n    }\n\n    return {};\n  }\n\n  render() {\n    const {\n      popout,\n      modal,\n      platform,\n      activePanel: _1,\n      splitCol,\n      configProvider,\n      history,\n      nav,\n      onTransition,\n      onSwipeBack,\n      onSwipeBackStart,\n      onSwipeBackCancel,\n      window,\n      document,\n      scroll,\n      ...restProps\n    } = this.props;\n    const {\n      prevPanel,\n      nextPanel,\n      activePanel,\n      swipeBackPrevPanel,\n      swipeBackNextPanel,\n      swipeBackResult,\n      isBack,\n      animated,\n    } = this.state;\n\n    const hasPopout = !!popout;\n    const hasModal = !!modal;\n\n    const panels = this.panels.filter((panel: React.ReactElement) => {\n      const panelId = getNavId(panel.props, warn);\n\n      return (\n        (panelId !== undefined && this.state.visiblePanels.includes(panelId)) ||\n        panelId === swipeBackPrevPanel ||\n        panelId === swipeBackNextPanel\n      );\n    });\n\n    const disableAnimation = this.shouldDisableTransitionMotion();\n\n    const modifiers = {\n      \"View--animated\": !disableAnimation && animated,\n      \"View--swiping-back\": !disableAnimation && this.state.swipingBack,\n      \"View--no-motion\": disableAnimation,\n    };\n\n    return (\n      <Touch\n        Component=\"section\"\n        {...restProps}\n        vkuiClass={classNames(getClassName(\"View\", platform), modifiers)}\n        onMoveX={this.onMoveX}\n        onEnd={this.onEnd}\n      >\n        <div vkuiClass=\"View__panels\">\n          {panels.map((panel: React.ReactElement) => {\n            const panelId = getNavId(panel.props, warn);\n            const isPrev =\n              panelId === prevPanel || panelId === swipeBackPrevPanel;\n            const isTransitionTarget =\n              animated && panelId === (isBack ? prevPanel : nextPanel);\n            const compensateScroll =\n              isPrev ||\n              panelId === swipeBackNextPanel ||\n              (panelId === nextPanel && isBack);\n\n            return (\n              <div\n                vkuiClass={classNames(\"View__panel\", {\n                  \"View__panel--active\": panelId === activePanel,\n                  \"View__panel--prev\": panelId === prevPanel,\n                  \"View__panel--next\": panelId === nextPanel,\n                  \"View__panel--swipe-back-prev\":\n                    panelId === swipeBackPrevPanel,\n                  \"View__panel--swipe-back-next\":\n                    panelId === swipeBackNextPanel,\n                  \"View__panel--swipe-back-success\":\n                    swipeBackResult === SwipeBackResults.success,\n                  \"View__panel--swipe-back-failed\":\n                    swipeBackResult === SwipeBackResults.fail,\n                })}\n                onAnimationEnd={\n                  isTransitionTarget ? this.transitionEndHandler : undefined\n                }\n                ref={(el) =>\n                  panelId !== undefined && (this.panelNodes[panelId] = el)\n                }\n                style={this.calcPanelSwipeStyles(panelId)}\n                key={panelId}\n              >\n                <div\n                  vkuiClass=\"View__panel-in\"\n                  style={{\n                    marginTop: compensateScroll\n                      ? -(this.scrolls[panelId as string] ?? 0)\n                      : undefined,\n                  }}\n                >\n                  <NavTransitionProvider\n                    entering={\n                      panelId === nextPanel || panelId === swipeBackNextPanel\n                    }\n                  >\n                    {panel}\n                  </NavTransitionProvider>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <AppRootPortal>\n          {hasPopout && <div vkuiClass=\"View__popout\">{popout}</div>}\n          {hasModal && <div vkuiClass=\"View__modal\">{modal}</div>}\n        </AppRootPortal>\n      </Touch>\n    );\n  }\n}\n\n// eslint-disable-next-line import/no-default-export\nexport default withContext(\n  withContext(\n    withContext(\n      withPlatform(withDOM<ViewProps>(View)),\n      SplitColContext,\n      \"splitCol\"\n    ),\n    ConfigProviderContext,\n    \"configProvider\"\n  ),\n  ScrollContext,\n  \"scroll\"\n);\n"]},"metadata":{},"sourceType":"module"}