{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"className\", \"style\", \"before\", \"inlineAfter\", \"after\", \"value\", \"onChange\", \"getRootRef\", \"getRef\", \"onHeightChange\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { hasReactNode, isFunction } from \"../../lib/utils\";\nimport { useDOM } from \"../../lib/dom\";\nimport { getClassName } from \"../../helpers/getClassName\";\nexport var WriteBar = function WriteBar(props) {\n  var platform = usePlatform();\n\n  var className = props.className,\n      style = props.style,\n      before = props.before,\n      inlineAfter = props.inlineAfter,\n      after = props.after,\n      value = props.value,\n      onChange = props.onChange,\n      getRootRef = props.getRootRef,\n      getRef = props.getRef,\n      onHeightChange = props.onHeightChange,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var isControlledOutside = value != null;\n\n  var _useDOM = useDOM(),\n      window = _useDOM.window;\n\n  var textareaRef = useExternRef(getRef);\n  var textareaMinHeightRef = React.useRef(null);\n  var resize = React.useCallback(function () {\n    var textareaEl = textareaRef.current;\n\n    if (!textareaEl) {\n      return;\n    }\n\n    var offsetHeight = textareaEl.offsetHeight,\n        scrollHeight = textareaEl.scrollHeight;\n    var style = window.getComputedStyle(textareaEl);\n    var paddingTop = parseInt(style.paddingTop);\n    var paddingBottom = parseInt(style.paddingBottom);\n\n    if (textareaMinHeightRef.current === null) {\n      textareaMinHeightRef.current = offsetHeight;\n    }\n\n    var diff = paddingTop + paddingBottom + 10;\n\n    if (scrollHeight + diff <= offsetHeight) {\n      diff = 0;\n    }\n\n    textareaEl.style.height = \"0px\";\n    var height = textareaEl.scrollHeight - diff / 4;\n    textareaEl.style.height = String(Math.max(height, textareaMinHeightRef.current)) + \"px\";\n\n    if (isFunction(onHeightChange)) {\n      onHeightChange();\n    }\n  }, [onHeightChange, textareaRef, window]);\n\n  var onTextareaChange = function onTextareaChange(event) {\n    if (isFunction(onChange)) {\n      onChange(event);\n    }\n\n    if (!isControlledOutside) {\n      resize();\n    }\n  };\n\n  React.useEffect(function () {\n    resize();\n  }, [resize, value]);\n  return createScopedElement(\"div\", {\n    ref: getRootRef,\n    vkuiClass: getClassName(\"WriteBar\", platform),\n    className: className,\n    style: style\n  }, createScopedElement(\"form\", {\n    vkuiClass: \"WriteBar__form\",\n    onSubmit: function onSubmit(e) {\n      return e.preventDefault();\n    }\n  }, hasReactNode(before) && createScopedElement(\"div\", {\n    vkuiClass: \"WriteBar__before\"\n  }, before), createScopedElement(\"div\", {\n    vkuiClass: \"WriteBar__formIn\"\n  }, createScopedElement(\"textarea\", _extends({}, restProps, {\n    vkuiClass: \"WriteBar__textarea\",\n    onChange: onTextareaChange,\n    ref: textareaRef,\n    value: value\n  })), hasReactNode(inlineAfter) && createScopedElement(\"div\", {\n    vkuiClass: \"WriteBar__inlineAfter\"\n  }, inlineAfter)), hasReactNode(after) && createScopedElement(\"div\", {\n    vkuiClass: \"WriteBar__after\"\n  }, after)));\n};","map":{"version":3,"mappings":"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","names":["React","usePlatform","useExternRef","hasReactNode","isFunction","useDOM","getClassName","WriteBar","props","platform","className","style","before","inlineAfter","after","value","onChange","getRootRef","getRef","onHeightChange","restProps","isControlledOutside","window","textareaRef","textareaMinHeightRef","useRef","resize","useCallback","textareaEl","current","offsetHeight","scrollHeight","getComputedStyle","paddingTop","parseInt","paddingBottom","diff","height","String","Math","max","onTextareaChange","event","useEffect","createScopedElement","ref","vkuiClass","onSubmit","e","preventDefault"],"sources":["/Users/al.balandin/code/vkvideo-test/node_modules/@vkontakte/vkui/src/components/WriteBar/WriteBar.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { hasReactNode, isFunction } from \"../../lib/utils\";\nimport { useDOM } from \"../../lib/dom\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { HasRef, HasRootRef } from \"../../types\";\nimport \"./WriteBar.css\";\n\nexport interface WriteBarProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n    HasRootRef<HTMLDivElement>,\n    HasRef<HTMLTextAreaElement> {\n  /**\n   * Содержимое, отображаемое слева от поля ввода.\n   */\n  before?: React.ReactNode;\n  /**\n   * Содержимое, отображаемое поверх поля ввода (актуально для iOS)\n   */\n  inlineAfter?: React.ReactNode;\n  /**\n   * Содержимое, отображаемое справа от поля ввода\n   */\n  after?: React.ReactNode;\n  /**\n   * Вызывается при смене высоты поля ввода\n   */\n  onHeightChange?: VoidFunction;\n\n  children?: never;\n}\n\nexport const WriteBar: React.FC<WriteBarProps> = (props: WriteBarProps) => {\n  const platform = usePlatform();\n  const {\n    className,\n    style,\n\n    before,\n    inlineAfter,\n    after,\n\n    value,\n    onChange,\n\n    getRootRef,\n    getRef,\n    onHeightChange,\n    ...restProps\n  } = props;\n\n  const isControlledOutside = value != null;\n\n  const { window } = useDOM();\n  const textareaRef = useExternRef(getRef);\n  const textareaMinHeightRef = React.useRef<number | null>(null);\n\n  const resize = React.useCallback(() => {\n    const textareaEl = textareaRef.current;\n    if (!textareaEl) {\n      return;\n    }\n\n    const { offsetHeight, scrollHeight } = textareaEl;\n    const style = window!.getComputedStyle(textareaEl);\n    const paddingTop = parseInt(style.paddingTop);\n    const paddingBottom = parseInt(style.paddingBottom);\n\n    if (textareaMinHeightRef.current === null) {\n      textareaMinHeightRef.current = offsetHeight;\n    }\n\n    let diff = paddingTop + paddingBottom + 10;\n\n    if (scrollHeight + diff <= offsetHeight) {\n      diff = 0;\n    }\n\n    textareaEl.style.height = \"0px\";\n\n    const height = textareaEl.scrollHeight - diff / 4;\n    textareaEl.style.height =\n      String(Math.max(height, textareaMinHeightRef.current)) + \"px\";\n\n    if (isFunction(onHeightChange)) {\n      onHeightChange();\n    }\n  }, [onHeightChange, textareaRef, window]);\n\n  const onTextareaChange: React.ChangeEventHandler<HTMLTextAreaElement> = (\n    event\n  ) => {\n    if (isFunction(onChange)) {\n      onChange(event);\n    }\n\n    if (!isControlledOutside) {\n      resize();\n    }\n  };\n\n  React.useEffect(() => {\n    resize();\n  }, [resize, value]);\n\n  return (\n    <div\n      ref={getRootRef}\n      vkuiClass={getClassName(\"WriteBar\", platform)}\n      className={className}\n      style={style}\n    >\n      <form vkuiClass=\"WriteBar__form\" onSubmit={(e) => e.preventDefault()}>\n        {hasReactNode(before) && (\n          <div vkuiClass=\"WriteBar__before\">{before}</div>\n        )}\n\n        <div vkuiClass=\"WriteBar__formIn\">\n          <textarea\n            {...restProps}\n            vkuiClass=\"WriteBar__textarea\"\n            onChange={onTextareaChange}\n            ref={textareaRef}\n            value={value}\n          />\n\n          {hasReactNode(inlineAfter) && (\n            <div vkuiClass=\"WriteBar__inlineAfter\">{inlineAfter}</div>\n          )}\n        </div>\n\n        {hasReactNode(after) && <div vkuiClass=\"WriteBar__after\">{after}</div>}\n      </form>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}