{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"enableTime\", \"shouldDisableDate\", \"disableFuture\", \"disablePast\", \"value\", \"onChange\", \"calendarPlacement\", \"style\", \"className\", \"doneButtonText\", \"closeOnChange\", \"disablePickers\", \"getRootRef\", \"name\", \"autoFocus\", \"disabled\", \"onClick\", \"onFocus\", \"prevMonthAriaLabel\", \"nextMonthAriaLabel\", \"showNeighboringMonth\", \"size\", \"changeMonthAriaLabel\", \"changeYearAriaLabel\", \"changeDayAriaLabel\", \"changeHoursAriaLabel\", \"changeMinutesAriaLabel\", \"clearFieldAriaLabel\", \"showCalendarAriaLabel\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { format, isMatch, parse } from \"date-fns\";\nimport { Icon16Clear, Icon20CalendarOutline } from \"@vkontakte/icons\";\nimport { Calendar } from \"../Calendar/Calendar\";\nimport { Popper } from \"../Popper/Popper\";\nimport { multiRef } from \"../../lib/utils\";\nimport IconButton from \"../IconButton/IconButton\";\nimport { classNames } from \"../../lib/classNames\";\nimport { FormField } from \"../FormField/FormField\";\nimport { useDateInput } from \"../../hooks/useDateInput\";\nimport { InputLike } from \"../InputLike/InputLike\";\nimport { InputLikeDivider } from \"../InputLike/InputLikeDivider\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { callMultiple } from \"../../lib/callMultiple\";\n\nvar elementsConfig = function elementsConfig(index) {\n  var length = 2;\n  var min = 1;\n  var max = 0;\n\n  switch (index) {\n    case 0:\n      max = 31;\n      break;\n\n    case 1:\n      max = 12;\n      break;\n\n    case 2:\n      max = 2100;\n      min = 1900;\n      length = 4;\n      break;\n\n    case 3:\n      max = 23;\n      break;\n\n    case 4:\n      max = 59;\n      break;\n  }\n\n  return {\n    length: length,\n    min: min,\n    max: max\n  };\n};\n\nvar getInternalValue = function getInternalValue(value) {\n  var newValue = [\"\", \"\", \"\", \"\", \"\"];\n\n  if (value) {\n    newValue[0] = String(value.getDate()).padStart(2, \"0\");\n    newValue[1] = String(value.getMonth() + 1).padStart(2, \"0\");\n    newValue[2] = String(value.getFullYear()).padStart(4, \"0\");\n    newValue[3] = String(value.getHours()).padStart(2, \"0\");\n    newValue[4] = String(value.getMinutes()).padStart(2, \"0\");\n  }\n\n  return newValue;\n};\n\nexport var DateInput = function DateInput(_ref) {\n  var enableTime = _ref.enableTime,\n      shouldDisableDate = _ref.shouldDisableDate,\n      disableFuture = _ref.disableFuture,\n      disablePast = _ref.disablePast,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      _ref$calendarPlacemen = _ref.calendarPlacement,\n      calendarPlacement = _ref$calendarPlacemen === void 0 ? \"bottom-start\" : _ref$calendarPlacemen,\n      style = _ref.style,\n      className = _ref.className,\n      doneButtonText = _ref.doneButtonText,\n      _ref$closeOnChange = _ref.closeOnChange,\n      closeOnChange = _ref$closeOnChange === void 0 ? true : _ref$closeOnChange,\n      disablePickers = _ref.disablePickers,\n      getRootRef = _ref.getRootRef,\n      name = _ref.name,\n      autoFocus = _ref.autoFocus,\n      disabled = _ref.disabled,\n      onClick = _ref.onClick,\n      onFocus = _ref.onFocus,\n      prevMonthAriaLabel = _ref.prevMonthAriaLabel,\n      nextMonthAriaLabel = _ref.nextMonthAriaLabel,\n      showNeighboringMonth = _ref.showNeighboringMonth,\n      size = _ref.size,\n      _ref$changeMonthAriaL = _ref.changeMonthAriaLabel,\n      changeMonthAriaLabel = _ref$changeMonthAriaL === void 0 ? \"Изменить месяц\" : _ref$changeMonthAriaL,\n      _ref$changeYearAriaLa = _ref.changeYearAriaLabel,\n      changeYearAriaLabel = _ref$changeYearAriaLa === void 0 ? \"Изменить год\" : _ref$changeYearAriaLa,\n      _ref$changeDayAriaLab = _ref.changeDayAriaLabel,\n      changeDayAriaLabel = _ref$changeDayAriaLab === void 0 ? \"Изменить день\" : _ref$changeDayAriaLab,\n      _ref$changeHoursAriaL = _ref.changeHoursAriaLabel,\n      changeHoursAriaLabel = _ref$changeHoursAriaL === void 0 ? \"Изменить час\" : _ref$changeHoursAriaL,\n      _ref$changeMinutesAri = _ref.changeMinutesAriaLabel,\n      changeMinutesAriaLabel = _ref$changeMinutesAri === void 0 ? \"Изменить минуту\" : _ref$changeMinutesAri,\n      _ref$clearFieldAriaLa = _ref.clearFieldAriaLabel,\n      clearFieldAriaLabel = _ref$clearFieldAriaLa === void 0 ? \"Очистить поле\" : _ref$clearFieldAriaLa,\n      _ref$showCalendarAria = _ref.showCalendarAriaLabel,\n      showCalendarAriaLabel = _ref$showCalendarAria === void 0 ? \"Показать календарь\" : _ref$showCalendarAria,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var daysRef = React.useRef(null);\n  var monthsRef = React.useRef(null);\n  var yearsRef = React.useRef(null);\n  var hoursRef = React.useRef(null);\n  var minutesRef = React.useRef(null);\n  var maxElement = enableTime ? 4 : 2;\n  var onInternalValueChange = React.useCallback(function (internalValue) {\n    for (var i = 0; i <= maxElement; i += 1) {\n      if (internalValue[i].length < elementsConfig(i).length) {\n        return;\n      }\n    }\n\n    var formattedValue = \"\".concat(internalValue[0], \".\").concat(internalValue[1], \".\").concat(internalValue[2]);\n    var mask = \"dd.MM.yyyy\";\n\n    if (enableTime) {\n      formattedValue += \" \".concat(internalValue[3], \":\").concat(internalValue[4]);\n      mask += \" HH:mm\";\n    }\n\n    if (isMatch(formattedValue, mask)) {\n      onChange === null || onChange === void 0 ? void 0 : onChange(parse(formattedValue, mask, value !== null && value !== void 0 ? value : new Date()));\n    }\n  }, [enableTime, maxElement, onChange, value]);\n  var refs = React.useMemo(function () {\n    return [daysRef, monthsRef, yearsRef, hoursRef, minutesRef];\n  }, [daysRef, monthsRef, yearsRef, hoursRef, minutesRef]);\n\n  var _useDateInput = useDateInput({\n    maxElement: maxElement,\n    refs: refs,\n    autoFocus: autoFocus,\n    disabled: disabled,\n    elementsConfig: elementsConfig,\n    onChange: onChange,\n    onInternalValueChange: onInternalValueChange,\n    getInternalValue: getInternalValue,\n    value: value\n  }),\n      rootRef = _useDateInput.rootRef,\n      calendarRef = _useDateInput.calendarRef,\n      open = _useDateInput.open,\n      openCalendar = _useDateInput.openCalendar,\n      closeCalendar = _useDateInput.closeCalendar,\n      internalValue = _useDateInput.internalValue,\n      handleKeyDown = _useDateInput.handleKeyDown,\n      setFocusedElement = _useDateInput.setFocusedElement,\n      handleFieldEnter = _useDateInput.handleFieldEnter,\n      clear = _useDateInput.clear,\n      removeFocusFromField = _useDateInput.removeFocusFromField;\n\n  var _useAdaptivity = useAdaptivity(),\n      sizeY = _useAdaptivity.sizeY;\n\n  var onCalendarChange = React.useCallback(function (value) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(value);\n\n    if (closeOnChange && !enableTime) {\n      removeFocusFromField();\n    }\n  }, [onChange, removeFocusFromField, closeOnChange, enableTime]);\n  return createScopedElement(FormField, _extends({\n    vkuiClass: classNames(\"DateInput\", \"DateInput--sizeY-\".concat(sizeY)),\n    style: style,\n    className: className,\n    getRootRef: multiRef(rootRef, getRootRef),\n    after: value ? createScopedElement(IconButton, {\n      hoverMode: \"opacity\",\n      \"aria-label\": clearFieldAriaLabel,\n      onClick: clear\n    }, createScopedElement(Icon16Clear, null)) : createScopedElement(IconButton, {\n      hoverMode: \"opacity\",\n      \"aria-label\": showCalendarAriaLabel,\n      onClick: openCalendar\n    }, createScopedElement(Icon20CalendarOutline, null)),\n    disabled: disabled,\n    onClick: callMultiple(handleFieldEnter, onClick),\n    onFocus: callMultiple(handleFieldEnter, onFocus)\n  }, props), createScopedElement(\"input\", {\n    type: \"hidden\",\n    name: name,\n    value: value ? format(value, enableTime ? \"dd.MM.yyyy'T'HH:mm\" : \"dd.MM.yyyy\") : \"\"\n  }), createScopedElement(\"span\", {\n    vkuiClass: \"DateInput__input\",\n    onKeyDown: handleKeyDown\n  }, createScopedElement(InputLike, {\n    tabIndex: 1,\n    length: 2,\n    getRootRef: daysRef,\n    index: 0,\n    onElementSelect: setFocusedElement,\n    value: internalValue[0],\n    \"aria-label\": changeDayAriaLabel\n  }), createScopedElement(InputLikeDivider, null, \".\"), createScopedElement(InputLike, {\n    length: 2,\n    getRootRef: monthsRef,\n    index: 1,\n    onElementSelect: setFocusedElement,\n    value: internalValue[1],\n    \"aria-label\": changeMonthAriaLabel\n  }), createScopedElement(InputLikeDivider, null, \".\"), createScopedElement(InputLike, {\n    length: 4,\n    getRootRef: yearsRef,\n    index: 2,\n    onElementSelect: setFocusedElement,\n    value: internalValue[2],\n    \"aria-label\": changeYearAriaLabel\n  }), enableTime && createScopedElement(React.Fragment, null, createScopedElement(InputLikeDivider, {\n    vkuiClass: \"DateInput__input-time-divider\"\n  }, \" \"), createScopedElement(InputLike, {\n    length: 2,\n    getRootRef: hoursRef,\n    index: 3,\n    onElementSelect: setFocusedElement,\n    value: internalValue[3],\n    \"aria-label\": changeHoursAriaLabel\n  }), createScopedElement(InputLikeDivider, null, \":\"), createScopedElement(InputLike, {\n    length: 2,\n    getRootRef: minutesRef,\n    index: 4,\n    onElementSelect: setFocusedElement,\n    value: internalValue[4],\n    \"aria-label\": changeMinutesAriaLabel\n  }))), open && createScopedElement(Popper, {\n    targetRef: rootRef,\n    offsetDistance: 8,\n    placement: calendarPlacement\n  }, createScopedElement(Calendar, {\n    value: value,\n    onChange: onCalendarChange,\n    enableTime: enableTime,\n    disablePast: disablePast,\n    disableFuture: disableFuture,\n    shouldDisableDate: shouldDisableDate,\n    onClose: closeCalendar,\n    getRootRef: calendarRef,\n    doneButtonText: doneButtonText,\n    disablePickers: disablePickers,\n    changeHoursAriaLabel: changeHoursAriaLabel,\n    changeMinutesAriaLabel: changeMinutesAriaLabel,\n    prevMonthAriaLabel: prevMonthAriaLabel,\n    nextMonthAriaLabel: nextMonthAriaLabel,\n    changeMonthAriaLabel: changeMonthAriaLabel,\n    changeYearAriaLabel: changeYearAriaLabel,\n    changeDayAriaLabel: changeDayAriaLabel,\n    showNeighboringMonth: showNeighboringMonth,\n    size: size\n  })));\n};","map":{"version":3,"mappings":"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","names":["React","format","isMatch","parse","Icon16Clear","Icon20CalendarOutline","Calendar","Popper","multiRef","IconButton","classNames","FormField","useDateInput","InputLike","InputLikeDivider","useAdaptivity","callMultiple","elementsConfig","index","length","min","max","getInternalValue","value","newValue","String","getDate","padStart","getMonth","getFullYear","getHours","getMinutes","DateInput","enableTime","shouldDisableDate","disableFuture","disablePast","onChange","calendarPlacement","style","className","doneButtonText","closeOnChange","disablePickers","getRootRef","name","autoFocus","disabled","onClick","onFocus","prevMonthAriaLabel","nextMonthAriaLabel","showNeighboringMonth","size","changeMonthAriaLabel","changeYearAriaLabel","changeDayAriaLabel","changeHoursAriaLabel","changeMinutesAriaLabel","clearFieldAriaLabel","showCalendarAriaLabel","props","daysRef","useRef","monthsRef","yearsRef","hoursRef","minutesRef","maxElement","onInternalValueChange","useCallback","internalValue","i","formattedValue","mask","Date","refs","useMemo","rootRef","calendarRef","open","openCalendar","closeCalendar","handleKeyDown","setFocusedElement","handleFieldEnter","clear","removeFocusFromField","sizeY","onCalendarChange","createScopedElement","vkuiClass","after","hoverMode","type","onKeyDown","tabIndex","onElementSelect","Fragment","targetRef","offsetDistance","placement","onClose"],"sources":["/Users/al.balandin/code/vkvideo-test/node_modules/@vkontakte/vkui/src/components/DateInput/DateInput.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { format, isMatch, parse } from \"date-fns\";\nimport { Icon16Clear, Icon20CalendarOutline } from \"@vkontakte/icons\";\nimport { Calendar, CalendarProps } from \"../Calendar/Calendar\";\nimport { Popper, Placement } from \"../Popper/Popper\";\nimport { multiRef } from \"../../lib/utils\";\nimport IconButton from \"../IconButton/IconButton\";\nimport { classNames } from \"../../lib/classNames\";\nimport { FormField } from \"../FormField/FormField\";\nimport { HasRootRef } from \"../../types\";\nimport { useDateInput } from \"../../hooks/useDateInput\";\nimport { InputLike } from \"../InputLike/InputLike\";\nimport { InputLikeDivider } from \"../InputLike/InputLikeDivider\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { callMultiple } from \"../../lib/callMultiple\";\nimport \"./DateInput.css\";\n\nexport interface DateInputProps\n  extends Omit<\n      React.InputHTMLAttributes<HTMLDivElement>,\n      \"value\" | \"onChange\" | \"size\"\n    >,\n    Pick<\n      CalendarProps,\n      | \"disablePast\"\n      | \"disableFuture\"\n      | \"enableTime\"\n      | \"shouldDisableDate\"\n      | \"onChange\"\n      | \"value\"\n      | \"doneButtonText\"\n      | \"weekStartsOn\"\n      | \"disablePickers\"\n      | \"changeHoursAriaLabel\"\n      | \"changeMinutesAriaLabel\"\n      | \"prevMonthAriaLabel\"\n      | \"nextMonthAriaLabel\"\n      | \"changeMonthAriaLabel\"\n      | \"changeYearAriaLabel\"\n      | \"changeDayAriaLabel\"\n      | \"showNeighboringMonth\"\n      | \"size\"\n    >,\n    HasRootRef<HTMLDivElement> {\n  calendarPlacement?: Placement;\n  closeOnChange?: boolean;\n  clearFieldAriaLabel?: string;\n  showCalendarAriaLabel?: string;\n}\n\nconst elementsConfig = (index: number) => {\n  let length = 2;\n  let min = 1;\n  let max = 0;\n\n  switch (index) {\n    case 0:\n      max = 31;\n      break;\n    case 1:\n      max = 12;\n      break;\n    case 2:\n      max = 2100;\n      min = 1900;\n      length = 4;\n      break;\n    case 3:\n      max = 23;\n      break;\n    case 4:\n      max = 59;\n      break;\n  }\n\n  return { length, min, max };\n};\n\nconst getInternalValue = (value: CalendarProps[\"value\"]) => {\n  const newValue = [\"\", \"\", \"\", \"\", \"\"];\n  if (value) {\n    newValue[0] = String(value.getDate()).padStart(2, \"0\");\n    newValue[1] = String(value.getMonth() + 1).padStart(2, \"0\");\n    newValue[2] = String(value.getFullYear()).padStart(4, \"0\");\n    newValue[3] = String(value.getHours()).padStart(2, \"0\");\n    newValue[4] = String(value.getMinutes()).padStart(2, \"0\");\n  }\n  return newValue;\n};\n\nexport const DateInput: React.FC<DateInputProps> = ({\n  enableTime,\n  shouldDisableDate,\n  disableFuture,\n  disablePast,\n  value,\n  onChange,\n  calendarPlacement = \"bottom-start\",\n  style,\n  className,\n  doneButtonText,\n  closeOnChange = true,\n  disablePickers,\n  getRootRef,\n  name,\n  autoFocus,\n  disabled,\n  onClick,\n  onFocus,\n  prevMonthAriaLabel,\n  nextMonthAriaLabel,\n  showNeighboringMonth,\n  size,\n  changeMonthAriaLabel = \"Изменить месяц\",\n  changeYearAriaLabel = \"Изменить год\",\n  changeDayAriaLabel = \"Изменить день\",\n  changeHoursAriaLabel = \"Изменить час\",\n  changeMinutesAriaLabel = \"Изменить минуту\",\n  clearFieldAriaLabel = \"Очистить поле\",\n  showCalendarAriaLabel = \"Показать календарь\",\n  ...props\n}) => {\n  const daysRef = React.useRef<HTMLSpanElement>(null);\n  const monthsRef = React.useRef<HTMLSpanElement>(null);\n  const yearsRef = React.useRef<HTMLSpanElement>(null);\n  const hoursRef = React.useRef<HTMLSpanElement>(null);\n  const minutesRef = React.useRef<HTMLSpanElement>(null);\n\n  const maxElement = enableTime ? 4 : 2;\n\n  const onInternalValueChange = React.useCallback(\n    (internalValue: string[]) => {\n      for (let i = 0; i <= maxElement; i += 1) {\n        if (internalValue[i].length < elementsConfig(i).length) {\n          return;\n        }\n      }\n\n      let formattedValue = `${internalValue[0]}.${internalValue[1]}.${internalValue[2]}`;\n      let mask = \"dd.MM.yyyy\";\n      if (enableTime) {\n        formattedValue += ` ${internalValue[3]}:${internalValue[4]}`;\n        mask += \" HH:mm\";\n      }\n\n      if (isMatch(formattedValue, mask)) {\n        onChange?.(parse(formattedValue, mask, value ?? new Date()));\n      }\n    },\n    [enableTime, maxElement, onChange, value]\n  );\n\n  const refs = React.useMemo(\n    () => [daysRef, monthsRef, yearsRef, hoursRef, minutesRef],\n    [daysRef, monthsRef, yearsRef, hoursRef, minutesRef]\n  );\n\n  const {\n    rootRef,\n    calendarRef,\n    open,\n    openCalendar,\n    closeCalendar,\n    internalValue,\n    handleKeyDown,\n    setFocusedElement,\n    handleFieldEnter,\n    clear,\n    removeFocusFromField,\n  } = useDateInput({\n    maxElement,\n    refs,\n    autoFocus,\n    disabled,\n    elementsConfig,\n    onChange,\n    onInternalValueChange,\n    getInternalValue,\n    value,\n  });\n\n  const { sizeY } = useAdaptivity();\n\n  const onCalendarChange = React.useCallback(\n    (value?: Date | undefined) => {\n      onChange?.(value);\n      if (closeOnChange && !enableTime) {\n        removeFocusFromField();\n      }\n    },\n    [onChange, removeFocusFromField, closeOnChange, enableTime]\n  );\n\n  return (\n    <FormField\n      vkuiClass={classNames(\"DateInput\", `DateInput--sizeY-${sizeY}`)}\n      style={style}\n      className={className}\n      getRootRef={multiRef(rootRef, getRootRef)}\n      after={\n        value ? (\n          <IconButton\n            hoverMode=\"opacity\"\n            aria-label={clearFieldAriaLabel}\n            onClick={clear}\n          >\n            <Icon16Clear />\n          </IconButton>\n        ) : (\n          <IconButton\n            hoverMode=\"opacity\"\n            aria-label={showCalendarAriaLabel}\n            onClick={openCalendar}\n          >\n            <Icon20CalendarOutline />\n          </IconButton>\n        )\n      }\n      disabled={disabled}\n      onClick={callMultiple(handleFieldEnter, onClick)}\n      onFocus={callMultiple(handleFieldEnter, onFocus)}\n      {...props}\n    >\n      <input\n        type=\"hidden\"\n        name={name}\n        value={\n          value\n            ? format(value, enableTime ? \"dd.MM.yyyy'T'HH:mm\" : \"dd.MM.yyyy\")\n            : \"\"\n        }\n      />\n      <span vkuiClass=\"DateInput__input\" onKeyDown={handleKeyDown}>\n        <InputLike\n          tabIndex={1}\n          length={2}\n          getRootRef={daysRef}\n          index={0}\n          onElementSelect={setFocusedElement}\n          value={internalValue[0]}\n          aria-label={changeDayAriaLabel}\n        />\n        <InputLikeDivider>.</InputLikeDivider>\n        <InputLike\n          length={2}\n          getRootRef={monthsRef}\n          index={1}\n          onElementSelect={setFocusedElement}\n          value={internalValue[1]}\n          aria-label={changeMonthAriaLabel}\n        />\n        <InputLikeDivider>.</InputLikeDivider>\n        <InputLike\n          length={4}\n          getRootRef={yearsRef}\n          index={2}\n          onElementSelect={setFocusedElement}\n          value={internalValue[2]}\n          aria-label={changeYearAriaLabel}\n        />\n        {enableTime && (\n          <React.Fragment>\n            <InputLikeDivider vkuiClass=\"DateInput__input-time-divider\">\n              {\" \"}\n            </InputLikeDivider>\n            <InputLike\n              length={2}\n              getRootRef={hoursRef}\n              index={3}\n              onElementSelect={setFocusedElement}\n              value={internalValue[3]}\n              aria-label={changeHoursAriaLabel}\n            />\n            <InputLikeDivider>:</InputLikeDivider>\n            <InputLike\n              length={2}\n              getRootRef={minutesRef}\n              index={4}\n              onElementSelect={setFocusedElement}\n              value={internalValue[4]}\n              aria-label={changeMinutesAriaLabel}\n            />\n          </React.Fragment>\n        )}\n      </span>\n      {open && (\n        <Popper\n          targetRef={rootRef}\n          offsetDistance={8}\n          placement={calendarPlacement}\n        >\n          <Calendar\n            value={value}\n            onChange={onCalendarChange}\n            enableTime={enableTime}\n            disablePast={disablePast}\n            disableFuture={disableFuture}\n            shouldDisableDate={shouldDisableDate}\n            onClose={closeCalendar}\n            getRootRef={calendarRef}\n            doneButtonText={doneButtonText}\n            disablePickers={disablePickers}\n            changeHoursAriaLabel={changeHoursAriaLabel}\n            changeMinutesAriaLabel={changeMinutesAriaLabel}\n            prevMonthAriaLabel={prevMonthAriaLabel}\n            nextMonthAriaLabel={nextMonthAriaLabel}\n            changeMonthAriaLabel={changeMonthAriaLabel}\n            changeYearAriaLabel={changeYearAriaLabel}\n            changeDayAriaLabel={changeDayAriaLabel}\n            showNeighboringMonth={showNeighboringMonth}\n            size={size}\n          />\n        </Popper>\n      )}\n    </FormField>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}