{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"value\", \"onChange\", \"disablePast\", \"disableFuture\", \"shouldDisableDate\", \"onClose\", \"enableTime\", \"doneButtonText\", \"weekStartsOn\", \"getRootRef\", \"disablePickers\", \"changeHoursAriaLabel\", \"changeMinutesAriaLabel\", \"prevMonthAriaLabel\", \"nextMonthAriaLabel\", \"changeMonthAriaLabel\", \"changeYearAriaLabel\", \"showNeighboringMonth\", \"changeDayAriaLabel\", \"size\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { isSameMonth, isSameDay } from \"date-fns\";\nimport { CalendarHeader } from \"../CalendarHeader/CalendarHeader\";\nimport { CalendarDays } from \"../CalendarDays/CalendarDays\";\nimport { CalendarTime } from \"../CalendarTime/CalendarTime\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { navigateDate, setTimeEqual, isFirstDay, isLastDay } from \"../../lib/calendar\";\nimport { useCalendar } from \"../../hooks/useCalendar\";\nimport { classNames } from \"../../lib/classNames\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nvar warn = warnOnce(\"Calendar\");\nexport var Calendar = function Calendar(_ref) {\n  var value = _ref.value,\n      onChange = _ref.onChange,\n      disablePast = _ref.disablePast,\n      disableFuture = _ref.disableFuture,\n      shouldDisableDate = _ref.shouldDisableDate,\n      onClose = _ref.onClose,\n      _ref$enableTime = _ref.enableTime,\n      enableTime = _ref$enableTime === void 0 ? false : _ref$enableTime,\n      doneButtonText = _ref.doneButtonText,\n      _ref$weekStartsOn = _ref.weekStartsOn,\n      weekStartsOn = _ref$weekStartsOn === void 0 ? 1 : _ref$weekStartsOn,\n      getRootRef = _ref.getRootRef,\n      disablePickers = _ref.disablePickers,\n      changeHoursAriaLabel = _ref.changeHoursAriaLabel,\n      changeMinutesAriaLabel = _ref.changeMinutesAriaLabel,\n      prevMonthAriaLabel = _ref.prevMonthAriaLabel,\n      nextMonthAriaLabel = _ref.nextMonthAriaLabel,\n      changeMonthAriaLabel = _ref.changeMonthAriaLabel,\n      changeYearAriaLabel = _ref.changeYearAriaLabel,\n      showNeighboringMonth = _ref.showNeighboringMonth,\n      _ref$changeDayAriaLab = _ref.changeDayAriaLabel,\n      changeDayAriaLabel = _ref$changeDayAriaLab === void 0 ? \"Изменить день\" : _ref$changeDayAriaLab,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? \"m\" : _ref$size,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useCalendar = useCalendar({\n    value: value,\n    disableFuture: disableFuture,\n    disablePast: disablePast,\n    shouldDisableDate: shouldDisableDate\n  }),\n      viewDate = _useCalendar.viewDate,\n      setViewDate = _useCalendar.setViewDate,\n      setPrevMonth = _useCalendar.setPrevMonth,\n      setNextMonth = _useCalendar.setNextMonth,\n      focusedDay = _useCalendar.focusedDay,\n      setFocusedDay = _useCalendar.setFocusedDay,\n      isDayFocused = _useCalendar.isDayFocused,\n      isDayDisabled = _useCalendar.isDayDisabled,\n      resetSelectedDay = _useCalendar.resetSelectedDay;\n\n  useIsomorphicLayoutEffect(function () {\n    if (value) {\n      setViewDate(value);\n    }\n  }, [value]);\n\n  if (process.env.NODE_ENV === \"development\" && !disablePickers && size === \"s\") {\n    warn(\"Нельзя включить селекты выбора месяца/года если размер календаря 's'\");\n  }\n\n  if (process.env.NODE_ENV === \"development\" && enableTime && size === \"s\") {\n    warn(\"Нельзя включить выбор времени если размер календаря 's'\");\n  }\n\n  var handleKeyDown = React.useCallback(function (event) {\n    if ([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].includes(event.key)) {\n      event.preventDefault();\n    }\n\n    var newFocusedDay = navigateDate(focusedDay !== null && focusedDay !== void 0 ? focusedDay : value, event.key);\n\n    if (newFocusedDay && !isSameMonth(newFocusedDay, viewDate)) {\n      setViewDate(newFocusedDay);\n    }\n\n    setFocusedDay(newFocusedDay);\n  }, [focusedDay, setFocusedDay, setViewDate, value, viewDate]);\n  var onDayChange = React.useCallback(function (date) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(setTimeEqual(date, value));\n  }, [value, onChange]);\n  var isDayActive = React.useCallback(function (day) {\n    return Boolean(value && isSameDay(day, value));\n  }, [value]);\n  return createScopedElement(\"div\", _extends({}, props, {\n    ref: getRootRef,\n    vkuiClass: classNames(\"Calendar\", \"Calendar--size-\".concat(size))\n  }), createScopedElement(CalendarHeader, {\n    viewDate: viewDate,\n    onChange: setViewDate,\n    onNextMonth: setNextMonth,\n    onPrevMonth: setPrevMonth,\n    disablePickers: disablePickers || size === \"s\",\n    vkuiClass: \"Calendar__header\",\n    prevMonthAriaLabel: prevMonthAriaLabel,\n    nextMonthAriaLabel: nextMonthAriaLabel,\n    changeMonthAriaLabel: changeMonthAriaLabel,\n    changeYearAriaLabel: changeYearAriaLabel\n  }), createScopedElement(CalendarDays, {\n    viewDate: viewDate,\n    value: value,\n    weekStartsOn: weekStartsOn,\n    isDayFocused: isDayFocused,\n    tabIndex: 0,\n    \"aria-label\": changeDayAriaLabel,\n    onKeyDown: handleKeyDown,\n    onDayChange: onDayChange,\n    isDayActive: isDayActive,\n    isDaySelectionStart: isFirstDay,\n    isDaySelectionEnd: isLastDay,\n    isDayDisabled: isDayDisabled,\n    onBlur: resetSelectedDay,\n    showNeighboringMonth: showNeighboringMonth,\n    size: size\n  }), enableTime && value && size !== \"s\" && createScopedElement(\"div\", {\n    vkuiClass: \"Calendar__time\"\n  }, createScopedElement(CalendarTime, {\n    value: value,\n    onChange: onChange,\n    onClose: onClose,\n    doneButtonText: doneButtonText,\n    changeHoursAriaLabel: changeHoursAriaLabel,\n    changeMinutesAriaLabel: changeMinutesAriaLabel\n  })));\n};","map":{"version":3,"mappings":"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","names":["React","isSameMonth","isSameDay","CalendarHeader","CalendarDays","CalendarTime","useIsomorphicLayoutEffect","navigateDate","setTimeEqual","isFirstDay","isLastDay","useCalendar","classNames","warnOnce","warn","Calendar","value","onChange","disablePast","disableFuture","shouldDisableDate","onClose","enableTime","doneButtonText","weekStartsOn","getRootRef","disablePickers","changeHoursAriaLabel","changeMinutesAriaLabel","prevMonthAriaLabel","nextMonthAriaLabel","changeMonthAriaLabel","changeYearAriaLabel","showNeighboringMonth","changeDayAriaLabel","size","props","viewDate","setViewDate","setPrevMonth","setNextMonth","focusedDay","setFocusedDay","isDayFocused","isDayDisabled","resetSelectedDay","process","env","NODE_ENV","handleKeyDown","useCallback","event","includes","key","preventDefault","newFocusedDay","onDayChange","date","isDayActive","day","Boolean","createScopedElement","ref","vkuiClass","onNextMonth","onPrevMonth","tabIndex","onKeyDown","isDaySelectionStart","isDaySelectionEnd","onBlur"],"sources":["/Users/al.balandin/code/vkvideo-test/node_modules/@vkontakte/vkui/src/components/Calendar/Calendar.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { isSameMonth, isSameDay } from \"date-fns\";\nimport {\n  CalendarHeader,\n  CalendarHeaderProps,\n} from \"../CalendarHeader/CalendarHeader\";\nimport { CalendarDays } from \"../CalendarDays/CalendarDays\";\nimport { CalendarTime, CalendarTimeProps } from \"../CalendarTime/CalendarTime\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport {\n  navigateDate,\n  setTimeEqual,\n  isFirstDay,\n  isLastDay,\n} from \"../../lib/calendar\";\nimport { useCalendar } from \"../../hooks/useCalendar\";\nimport { HasRootRef } from \"../../types\";\nimport { classNames } from \"../../lib/classNames\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport \"./Calendar.css\";\n\nexport interface CalendarProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onChange\">,\n    Pick<CalendarTimeProps, \"changeHoursAriaLabel\" | \"changeMinutesAriaLabel\">,\n    Pick<\n      CalendarHeaderProps,\n      | \"prevMonthAriaLabel\"\n      | \"nextMonthAriaLabel\"\n      | \"changeMonthAriaLabel\"\n      | \"changeYearAriaLabel\"\n    >,\n    HasRootRef<HTMLDivElement> {\n  value?: Date;\n  disablePast?: boolean;\n  disableFuture?: boolean;\n  enableTime?: boolean;\n  disablePickers?: boolean;\n  doneButtonText?: string;\n  changeDayAriaLabel?: string;\n  weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n  showNeighboringMonth?: boolean;\n  size?: \"s\" | \"m\";\n  onChange?(value?: Date): void;\n  shouldDisableDate?(value: Date): boolean;\n  onClose?(): void;\n}\n\nconst warn = warnOnce(\"Calendar\");\n\nexport const Calendar: React.FC<CalendarProps> = ({\n  value,\n  onChange,\n  disablePast,\n  disableFuture,\n  shouldDisableDate,\n  onClose,\n  enableTime = false,\n  doneButtonText,\n  weekStartsOn = 1,\n  getRootRef,\n  disablePickers,\n  changeHoursAriaLabel,\n  changeMinutesAriaLabel,\n  prevMonthAriaLabel,\n  nextMonthAriaLabel,\n  changeMonthAriaLabel,\n  changeYearAriaLabel,\n  showNeighboringMonth,\n  changeDayAriaLabel = \"Изменить день\",\n  size = \"m\",\n  ...props\n}) => {\n  const {\n    viewDate,\n    setViewDate,\n    setPrevMonth,\n    setNextMonth,\n    focusedDay,\n    setFocusedDay,\n    isDayFocused,\n    isDayDisabled,\n    resetSelectedDay,\n  } = useCalendar({ value, disableFuture, disablePast, shouldDisableDate });\n\n  useIsomorphicLayoutEffect(() => {\n    if (value) {\n      setViewDate(value);\n    }\n  }, [value]);\n\n  if (\n    process.env.NODE_ENV === \"development\" &&\n    !disablePickers &&\n    size === \"s\"\n  ) {\n    warn(\n      \"Нельзя включить селекты выбора месяца/года если размер календаря 's'\"\n    );\n  }\n\n  if (process.env.NODE_ENV === \"development\" && enableTime && size === \"s\") {\n    warn(\"Нельзя включить выбор времени если размер календаря 's'\");\n  }\n\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (\n        [\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].includes(event.key)\n      ) {\n        event.preventDefault();\n      }\n\n      const newFocusedDay = navigateDate(focusedDay ?? value, event.key);\n\n      if (newFocusedDay && !isSameMonth(newFocusedDay, viewDate)) {\n        setViewDate(newFocusedDay);\n      }\n      setFocusedDay(newFocusedDay);\n    },\n    [focusedDay, setFocusedDay, setViewDate, value, viewDate]\n  );\n\n  const onDayChange = React.useCallback(\n    (date: Date) => {\n      onChange?.(setTimeEqual(date, value as Date | undefined | null));\n    },\n    [value, onChange]\n  );\n\n  const isDayActive = React.useCallback(\n    (day: Date) => Boolean(value && isSameDay(day, value)),\n    [value]\n  );\n\n  return (\n    <div\n      {...props}\n      ref={getRootRef}\n      vkuiClass={classNames(\"Calendar\", `Calendar--size-${size}`)}\n    >\n      <CalendarHeader\n        viewDate={viewDate}\n        onChange={setViewDate}\n        onNextMonth={setNextMonth}\n        onPrevMonth={setPrevMonth}\n        disablePickers={disablePickers || size === \"s\"}\n        vkuiClass=\"Calendar__header\"\n        prevMonthAriaLabel={prevMonthAriaLabel}\n        nextMonthAriaLabel={nextMonthAriaLabel}\n        changeMonthAriaLabel={changeMonthAriaLabel}\n        changeYearAriaLabel={changeYearAriaLabel}\n      />\n      <CalendarDays\n        viewDate={viewDate}\n        value={value}\n        weekStartsOn={weekStartsOn}\n        isDayFocused={isDayFocused}\n        tabIndex={0}\n        aria-label={changeDayAriaLabel}\n        onKeyDown={handleKeyDown}\n        onDayChange={onDayChange}\n        isDayActive={isDayActive}\n        isDaySelectionStart={isFirstDay}\n        isDaySelectionEnd={isLastDay}\n        isDayDisabled={isDayDisabled}\n        onBlur={resetSelectedDay}\n        showNeighboringMonth={showNeighboringMonth}\n        size={size}\n      />\n      {enableTime && value && size !== \"s\" && (\n        <div vkuiClass=\"Calendar__time\">\n          <CalendarTime\n            value={value}\n            onChange={onChange}\n            onClose={onClose}\n            doneButtonText={doneButtonText}\n            changeHoursAriaLabel={changeHoursAriaLabel}\n            changeMinutesAriaLabel={changeMinutesAriaLabel}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}