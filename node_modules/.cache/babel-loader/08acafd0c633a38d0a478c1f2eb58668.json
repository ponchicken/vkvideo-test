{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"size\", \"platform\"],\n    _excluded2 = [\"mode\", \"size\", \"children\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport Text from \"../Typography/Text/Text\";\nimport { VKCOM } from \"../../lib/platform\";\nimport { hasReactNode } from \"../../lib/utils\";\n\nvar CounterTypography = function CounterTypography(_ref) {\n  var size = _ref.size,\n      platform = _ref.platform,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  return size === \"s\" ? createScopedElement(Caption, _extends({\n    level: \"2\",\n    weight: platform === VKCOM ? \"1\" : undefined\n  }, restProps)) : createScopedElement(Text, _extends({\n    weight: \"medium\"\n  }, restProps));\n};\n\nvar Counter = function Counter(props) {\n  var mode = props.mode,\n      size = props.size,\n      children = props.children,\n      restProps = _objectWithoutProperties(props, _excluded2);\n\n  var platform = usePlatform();\n\n  if (React.Children.count(children) === 0) {\n    return null;\n  }\n\n  return createScopedElement(\"span\", _extends({}, restProps, {\n    vkuiClass: classNames(getClassName(\"Counter\", platform), \"Counter--\".concat(mode), \"Counter--s-\".concat(size))\n  }), hasReactNode(children) && createScopedElement(CounterTypography, {\n    platform: platform,\n    size: size,\n    vkuiClass: \"Counter__in\"\n  }, children));\n};\n\nCounter.defaultProps = {\n  mode: \"secondary\",\n  size: \"m\"\n}; // eslint-disable-next-line import/no-default-export\n\nexport default /*#__PURE__*/React.memo(Counter);","map":{"version":3,"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT;AACA,SAASC,YAAT;AACA,SAASC,WAAT;AACA,SAASC,OAAT;AACA,OAAOC,IAAP;AACA,SAASC,KAAT;AACA,SAASC,YAAT;;AAgBA,IAAMC,iBAAmD,GAAG,SAAtDA,iBAAsD,OAItD;EAAA,IAHJC,IAGI,QAHJA,IAGI;EAAA,IAFJC,QAEI,QAFJA,QAEI;EAAA,IADDC,SACC;;EACJ,OAAOF,IAAI,KAAK,GAATA,GACLG,oBAACR,OAAD;IACES,KAAK,EAAC,GADR;IAEEC,MAAM,EAAEJ,QAAQ,KAAKJ,KAAbI,GAAqB,GAArBA,GAA2BK;EAFrC,GAGMJ,SAHN,EADKF,GAOLG,oBAACP,IAAD;IAAMS,MAAM,EAAC;EAAb,GAA0BH,SAA1B,EAPF;AALF;;AAgBA,IAAMK,OAA+B,GAAG,SAAlCA,OAAkC,CAACC,KAAD,EAAyB;EAC/D,IAAQC,IAAR,GAA+CD,KAA/C,CAAQC,IAAR;EAAA,IAAcT,IAAd,GAA+CQ,KAA/C,CAAcR,IAAd;EAAA,IAAoBU,QAApB,GAA+CF,KAA/C,CAAoBE,QAApB;EAAA,IAAiCR,SAAjC,4BAA+CM,KAA/C;;EACA,IAAMP,QAAQ,GAAGP,WAAW,EAA5B;;EAEA,IAAIH,KAAK,CAACoB,QAANpB,CAAeqB,KAAfrB,CAAqBmB,QAArBnB,MAAmC,CAAvC,EAA0C;IACxC,OAAO,IAAP;EACD;;EAED,OACEY,yCACMD,SADN;IAEEW,SAAS,EAAErB,UAAU,CACnBC,YAAY,CAAC,SAAD,EAAYQ,QAAZ,CADO,qBAEPQ,IAFO,wBAGLT,IAHK;EAFvB,IAQGF,YAAY,CAACY,QAAD,CAAZZ,IACCK,oBAACJ,iBAAD;IACEE,QAAQ,EAAEA,QADZ;IAEED,IAAI,EAAEA,IAFR;IAGEa,SAAS,EAAC;EAHZ,GAKGH,QALH,CATJ,CADF;AARF;;AA8BAH,OAAO,CAACO,YAARP,GAAuB;EACrBE,IAAI,EAAE,WADe;EAErBT,IAAI,EAAE;AAFe,CAAvBO,C,CAKA;;AACA,4BAAehB,KAAK,CAACwB,IAANxB,CAAWgB,OAAXhB,CAAf","names":["React","classNames","getClassName","usePlatform","Caption","Text","VKCOM","hasReactNode","CounterTypography","size","platform","restProps","createScopedElement","level","weight","undefined","Counter","props","mode","children","Children","count","vkuiClass","defaultProps","memo"],"sources":["/Users/al.balandin/code/vkvideo-test/node_modules/@vkontakte/vkui/src/components/Counter/Counter.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport Text from \"../Typography/Text/Text\";\nimport { VKCOM } from \"../../lib/platform\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport { HasComponent, HasPlatform } from \"../../types\";\nimport \"./Counter.css\";\n\nexport interface CounterProps extends React.HTMLAttributes<HTMLSpanElement> {\n  /**\n   * Тип счетчика. При использовании компонента в качестве значения свойства `after` у `Button` эти значения игнорируются\n   */\n  mode?: \"secondary\" | \"primary\" | \"prominent\";\n  size?: \"s\" | \"m\";\n}\n\ntype CounterTypographyProps = Pick<CounterProps, \"size\"> &\n  HasPlatform &\n  HasComponent;\n\nconst CounterTypography: React.FC<CounterTypographyProps> = ({\n  size,\n  platform,\n  ...restProps\n}) => {\n  return size === \"s\" ? (\n    <Caption\n      level=\"2\"\n      weight={platform === VKCOM ? \"1\" : undefined}\n      {...restProps}\n    />\n  ) : (\n    <Text weight=\"medium\" {...restProps} />\n  );\n};\n\nconst Counter: React.FC<CounterProps> = (props: CounterProps) => {\n  const { mode, size, children, ...restProps } = props;\n  const platform = usePlatform();\n\n  if (React.Children.count(children) === 0) {\n    return null;\n  }\n\n  return (\n    <span\n      {...restProps}\n      vkuiClass={classNames(\n        getClassName(\"Counter\", platform),\n        `Counter--${mode}`,\n        `Counter--s-${size}`\n      )}\n    >\n      {hasReactNode(children) && (\n        <CounterTypography\n          platform={platform}\n          size={size}\n          vkuiClass=\"Counter__in\"\n        >\n          {children}\n        </CounterTypography>\n      )}\n    </span>\n  );\n};\n\nCounter.defaultProps = {\n  mode: \"secondary\",\n  size: \"m\",\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default React.memo(Counter);\n"]},"metadata":{},"sourceType":"module"}