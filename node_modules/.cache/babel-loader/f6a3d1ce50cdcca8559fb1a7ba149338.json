{"ast":null,"code":"/**\n * Loads async import with retries. It can be useful for bad internet connection\n *\n * @example\n * const HeaderLazyComponent = React.lazy(() => asyncImportLoader(() => import('../components/Header/Header')));\n *\n * @example\n * asyncImportLoader(() => import('some-module'), 20).then((someModule) => {\n *   someModule.init();\n * });\n */\nexport var asyncImportLoader = function asyncImportLoader(asyncImport) {\n  var attempts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  return new Promise(function (resolve, reject) {\n    asyncImport().then(resolve)[\"catch\"](function (error) {\n      setTimeout(function () {\n        if (attempts === 0) {\n          reject(error);\n          return;\n        }\n\n        asyncImportLoader(asyncImport, attempts - 1).then(resolve, reject);\n      }, 1000);\n    });\n  });\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;AAWA,OAAO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAAIC,WAAJ,EAAiE;EAAA,IAA9BC,QAA8B,uEAAnB,EAAmB;EAChG,OAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;IACtCJ,WAAW,GACRK,IADHL,CACQG,OADRH,WAES,UAACM,KAAD,EAAW;MAChBC,UAAU,CAAC,YAAM;QACf,IAAIN,QAAQ,KAAK,CAAjB,EAAoB;UAClBG,MAAM,CAACE,KAAD,CAANF;UACA;QACD;;QACDL,iBAAiB,CAACC,WAAD,EAAcC,QAAQ,GAAG,CAAzB,CAAjBF,CAA6CM,IAA7CN,CAAkDI,OAAlDJ,EAA2DK,MAA3DL;MALQ,GAMP,IANO,CAAVQ;IAHJ;EADK,EAAP;AADK","names":["asyncImportLoader","asyncImport","attempts","Promise","resolve","reject","then","error","setTimeout"],"sources":["/Users/al.balandin/code/vkvideo-test/node_modules/@vkontakte/vkui/node_modules/@vkontakte/vkjs/src/async.ts"],"sourcesContent":["/**\n * Loads async import with retries. It can be useful for bad internet connection\n *\n * @example\n * const HeaderLazyComponent = React.lazy(() => asyncImportLoader(() => import('../components/Header/Header')));\n *\n * @example\n * asyncImportLoader(() => import('some-module'), 20).then((someModule) => {\n *   someModule.init();\n * });\n */\nexport const asyncImportLoader = <T>(asyncImport: () => Promise<T>, attempts = 10): Promise<T> => {\n  return new Promise((resolve, reject) => {\n    asyncImport()\n      .then(resolve)\n      .catch((error) => {\n        setTimeout(() => {\n          if (attempts === 0) {\n            reject(error);\n            return;\n          }\n          asyncImportLoader(asyncImport, attempts - 1).then(resolve, reject);\n        }, 1000);\n      });\n  });\n};\n"]},"metadata":{},"sourceType":"module"}