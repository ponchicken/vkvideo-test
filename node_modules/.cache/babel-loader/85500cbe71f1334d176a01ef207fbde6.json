{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"size\", \"showArrows\", \"withSpaces\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport HorizontalScroll from \"../HorizontalScroll/HorizontalScroll\";\nimport { useDOM } from \"../../lib/dom\";\nexport var CardScroll = function CardScroll(_ref) {\n  var children = _ref.children,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? \"s\" : _ref$size,\n      _ref$showArrows = _ref.showArrows,\n      showArrows = _ref$showArrows === void 0 ? true : _ref$showArrows,\n      _ref$withSpaces = _ref.withSpaces,\n      withSpaces = _ref$withSpaces === void 0 ? true : _ref$withSpaces,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var platform = usePlatform();\n\n  var _useAdaptivity = useAdaptivity(),\n      sizeX = _useAdaptivity.sizeX;\n\n  var refContainer = React.useRef(null);\n  var gapRef = React.useRef(null);\n\n  var _useDOM = useDOM(),\n      window = _useDOM.window;\n\n  function getScrollToLeft(offset) {\n    if (!refContainer.current || !gapRef.current) {\n      return offset;\n    }\n\n    var containerWidth = refContainer.current.offsetWidth;\n    var slideIndex = Array.from(refContainer.current.children).findIndex(function (el) {\n      return el.offsetLeft + el.offsetWidth + parseInt(window.getComputedStyle(el).marginRight) - offset >= 0;\n    });\n\n    if (slideIndex === -1) {\n      return offset;\n    }\n\n    if (slideIndex === 0) {\n      return 0;\n    }\n\n    var slide = refContainer.current.children[slideIndex];\n    var scrollTo = slide.offsetLeft - (containerWidth - slide.offsetWidth) + gapRef.current.offsetWidth;\n\n    if (scrollTo <= 2 * gapRef.current.offsetWidth) {\n      return 0;\n    }\n\n    return scrollTo;\n  }\n\n  function getScrollToRight(offset) {\n    if (!refContainer.current || !gapRef.current) {\n      return offset;\n    }\n\n    var containerWidth = refContainer.current.offsetWidth;\n    var slide = Array.prototype.find.call(refContainer.current.children, function (el) {\n      return el.offsetLeft + el.offsetWidth - offset > containerWidth;\n    });\n\n    if (!slide) {\n      return offset;\n    }\n\n    return slide.offsetLeft - gapRef.current.offsetWidth;\n  }\n\n  return createScopedElement(\"div\", _extends({}, restProps, {\n    vkuiClass: classNames(getClassName(\"CardScroll\", platform), \"CardScroll--sizeX-\".concat(sizeX), \"CardScroll--\".concat(size), _defineProperty({}, \"CardScroll--withSpaces\", withSpaces))\n  }), createScopedElement(HorizontalScroll, {\n    getScrollToLeft: getScrollToLeft,\n    getScrollToRight: getScrollToRight,\n    showArrows: showArrows\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"CardScroll__in\",\n    ref: refContainer\n  }, createScopedElement(\"span\", {\n    vkuiClass: \"CardScroll__gap\",\n    ref: gapRef\n  }), children, createScopedElement(\"span\", {\n    vkuiClass: \"CardScroll__gap\"\n  }))));\n};","map":{"version":3,"mappings":"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","names":["React","classNames","getClassName","useAdaptivity","usePlatform","HorizontalScroll","useDOM","CardScroll","children","size","showArrows","withSpaces","restProps","platform","sizeX","refContainer","useRef","gapRef","window","getScrollToLeft","offset","current","containerWidth","offsetWidth","slideIndex","Array","from","findIndex","el","offsetLeft","parseInt","getComputedStyle","marginRight","slide","scrollTo","getScrollToRight","prototype","find","call","createScopedElement","vkuiClass","ref"],"sources":["/Users/al.balandin/code/vkvideo-test/node_modules/@vkontakte/vkui/src/components/CardScroll/CardScroll.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport HorizontalScroll, {\n  HorizontalScrollProps,\n} from \"../HorizontalScroll/HorizontalScroll\";\nimport { useDOM } from \"../../lib/dom\";\nimport \"./CardScroll.css\";\n\nexport interface CardScrollProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * При `size=false` ширина `Card` будет регулироваться контентом внутри. В остальных случаях — будет явно задана в процентах.\n   */\n  size?: \"s\" | \"m\" | \"l\" | false;\n  showArrows?: HorizontalScrollProps[\"showArrows\"];\n  withSpaces?: boolean;\n}\n\nexport const CardScroll: React.FC<CardScrollProps> = ({\n  children,\n  size = \"s\",\n  showArrows = true,\n  withSpaces = true,\n  ...restProps\n}: CardScrollProps) => {\n  const platform = usePlatform();\n  const { sizeX } = useAdaptivity();\n\n  const refContainer = React.useRef<HTMLDivElement>(null);\n  const gapRef = React.useRef<HTMLDivElement>(null);\n\n  const { window } = useDOM();\n\n  function getScrollToLeft(offset: number): number {\n    if (!refContainer.current || !gapRef.current) {\n      return offset;\n    }\n    const containerWidth = refContainer.current.offsetWidth;\n    const slideIndex = (\n      Array.from(refContainer.current.children) as HTMLElement[]\n    ).findIndex(\n      (el: HTMLElement) =>\n        el.offsetLeft +\n          el.offsetWidth +\n          parseInt(window!.getComputedStyle(el).marginRight) -\n          offset >=\n        0\n    );\n\n    if (slideIndex === -1) {\n      return offset;\n    }\n\n    if (slideIndex === 0) {\n      return 0;\n    }\n\n    const slide = refContainer.current.children[slideIndex] as HTMLElement;\n\n    const scrollTo =\n      slide.offsetLeft -\n      (containerWidth - slide.offsetWidth) +\n      gapRef.current.offsetWidth;\n\n    if (scrollTo <= 2 * gapRef.current.offsetWidth) {\n      return 0;\n    }\n\n    return scrollTo;\n  }\n\n  function getScrollToRight(offset: number): number {\n    if (!refContainer.current || !gapRef.current) {\n      return offset;\n    }\n\n    const containerWidth = refContainer.current.offsetWidth;\n    const slide = Array.prototype.find.call(\n      refContainer.current.children,\n      (el: HTMLElement) =>\n        el.offsetLeft + el.offsetWidth - offset > containerWidth\n    ) as HTMLElement;\n\n    if (!slide) {\n      return offset;\n    }\n\n    return slide.offsetLeft - gapRef.current.offsetWidth;\n  }\n\n  return (\n    <div\n      {...restProps}\n      vkuiClass={classNames(\n        getClassName(\"CardScroll\", platform),\n        `CardScroll--sizeX-${sizeX}`,\n        `CardScroll--${size}`,\n        { [\"CardScroll--withSpaces\"]: withSpaces }\n      )}\n    >\n      <HorizontalScroll\n        getScrollToLeft={getScrollToLeft}\n        getScrollToRight={getScrollToRight}\n        showArrows={showArrows}\n      >\n        <div vkuiClass=\"CardScroll__in\" ref={refContainer}>\n          <span vkuiClass=\"CardScroll__gap\" ref={gapRef} />\n          {children}\n          <span vkuiClass=\"CardScroll__gap\" />\n        </div>\n      </HorizontalScroll>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}