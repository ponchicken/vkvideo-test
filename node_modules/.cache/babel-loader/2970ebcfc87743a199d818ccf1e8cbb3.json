{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"Component\", \"onClose\", \"restoreFocus\", \"timeout\", \"getRootRef\", \"children\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { useGlobalEventListener } from \"../../hooks/useGlobalEventListener\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport { FOCUSABLE_ELEMENTS_LIST, Keys, pressedKey } from \"../../lib/accessibility\";\nimport { useDOM } from \"../../lib/dom\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { noop } from \"../../lib/utils\";\nimport { AppRootContext } from \"../AppRoot/AppRootContext\";\nvar FOCUSABLE_ELEMENTS = FOCUSABLE_ELEMENTS_LIST.join();\nexport var FocusTrap = function FocusTrap(_ref) {\n  var _ref$Component = _ref.Component,\n      Component = _ref$Component === void 0 ? \"div\" : _ref$Component,\n      _ref$onClose = _ref.onClose,\n      onClose = _ref$onClose === void 0 ? noop : _ref$onClose,\n      _ref$restoreFocus = _ref.restoreFocus,\n      restoreFocus = _ref$restoreFocus === void 0 ? true : _ref$restoreFocus,\n      _ref$timeout = _ref.timeout,\n      timeout = _ref$timeout === void 0 ? 0 : _ref$timeout,\n      getRootRef = _ref.getRootRef,\n      children = _ref.children,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var ref = useExternRef(getRootRef);\n\n  var _useDOM = useDOM(),\n      document = _useDOM.document,\n      window = _useDOM.window;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      focusableNodes = _React$useState2[0],\n      setFocusableNodes = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      restoreFocusTo = _React$useState4[0],\n      setRestoreFocusTo = _React$useState4[1]; // HANDLE TRAP MOUNT\n\n\n  var _React$useContext = React.useContext(AppRootContext),\n      keyboardInput = _React$useContext.keyboardInput;\n\n  var focusOnTrapMount = useTimeout(function () {\n    var _ref$current;\n\n    if (keyboardInput && !((_ref$current = ref.current) !== null && _ref$current !== void 0 && _ref$current.contains(document.activeElement)) && focusableNodes !== null && focusableNodes !== void 0 && focusableNodes.length) {\n      focusableNodes[0].focus();\n    }\n  }, timeout);\n  useIsomorphicLayoutEffect(function () {\n    focusOnTrapMount.set();\n  }, []); // HANDLE FOCUSABLE NODES\n\n  useIsomorphicLayoutEffect(function () {\n    if (!ref.current) {\n      return noop();\n    }\n\n    var nodes = [];\n    Array.prototype.forEach.call( // eslint-disable-next-line no-restricted-properties\n    ref.current.querySelectorAll(FOCUSABLE_ELEMENTS), function (focusableEl) {\n      var _getComputedStyle = window.getComputedStyle(focusableEl),\n          display = _getComputedStyle.display,\n          visibility = _getComputedStyle.visibility;\n\n      if (display !== \"none\" && visibility !== \"hidden\") {\n        nodes.push(focusableEl);\n      }\n    });\n\n    if (nodes !== null && nodes !== void 0 && nodes.length) {\n      setFocusableNodes(nodes);\n    }\n\n    return noop();\n  }, [children]); // HANDLE TRAP UNMOUNT\n\n  var focusOnTrapUnmount = useTimeout(function () {\n    if (restoreFocusTo) {\n      restoreFocusTo.focus();\n    }\n  }, timeout);\n  useIsomorphicLayoutEffect(function () {\n    if (restoreFocus && document.activeElement) {\n      setRestoreFocusTo(document.activeElement);\n      return function () {\n        focusOnTrapUnmount.set();\n      };\n    }\n\n    return noop();\n  }, [restoreFocus]);\n\n  var onDocumentKeydown = function onDocumentKeydown(e) {\n    if (pressedKey(e) === Keys.TAB && focusableNodes !== null && focusableNodes !== void 0 && focusableNodes.length) {\n      var lastIdx = focusableNodes.length - 1;\n      var targetIdx = focusableNodes.findIndex(function (node) {\n        return node === e.target;\n      });\n      var shouldFocusFirstNode = targetIdx === -1 || targetIdx === lastIdx && !e.shiftKey;\n\n      if (shouldFocusFirstNode || targetIdx === 0 && e.shiftKey) {\n        e.preventDefault();\n        var node = focusableNodes[shouldFocusFirstNode ? 0 : lastIdx];\n\n        if (node !== document.activeElement) {\n          node.focus();\n        }\n\n        return false;\n      }\n    }\n\n    if (pressedKey(e) === Keys.ESCAPE) {\n      onClose();\n    }\n\n    return true;\n  };\n\n  useGlobalEventListener(document, \"keydown\", onDocumentKeydown, {\n    capture: true\n  });\n  return createScopedElement(Component, _extends({\n    ref: ref\n  }, restProps), children);\n};","map":{"version":3,"mappings":"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","names":["React","useExternRef","useGlobalEventListener","useTimeout","FOCUSABLE_ELEMENTS_LIST","Keys","pressedKey","useDOM","useIsomorphicLayoutEffect","noop","AppRootContext","FOCUSABLE_ELEMENTS","join","FocusTrap","Component","onClose","restoreFocus","timeout","getRootRef","children","restProps","ref","document","window","useState","focusableNodes","setFocusableNodes","restoreFocusTo","setRestoreFocusTo","useContext","keyboardInput","focusOnTrapMount","current","_ref$current","contains","activeElement","length","focus","set","nodes","Array","prototype","forEach","call","querySelectorAll","focusableEl","getComputedStyle","display","visibility","push","focusOnTrapUnmount","onDocumentKeydown","e","TAB","lastIdx","targetIdx","findIndex","node","target","shouldFocusFirstNode","shiftKey","preventDefault","ESCAPE","capture","createScopedElement"],"sources":["/Users/al.balandin/code/vkvideo-test/node_modules/@vkontakte/vkui/src/components/FocusTrap/FocusTrap.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { useGlobalEventListener } from \"../../hooks/useGlobalEventListener\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport {\n  FOCUSABLE_ELEMENTS_LIST,\n  Keys,\n  pressedKey,\n} from \"../../lib/accessibility\";\nimport { useDOM } from \"../../lib/dom\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { noop } from \"../../lib/utils\";\nimport { HasComponent, HasRootRef } from \"../../types\";\nimport { AppRootContext } from \"../AppRoot/AppRootContext\";\n\nconst FOCUSABLE_ELEMENTS: string = FOCUSABLE_ELEMENTS_LIST.join();\n\nexport interface FocusTrapProps\n  extends React.AllHTMLAttributes<HTMLElement>,\n    HasRootRef<HTMLElement>,\n    HasComponent {\n  onClose?: (props?: any) => void;\n  restoreFocus?: boolean;\n  timeout?: number;\n}\n\nexport const FocusTrap: React.FC<FocusTrapProps> = ({\n  Component = \"div\",\n  onClose = noop,\n  restoreFocus = true,\n  timeout = 0,\n  getRootRef,\n  children,\n  ...restProps\n}) => {\n  const ref = useExternRef<HTMLElement>(getRootRef);\n\n  const { document, window } = useDOM();\n\n  const [focusableNodes, setFocusableNodes] = React.useState<\n    HTMLElement[] | null\n  >(null);\n  const [restoreFocusTo, setRestoreFocusTo] =\n    React.useState<HTMLElement | null>(null);\n\n  // HANDLE TRAP MOUNT\n\n  const { keyboardInput } = React.useContext(AppRootContext);\n  const focusOnTrapMount = useTimeout(() => {\n    if (\n      keyboardInput &&\n      !ref.current?.contains(document!.activeElement) &&\n      focusableNodes?.length\n    ) {\n      focusableNodes[0].focus();\n    }\n  }, timeout);\n  useIsomorphicLayoutEffect(() => {\n    focusOnTrapMount.set();\n  }, []);\n\n  // HANDLE FOCUSABLE NODES\n\n  useIsomorphicLayoutEffect(() => {\n    if (!ref.current) {\n      return noop();\n    }\n\n    const nodes: HTMLElement[] = [];\n    Array.prototype.forEach.call(\n      // eslint-disable-next-line no-restricted-properties\n      ref.current.querySelectorAll(FOCUSABLE_ELEMENTS),\n      (focusableEl: Element) => {\n        const { display, visibility } = window!.getComputedStyle(focusableEl);\n\n        if (display !== \"none\" && visibility !== \"hidden\") {\n          nodes.push(focusableEl as HTMLElement);\n        }\n      }\n    );\n\n    if (nodes?.length) {\n      setFocusableNodes(nodes);\n    }\n\n    return noop();\n  }, [children]);\n\n  // HANDLE TRAP UNMOUNT\n\n  const focusOnTrapUnmount = useTimeout(() => {\n    if (restoreFocusTo) {\n      restoreFocusTo.focus();\n    }\n  }, timeout);\n  useIsomorphicLayoutEffect(() => {\n    if (restoreFocus && document!.activeElement) {\n      setRestoreFocusTo(document!.activeElement as HTMLElement);\n\n      return () => {\n        focusOnTrapUnmount.set();\n      };\n    }\n\n    return noop();\n  }, [restoreFocus]);\n\n  const onDocumentKeydown = (e: KeyboardEvent) => {\n    if (pressedKey(e) === Keys.TAB && focusableNodes?.length) {\n      const lastIdx = focusableNodes.length - 1;\n      const targetIdx = focusableNodes.findIndex((node) => node === e.target);\n\n      const shouldFocusFirstNode =\n        targetIdx === -1 || (targetIdx === lastIdx && !e.shiftKey);\n\n      if (shouldFocusFirstNode || (targetIdx === 0 && e.shiftKey)) {\n        e.preventDefault();\n\n        const node = focusableNodes[shouldFocusFirstNode ? 0 : lastIdx];\n\n        if (node !== document!.activeElement) {\n          node.focus();\n        }\n\n        return false;\n      }\n    }\n\n    if (pressedKey(e) === Keys.ESCAPE) {\n      onClose();\n    }\n\n    return true;\n  };\n  useGlobalEventListener(document, \"keydown\", onDocumentKeydown, {\n    capture: true,\n  });\n\n  return (\n    <Component ref={ref} {...restProps}>\n      {children}\n    </Component>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}