{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"onClose\", \"opened\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport FixedLayout from \"../FixedLayout/FixedLayout\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { ViewWidth } from \"../AdaptivityProvider/AdaptivityContext\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { useDOM } from \"../../lib/dom\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { useGlobalEventListener } from \"../../hooks/useGlobalEventListener\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nexport var PanelHeaderContext = function PanelHeaderContext(_ref) {\n  var children = _ref.children,\n      onClose = _ref.onClose,\n      _ref$opened = _ref.opened,\n      opened = _ref$opened === void 0 ? false : _ref$opened,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var _useDOM = useDOM(),\n      document = _useDOM.document;\n\n  var platform = usePlatform();\n\n  var _React$useState = React.useState(opened),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var closing = visible && !opened;\n\n  var _useAdaptivity = useAdaptivity(),\n      viewWidth = _useAdaptivity.viewWidth;\n\n  var isDesktop = viewWidth >= ViewWidth.SMALL_TABLET;\n  var elementRef = React.useRef(null);\n  useIsomorphicLayoutEffect(function () {\n    opened && setVisible(true);\n  }, [opened]); // start closing on outer click\n\n  useGlobalEventListener(document, \"click\", isDesktop && opened && !closing && function (event) {\n    if (elementRef.current && !elementRef.current.contains(event.target)) {\n      onClose();\n    }\n  }); // fallback onAnimationEnd when animationend not supported\n\n  var onAnimationEnd = function onAnimationEnd() {\n    return setVisible(false);\n  };\n\n  var animationFallback = useTimeout(onAnimationEnd, 200);\n  React.useEffect(function () {\n    return closing ? animationFallback.set() : animationFallback.clear();\n  }, [animationFallback, closing]);\n  return createScopedElement(FixedLayout, _extends({}, restProps, {\n    vkuiClass: classNames(getClassName(\"PanelHeaderContext\", platform), {\n      \"PanelHeaderContext--opened\": opened,\n      \"PanelHeaderContext--closing\": closing,\n      \"PanelHeaderContext--desktop\": isDesktop\n    }),\n    vertical: \"top\"\n  }), createScopedElement(\"div\", {\n    vkuiClass: \"PanelHeaderContext__in\",\n    ref: elementRef,\n    onAnimationEnd: closing ? onAnimationEnd : undefined\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"PanelHeaderContext__content\"\n  }, visible && children)), !isDesktop && visible && createScopedElement(\"div\", {\n    onClick: onClose,\n    vkuiClass: \"PanelHeaderContext__fade\"\n  }));\n};","map":{"version":3,"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,WAAP;AACA,SAASC,UAAT;AACA,SAASC,YAAT;AACA,SAASC,SAAT;AACA,SAASC,aAAT;AACA,SAASC,MAAT;AACA,SAASC,yBAAT;AACA,SAASC,sBAAT;AACA,SAASC,UAAT;AACA,SAASC,WAAT;AASA,OAAO,IAAMC,kBAAqD,GAAG,SAAxDA,kBAAwD,OAK/D;EAAA,IAJJC,QAII,QAJJA,QAII;EAAA,IAHJC,OAGI,QAHJA,OAGI;EAAA,uBAFJC,MAEI;EAAA,IAFJA,MAEI,4BAFK,KAEL;EAAA,IADDC,SACC;;EACJ,cAAqBT,MAAM,EAA3B;EAAA,IAAQU,QAAR,WAAQA,QAAR;;EACA,IAAMC,QAAQ,GAAGP,WAAW,EAA5B;;EACA,sBAA8BV,KAAK,CAACkB,QAANlB,CAAec,MAAfd,CAA9B;EAAA;EAAA,IAAOmB,OAAP;EAAA,IAAgBC,UAAhB;;EACA,IAAMC,OAAO,GAAGF,OAAO,IAAI,CAACL,MAA5B;;EACA,qBAAsBT,aAAa,EAAnC;EAAA,IAAQiB,SAAR,kBAAQA,SAAR;;EACA,IAAMC,SAAS,GAAGD,SAAS,IAAIlB,SAAS,CAACoB,YAAzC;EACA,IAAMC,UAAU,GAAGzB,KAAK,CAAC0B,MAAN1B,CAA6B,IAA7BA,CAAnB;EAEAO,yBAAyB,CAAC,YAAM;IAC9BO,MAAM,IAAIM,UAAU,CAAC,IAAD,CAApBN;EADuB,GAEtB,CAACA,MAAD,CAFsB,CAAzBP,CATI,CAaJ;;EACAC,sBAAsB,CACpBQ,QADoB,EAEpB,OAFoB,EAGpBO,SAAS,IACPT,MADFS,IAEE,CAACF,OAFHE,IAGG,UAACI,KAAD,EAAW;IACV,IACEF,UAAU,CAACG,OAAXH,IACA,CAACA,UAAU,CAACG,OAAXH,CAAmBI,QAAnBJ,CAA4BE,KAAK,CAACG,MAAlCL,CAFH,EAGE;MACAZ,OAAO;IACR;EAZe,EAAtBL,CAdI,CA8BJ;;EACA,IAAMuB,cAAc,GAAG,SAAjBA,cAAiB;IAAA,OAAMX,UAAU,CAAC,KAAD,CAAhB;EAAvB;;EACA,IAAMY,iBAAiB,GAAGvB,UAAU,CAACsB,cAAD,EAAiB,GAAjB,CAApC;EACA/B,KAAK,CAACiC,SAANjC,CACE;IAAA,OAAOqB,OAAO,GAAGW,iBAAiB,CAACE,GAAlBF,EAAH,GAA6BA,iBAAiB,CAACG,KAAlBH,EAA3C;EADF,GAEE,CAACA,iBAAD,EAAoBX,OAApB,CAFFrB;EAKA,OACEoC,oBAACnC,WAAD,eACMc,SADN;IAEEsB,SAAS,EAAEnC,UAAU,CAACC,YAAY,CAAC,oBAAD,EAAuBc,QAAvB,CAAb,EAA+C;MAClE,8BAA8BH,MADoC;MAElE,+BAA+BO,OAFmC;MAGlE,+BAA+BE;IAHmC,CAA/C,CAFvB;IAOEe,QAAQ,EAAC;EAPX,IASEF;IACEC,SAAS,EAAC,wBADZ;IAEEE,GAAG,EAAEd,UAFP;IAGEM,cAAc,EAAEV,OAAO,GAAGU,cAAH,GAAoBS;EAH7C,GAKEJ;IAAKC,SAAS,EAAC;EAAf,GAA8ClB,OAAO,IAAIP,QAAzD,CALF,CATF,EAgBG,CAACW,SAAD,IAAcJ,OAAd,IACCiB;IAAKK,OAAO,EAAE5B,OAAd;IAAuBwB,SAAS,EAAC;EAAjC,EAjBJ,CADF;AA3CK","names":["React","FixedLayout","classNames","getClassName","ViewWidth","useAdaptivity","useDOM","useIsomorphicLayoutEffect","useGlobalEventListener","useTimeout","usePlatform","PanelHeaderContext","children","onClose","opened","restProps","document","platform","useState","visible","setVisible","closing","viewWidth","isDesktop","SMALL_TABLET","elementRef","useRef","event","current","contains","target","onAnimationEnd","animationFallback","useEffect","set","clear","createScopedElement","vkuiClass","vertical","ref","undefined","onClick"],"sources":["/Users/al.balandin/code/vkvideo-test/node_modules/@vkontakte/vkui/src/components/PanelHeaderContext/PanelHeaderContext.tsx"],"sourcesContent":["import * as React from \"react\";\nimport FixedLayout from \"../FixedLayout/FixedLayout\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { ViewWidth } from \"../AdaptivityProvider/AdaptivityContext\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { useDOM } from \"../../lib/dom\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { useGlobalEventListener } from \"../../hooks/useGlobalEventListener\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport \"./PanelHeaderContext.css\";\n\nexport interface PanelHeaderContextProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  opened: boolean;\n  onClose: VoidFunction;\n}\n\nexport const PanelHeaderContext: React.FC<PanelHeaderContextProps> = ({\n  children,\n  onClose,\n  opened = false,\n  ...restProps\n}) => {\n  const { document } = useDOM();\n  const platform = usePlatform();\n  const [visible, setVisible] = React.useState(opened);\n  const closing = visible && !opened;\n  const { viewWidth } = useAdaptivity();\n  const isDesktop = viewWidth >= ViewWidth.SMALL_TABLET;\n  const elementRef = React.useRef<HTMLDivElement>(null);\n\n  useIsomorphicLayoutEffect(() => {\n    opened && setVisible(true);\n  }, [opened]);\n\n  // start closing on outer click\n  useGlobalEventListener(\n    document,\n    \"click\",\n    isDesktop &&\n      opened &&\n      !closing &&\n      ((event) => {\n        if (\n          elementRef.current &&\n          !elementRef.current.contains(event.target as Node)\n        ) {\n          onClose();\n        }\n      })\n  );\n\n  // fallback onAnimationEnd when animationend not supported\n  const onAnimationEnd = () => setVisible(false);\n  const animationFallback = useTimeout(onAnimationEnd, 200);\n  React.useEffect(\n    () => (closing ? animationFallback.set() : animationFallback.clear()),\n    [animationFallback, closing]\n  );\n\n  return (\n    <FixedLayout\n      {...restProps}\n      vkuiClass={classNames(getClassName(\"PanelHeaderContext\", platform), {\n        \"PanelHeaderContext--opened\": opened,\n        \"PanelHeaderContext--closing\": closing,\n        \"PanelHeaderContext--desktop\": isDesktop,\n      })}\n      vertical=\"top\"\n    >\n      <div\n        vkuiClass=\"PanelHeaderContext__in\"\n        ref={elementRef}\n        onAnimationEnd={closing ? onAnimationEnd : undefined}\n      >\n        <div vkuiClass=\"PanelHeaderContext__content\">{visible && children}</div>\n      </div>\n      {!isDesktop && visible && (\n        <div onClick={onClose} vkuiClass=\"PanelHeaderContext__fade\" />\n      )}\n    </FixedLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}