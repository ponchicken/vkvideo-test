{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"size\"],\n    _excluded2 = [\"size\"],\n    _excluded3 = [\"mode\", \"imageTheme\", \"size\", \"before\", \"asideMode\", \"header\", \"subheader\", \"text\", \"children\", \"background\", \"actions\", \"onDismiss\", \"dismissLabel\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { ANDROID, IOS, VKCOM } from \"../../lib/platform\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport { Icon24Chevron, Icon24DismissSubstract, Icon24DismissDark, Icon24Cancel } from \"@vkontakte/icons\";\nimport Tappable from \"../Tappable/Tappable\";\nimport IconButton from \"../IconButton/IconButton\";\nimport Headline from \"../Typography/Headline/Headline\";\nimport Subhead from \"../Typography/Subhead/Subhead\";\nimport Text from \"../Typography/Text/Text\";\nimport Title from \"../Typography/Title/Title\";\n\nvar BannerHeader = function BannerHeader(_ref) {\n  var size = _ref.size,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  return size === \"m\" ? createScopedElement(Title, _extends({\n    level: \"2\",\n    weight: \"2\"\n  }, restProps)) : createScopedElement(Headline, _extends({\n    weight: \"medium\"\n  }, restProps));\n};\n\nvar BannerSubheader = function BannerSubheader(_ref2) {\n  var size = _ref2.size,\n      restProps = _objectWithoutProperties(_ref2, _excluded2);\n\n  return size === \"m\" ? createScopedElement(Text, _extends({\n    weight: \"regular\"\n  }, restProps)) : createScopedElement(Subhead, restProps);\n};\n\nvar Banner = function Banner(props) {\n  var platform = usePlatform();\n\n  var mode = props.mode,\n      imageTheme = props.imageTheme,\n      size = props.size,\n      before = props.before,\n      asideMode = props.asideMode,\n      header = props.header,\n      subheader = props.subheader,\n      text = props.text,\n      children = props.children,\n      background = props.background,\n      actions = props.actions,\n      onDismiss = props.onDismiss,\n      dismissLabel = props.dismissLabel,\n      restProps = _objectWithoutProperties(props, _excluded3);\n\n  return createScopedElement(\"section\", _extends({}, restProps, {\n    vkuiClass: classNames(getClassName(\"Banner\", platform), \"Banner--md-\".concat(mode), \"Banner--sz-\".concat(size), {\n      \"Banner--inverted\": mode === \"image\" && imageTheme === \"dark\"\n    })\n  }), createScopedElement(Tappable, {\n    vkuiClass: \"Banner__in\",\n    activeMode: platform === IOS ? \"opacity\" : \"background\",\n    disabled: asideMode !== \"expand\",\n    role: asideMode === \"expand\" ? \"button\" : undefined\n  }, mode === \"image\" && background && createScopedElement(\"div\", {\n    \"aria-hidden\": \"true\",\n    vkuiClass: \"Banner__bg\"\n  }, background), before && createScopedElement(\"div\", {\n    vkuiClass: \"Banner__before\"\n  }, before), createScopedElement(\"div\", {\n    vkuiClass: \"Banner__content\"\n  }, hasReactNode(header) && createScopedElement(BannerHeader, {\n    size: size,\n    Component: \"span\",\n    vkuiClass: \"Banner__header\"\n  }, header), hasReactNode(subheader) && createScopedElement(BannerSubheader, {\n    Component: \"span\",\n    size: size,\n    vkuiClass: \"Banner__subheader\"\n  }, subheader), hasReactNode(text) && createScopedElement(Text, {\n    weight: \"regular\",\n    vkuiClass: \"Banner__text\"\n  }, text), hasReactNode(actions) && React.Children.count(actions) > 0 && createScopedElement(\"div\", {\n    vkuiClass: \"Banner__actions\"\n  }, actions)), !!asideMode && createScopedElement(\"div\", {\n    vkuiClass: \"Banner__aside\"\n  }, asideMode === \"expand\" && createScopedElement(Icon24Chevron, null), asideMode === \"dismiss\" && createScopedElement(IconButton, {\n    \"aria-label\": dismissLabel,\n    vkuiClass: \"Banner__dismiss\",\n    onClick: onDismiss,\n    hoverMode: \"opacity\",\n    hasActive: false\n  }, (platform === ANDROID || platform === VKCOM) && createScopedElement(Icon24Cancel, null), platform === IOS && (mode === \"image\" ? createScopedElement(Icon24DismissDark, null) : createScopedElement(Icon24DismissSubstract, null))))));\n};\n\nBanner.defaultProps = {\n  dismissLabel: \"Скрыть\",\n  mode: \"tint\",\n  size: \"s\",\n  imageTheme: \"dark\"\n}; // eslint-disable-next-line import/no-default-export\n\nexport default Banner;","map":{"version":3,"mappings":"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","names":["React","getClassName","classNames","usePlatform","ANDROID","IOS","VKCOM","hasReactNode","Icon24Chevron","Icon24DismissSubstract","Icon24DismissDark","Icon24Cancel","Tappable","IconButton","Headline","Subhead","Text","Title","BannerHeader","size","restProps","createScopedElement","level","weight","BannerSubheader","Banner","props","platform","mode","imageTheme","before","asideMode","header","subheader","text","children","background","actions","onDismiss","dismissLabel","vkuiClass","activeMode","disabled","role","undefined","Component","Children","count","onClick","hoverMode","hasActive","defaultProps"],"sources":["/Users/al.balandin/code/vkvideo-test/node_modules/@vkontakte/vkui/src/components/Banner/Banner.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { HasComponent } from \"../../types\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { ANDROID, IOS, VKCOM } from \"../../lib/platform\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport {\n  Icon24Chevron,\n  Icon24DismissSubstract,\n  Icon24DismissDark,\n  Icon24Cancel,\n} from \"@vkontakte/icons\";\nimport Tappable from \"../Tappable/Tappable\";\nimport IconButton from \"../IconButton/IconButton\";\nimport Headline from \"../Typography/Headline/Headline\";\nimport Subhead from \"../Typography/Subhead/Subhead\";\nimport Text from \"../Typography/Text/Text\";\nimport Title from \"../Typography/Title/Title\";\nimport \"./Banner.css\";\n\nexport interface BannerProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Тип баннера.\n   */\n  mode?: \"tint\" | \"image\";\n  size?: \"s\" | \"m\";\n  /**\n   * Тип действия в правой части баннера.\n   *\n   * - `dismiss` – отображается иконка крестика, при клике на неё сработает свойство `onDismiss`.\n   * - `expand` – отображается иконка шеврона, которая подразумевает, что при клике на баннер можно куда-то перейти.\n   */\n  asideMode?: \"dismiss\" | \"expand\";\n  /**\n   * Срабатывает при клике на иконку крестика при `asideMode=\"dismiss\"`.\n   */\n  onDismiss?: React.MouseEventHandler<HTMLButtonElement>;\n  /**\n   * `aria-label` для кнопки при `asideMode=\"dismiss\". Необходим, чтобы кнопка была доступной.\n   */\n  dismissLabel?: string;\n  /**\n   * Содержимое, отображаемое в левой части баннера.\n   */\n  before?: React.ReactNode;\n  /**\n   * Заголовок. <br />\n   * При использовании этого свойства рекомендуется не указывать `text`.\n   */\n  header?: React.ReactNode;\n  /**\n   * Подзаголовок. <br />\n   * При использовании этого свойства рекомендуется не указывать `text`.\n   */\n  subheader?: React.ReactNode;\n  /**\n   * Текст баннера. <br />\n   * Это свойство следует использовать без указания `header` и `subheader`.\n   */\n  text?: React.ReactNode;\n  /**\n   * При использовании `mode=\"image\"`.\n   *\n   * - `light` – в качестве фона используется светлое изображение, цвет текста в баннере будет тёмным.\n   * - `dark` – в качестве фона используется тёмное изображение, цвет текста будет светлым.\n   */\n  imageTheme?: \"light\" | \"dark\";\n  /**\n   * При использовании `mode=\"image\"`.\n   *\n   * Элемент, который нужно стилизовать цветом и/или фоном. Этот элемент будет растянут на 100% ширины и высоты баннера.\n   */\n  background?: React.ReactNode;\n  /**\n   * Кнопки, отображаемые в баннере.\n   *\n   * - В режиме `tint` или в `image` со светлым фоном рекомендуется использовать только `<Button mode=\"primary\" />` или `<Button mode=\"tertiary\" hasHover={false} />`.\n   * - В режиме `image` с тёмным фоном – `<Button mode=\"overlay_primary\" />`.\n   */\n  actions?: React.ReactNode;\n}\n\ntype BannerTypographyProps = Pick<BannerProps, \"size\"> & HasComponent;\n\nconst BannerHeader: React.FC<BannerTypographyProps> = ({\n  size,\n  ...restProps\n}) => {\n  return size === \"m\" ? (\n    <Title level=\"2\" weight=\"2\" {...restProps} />\n  ) : (\n    <Headline weight=\"medium\" {...restProps} />\n  );\n};\n\nconst BannerSubheader: React.FC<BannerTypographyProps> = ({\n  size,\n  ...restProps\n}) => {\n  return size === \"m\" ? (\n    <Text weight=\"regular\" {...restProps} />\n  ) : (\n    <Subhead {...restProps} />\n  );\n};\n\nconst Banner: React.FC<BannerProps> = (props: BannerProps) => {\n  const platform = usePlatform();\n  const {\n    mode,\n    imageTheme,\n    size,\n    before,\n    asideMode,\n    header,\n    subheader,\n    text,\n    children,\n    background,\n    actions,\n    onDismiss,\n    dismissLabel,\n    ...restProps\n  } = props;\n\n  return (\n    <section\n      {...restProps}\n      vkuiClass={classNames(\n        getClassName(\"Banner\", platform),\n        `Banner--md-${mode}`,\n        `Banner--sz-${size}`,\n        {\n          \"Banner--inverted\": mode === \"image\" && imageTheme === \"dark\",\n        }\n      )}\n    >\n      <Tappable\n        vkuiClass=\"Banner__in\"\n        activeMode={platform === IOS ? \"opacity\" : \"background\"}\n        disabled={asideMode !== \"expand\"}\n        role={asideMode === \"expand\" ? \"button\" : undefined}\n      >\n        {mode === \"image\" && background && (\n          <div aria-hidden=\"true\" vkuiClass=\"Banner__bg\">\n            {background}\n          </div>\n        )}\n\n        {before && <div vkuiClass=\"Banner__before\">{before}</div>}\n\n        <div vkuiClass=\"Banner__content\">\n          {hasReactNode(header) && (\n            <BannerHeader\n              size={size}\n              Component=\"span\"\n              vkuiClass=\"Banner__header\"\n            >\n              {header}\n            </BannerHeader>\n          )}\n          {hasReactNode(subheader) && (\n            <BannerSubheader\n              Component=\"span\"\n              size={size}\n              vkuiClass=\"Banner__subheader\"\n            >\n              {subheader}\n            </BannerSubheader>\n          )}\n          {hasReactNode(text) && (\n            <Text weight=\"regular\" vkuiClass=\"Banner__text\">\n              {text}\n            </Text>\n          )}\n          {hasReactNode(actions) && React.Children.count(actions) > 0 && (\n            <div vkuiClass=\"Banner__actions\">{actions}</div>\n          )}\n        </div>\n\n        {!!asideMode && (\n          <div vkuiClass=\"Banner__aside\">\n            {asideMode === \"expand\" && <Icon24Chevron />}\n\n            {asideMode === \"dismiss\" && (\n              <IconButton\n                aria-label={dismissLabel}\n                vkuiClass=\"Banner__dismiss\"\n                onClick={onDismiss}\n                hoverMode=\"opacity\"\n                hasActive={false}\n              >\n                {(platform === ANDROID || platform === VKCOM) && (\n                  <Icon24Cancel />\n                )}\n                {platform === IOS &&\n                  (mode === \"image\" ? (\n                    <Icon24DismissDark />\n                  ) : (\n                    <Icon24DismissSubstract />\n                  ))}\n              </IconButton>\n            )}\n          </div>\n        )}\n      </Tappable>\n    </section>\n  );\n};\n\nBanner.defaultProps = {\n  dismissLabel: \"Скрыть\",\n  mode: \"tint\",\n  size: \"s\",\n  imageTheme: \"dark\",\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default Banner;\n"]},"metadata":{},"sourceType":"module"}