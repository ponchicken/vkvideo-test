{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/typeof\";\nexport function classNames() {\n  var result = [];\n\n  for (var i = 0; i < arguments.length; i++) {\n    var item = arguments[i];\n\n    if (!item) {\n      continue;\n    }\n\n    switch (_typeof(item)) {\n      case \"string\":\n        result.push(item);\n        break;\n\n      case \"object\":\n        for (var key in item) {\n          if (item[key]) {\n            result.push(key);\n          }\n        }\n\n        break;\n\n      default:\n        result.push(\"\".concat(item));\n    }\n  }\n\n  return result.length > 1 ? result : result[0] || \"\";\n}\nexport function classNamesString() {\n  var res = classNames.apply(void 0, arguments);\n  return typeof res === \"string\" ? res : res.join(\" \");\n}","map":{"version":3,"mappings":";AAaA,OAAO,SAASA,UAAT,GAAsB;EAC3B,IAAIC,MAAgB,GAAG,EAAvB;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;IACzC,IAAMG,IAAI,GAAGF,SAAS,CAACD,CAAD,CAAtB;;IACA,IAAI,CAACG,IAAL,EAAW;MACT;IACD;;IACD,gBAAeA,IAAf;MACE,KAAK,QAAL;QACEJ,MAAM,CAACK,IAAPL,CAAYI,IAAZJ;QACA;;MACF,KAAK,QAAL;QACE,KAAK,IAAIM,GAAT,IAAgBF,IAAhB,EAAsB;UACpB,IAAIA,IAAI,CAACE,GAAD,CAAR,EAAe;YACbN,MAAM,CAACK,IAAPL,CAAYM,GAAZN;UACD;QACF;;QACD;;MACF;QACEA,MAAM,CAACK,IAAPL,WAAeI,IAAf;IAZJ;EAcD;;EAED,OAAOJ,MAAM,CAACG,MAAPH,GAAgB,CAAhBA,GAAoBA,MAApBA,GAA6BA,MAAM,CAAC,CAAD,CAANA,IAAa,EAAjD;AACD;AAED,OAAO,SAASO,gBAAT,GAAgD;EACrD,IAAMC,GAAG,GAAGT,UAAU,MAAVA,mBAAZ;EACA,OAAO,OAAOS,GAAP,KAAe,QAAf,GAA0BA,GAA1B,GAAgCA,GAAG,CAACC,IAAJD,CAAS,GAATA,CAAvC;AACD","names":["classNames","result","i","arguments","length","item","push","key","classNamesString","res","join"],"sources":["/Users/al.balandin/code/vkvideo-test/node_modules/@vkontakte/vkui/src/lib/classNames.ts"],"sourcesContent":["export interface ObjectClassNames {\n  [index: string]: boolean | undefined | null;\n}\n\nexport type ClassName =\n  | number\n  | string\n  | ObjectClassNames\n  | false\n  | null\n  | undefined;\n\nexport function classNames(...classnames: ClassName[]): string | string[];\nexport function classNames() {\n  let result: string[] = [];\n\n  for (let i = 0; i < arguments.length; i++) {\n    const item = arguments[i];\n    if (!item) {\n      continue;\n    }\n    switch (typeof item) {\n      case \"string\":\n        result.push(item);\n        break;\n      case \"object\":\n        for (let key in item) {\n          if (item[key]) {\n            result.push(key);\n          }\n        }\n        break;\n      default:\n        result.push(`${item}`);\n    }\n  }\n\n  return result.length > 1 ? result : result[0] || \"\";\n}\n\nexport function classNamesString(...args: ClassName[]) {\n  const res = classNames(...args);\n  return typeof res === \"string\" ? res : res.join(\" \");\n}\n"]},"metadata":{},"sourceType":"module"}