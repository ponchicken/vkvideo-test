{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useContext, useState, useCallback } from \"react\";\nimport { AppRootContext } from \"../components/AppRoot/AppRootContext\";\nexport function useFocusVisible() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFocused = _useState2[0],\n      setIsFocused = _useState2[1];\n\n  var _useContext = useContext(AppRootContext),\n      keyboardInput = _useContext.keyboardInput;\n\n  var onFocus = useCallback(function (event) {\n    event.stopPropagation();\n    setIsFocused(true);\n  }, [setIsFocused]);\n  var onBlur = useCallback(function (event) {\n    event.stopPropagation();\n    setIsFocused(false);\n  }, [setIsFocused]);\n  var focusVisible = keyboardInput && isFocused;\n  return {\n    focusVisible: focusVisible,\n    onFocus: onFocus,\n    onBlur: onBlur\n  };\n}","map":{"version":3,"mappings":";AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,WAA/B,QAA8D,OAA9D;AACA,SAASC,cAAT;AAEA,OAAO,SAASC,eAAT,GAA2B;EAChC,gBAAkCH,QAAQ,CAAC,KAAD,CAA1C;EAAA;EAAA,IAAOI,SAAP;EAAA,IAAkBC,YAAlB;;EACA,kBAA0BN,UAAU,CAACG,cAAD,CAApC;EAAA,IAAQI,aAAR,eAAQA,aAAR;;EAEA,IAAMC,OAAO,GAAGN,WAAW,CACzB,UAACO,KAAD,EAAoC;IAClCA,KAAK,CAACC,eAAND;IACAH,YAAY,CAAC,IAAD,CAAZA;EAHuB,GAKzB,CAACA,YAAD,CALyB,CAA3B;EAQA,IAAMK,MAAM,GAAGT,WAAW,CACxB,UAACO,KAAD,EAAoC;IAClCA,KAAK,CAACC,eAAND;IACAH,YAAY,CAAC,KAAD,CAAZA;EAHsB,GAKxB,CAACA,YAAD,CALwB,CAA1B;EAQA,IAAMM,YAAY,GAAGL,aAAa,IAAIF,SAAtC;EAEA,OAAO;IACLO,YAAY,EAAZA,YADK;IAELJ,OAAO,EAAPA,OAFK;IAGLG,MAAM,EAANA;EAHK,CAAP;AAKD","names":["useContext","useState","useCallback","AppRootContext","useFocusVisible","isFocused","setIsFocused","keyboardInput","onFocus","event","stopPropagation","onBlur","focusVisible"],"sources":["/Users/al.balandin/code/vkvideo-test/node_modules/@vkontakte/vkui/src/hooks/useFocusVisible.ts"],"sourcesContent":["import { useContext, useState, useCallback, FocusEvent } from \"react\";\nimport { AppRootContext } from \"../components/AppRoot/AppRootContext\";\n\nexport function useFocusVisible() {\n  const [isFocused, setIsFocused] = useState(false);\n  const { keyboardInput } = useContext(AppRootContext);\n\n  const onFocus = useCallback(\n    (event: FocusEvent<HTMLElement>) => {\n      event.stopPropagation();\n      setIsFocused(true);\n    },\n    [setIsFocused]\n  );\n\n  const onBlur = useCallback(\n    (event: FocusEvent<HTMLElement>) => {\n      event.stopPropagation();\n      setIsFocused(false);\n    },\n    [setIsFocused]\n  );\n\n  const focusVisible = keyboardInput && isFocused;\n\n  return {\n    focusVisible,\n    onFocus,\n    onBlur,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}