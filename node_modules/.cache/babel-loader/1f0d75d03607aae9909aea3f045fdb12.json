{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"size\", \"name\", \"options\", \"getRootRef\", \"onChange\", \"value\", \"defaultValue\", \"children\"],\n    _excluded2 = [\"label\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { generateRandomId, noop } from \"../../lib/utils\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { SegmentedControlOption } from \"./SegmentedControlOption/SegmentedControlOption\";\nvar warn = warnOnce(\"SegmentedControl\");\nexport var SegmentedControl = function SegmentedControl(_ref) {\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? \"l\" : _ref$size,\n      name = _ref.name,\n      options = _ref.options,\n      getRootRef = _ref.getRootRef,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? noop : _ref$onChange,\n      value = _ref.value,\n      defaultValue = _ref.defaultValue,\n      children = _ref.children,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var initialValue = defaultValue !== null && defaultValue !== void 0 ? defaultValue : value;\n\n  if (!initialValue) {\n    var _options$;\n\n    initialValue = (_options$ = options[0]) === null || _options$ === void 0 ? void 0 : _options$.value;\n  }\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeOptionIdx = _React$useState2[0],\n      updateActiveOptionIdx = _React$useState2[1];\n\n  var _React$useState3 = React.useState(initialValue),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      activeValue = _React$useState4[0],\n      updateActiveValue = _React$useState4[1];\n\n  var nameRef = React.useRef(name !== null && name !== void 0 ? name : generateRandomId());\n  useIsomorphicLayoutEffect(function () {\n    var _activeOptionIdx = options.findIndex(function (option) {\n      return option.value === activeValue;\n    });\n\n    if (_activeOptionIdx === -1 && process.env.NODE_ENV === \"development\") {\n      warn(\"defaultValue: такого значения нет среди опций!\");\n    }\n\n    updateActiveOptionIdx(_activeOptionIdx);\n  }, [activeValue, options]);\n  var translateX = \"translateX(\".concat(100 * activeOptionIdx, \"%)\");\n\n  var handleOnChange = function handleOnChange(value) {\n    updateActiveValue(value);\n    onChange(value);\n  };\n\n  return createScopedElement(\"div\", _extends({}, restProps, {\n    vkuiClass: classNames(\"SegmentedControl\", \"SegmentedControl--\".concat(size)),\n    ref: getRootRef\n  }), createScopedElement(\"div\", {\n    role: \"radiogroup\",\n    vkuiClass: \"SegmentedControl__in\"\n  }, activeOptionIdx > -1 && createScopedElement(\"div\", {\n    \"aria-hidden\": \"true\",\n    vkuiClass: \"SegmentedControl__slider\",\n    style: {\n      width: \"\".concat(100 / options.length, \"%\"),\n      transform: translateX,\n      WebkitTransform: translateX\n    }\n  }), options.map(function (_ref2) {\n    var label = _ref2.label,\n        optionProps = _objectWithoutProperties(_ref2, _excluded2);\n\n    return createScopedElement(SegmentedControlOption, _extends({\n      key: \"\".concat(optionProps.value)\n    }, optionProps, {\n      vkuiClass: \"SegmentedControl__option\",\n      name: nameRef.current,\n      checked: activeValue === optionProps.value,\n      onChange: function onChange() {\n        return handleOnChange(optionProps.value);\n      }\n    }), label);\n  })));\n};","map":{"version":3,"mappings":"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","names":["React","classNames","useIsomorphicLayoutEffect","generateRandomId","noop","warnOnce","SegmentedControlOption","warn","SegmentedControl","size","name","options","getRootRef","onChange","value","defaultValue","children","restProps","initialValue","_options$","useState","activeOptionIdx","updateActiveOptionIdx","activeValue","updateActiveValue","nameRef","useRef","_activeOptionIdx","findIndex","option","process","env","NODE_ENV","translateX","handleOnChange","createScopedElement","vkuiClass","ref","role","style","width","length","transform","WebkitTransform","map","label","optionProps","key","current","checked"],"sources":["/Users/al.balandin/code/vkvideo-test/node_modules/@vkontakte/vkui/src/components/SegmentedControl/SegmentedControl.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { generateRandomId, noop } from \"../../lib/utils\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { SegmentedControlOption } from \"./SegmentedControlOption/SegmentedControlOption\";\nimport { HasRootRef } from \"../../types\";\nimport \"./SegmentedControl.css\";\n\nexport type SegmentedControlValue = string | number | undefined;\n\nexport interface SegmentedControlOptionInterface\n  extends Omit<React.HTMLAttributes<HTMLElement>, \"label\"> {\n  label: React.ReactChild;\n  value: SegmentedControlValue;\n}\n\nexport interface SegmentedControlProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onChange\">,\n    HasRootRef<HTMLDivElement> {\n  options: SegmentedControlOptionInterface[];\n  size?: \"m\" | \"l\";\n  name?: string;\n  onChange?: (value: SegmentedControlValue) => void;\n  value?: SegmentedControlValue;\n  defaultValue?: SegmentedControlValue;\n}\n\nconst warn = warnOnce(\"SegmentedControl\");\nexport const SegmentedControl: React.FC<SegmentedControlProps> = ({\n  size = \"l\",\n  name,\n  options,\n  getRootRef,\n  onChange = noop,\n  value,\n  defaultValue,\n  children,\n  ...restProps\n}) => {\n  let initialValue = defaultValue ?? value;\n\n  if (!initialValue) {\n    initialValue = options[0]?.value;\n  }\n\n  const [activeOptionIdx, updateActiveOptionIdx] = React.useState<number>(0);\n  const [activeValue, updateActiveValue] =\n    React.useState<SegmentedControlValue>(initialValue);\n\n  const nameRef = React.useRef<string>(name ?? generateRandomId());\n\n  useIsomorphicLayoutEffect(() => {\n    const _activeOptionIdx = options.findIndex(\n      (option) => option.value === activeValue\n    );\n\n    if (_activeOptionIdx === -1 && process.env.NODE_ENV === \"development\") {\n      warn(\"defaultValue: такого значения нет среди опций!\");\n    }\n\n    updateActiveOptionIdx(_activeOptionIdx);\n  }, [activeValue, options]);\n\n  const translateX = `translateX(${100 * activeOptionIdx}%)`;\n\n  const handleOnChange = (value: SegmentedControlValue) => {\n    updateActiveValue(value);\n    onChange(value);\n  };\n\n  return (\n    <div\n      {...restProps}\n      vkuiClass={classNames(\"SegmentedControl\", `SegmentedControl--${size}`)}\n      ref={getRootRef}\n    >\n      <div role=\"radiogroup\" vkuiClass=\"SegmentedControl__in\">\n        {activeOptionIdx > -1 && (\n          <div\n            aria-hidden=\"true\"\n            vkuiClass=\"SegmentedControl__slider\"\n            style={{\n              width: `${100 / options.length}%`,\n              transform: translateX,\n              WebkitTransform: translateX,\n            }}\n          />\n        )}\n        {options.map(({ label, ...optionProps }) => (\n          <SegmentedControlOption\n            key={`${optionProps.value}`}\n            {...optionProps}\n            vkuiClass=\"SegmentedControl__option\"\n            name={nameRef.current}\n            checked={activeValue === optionProps.value}\n            onChange={() => handleOnChange(optionProps.value)}\n          >\n            {label}\n          </SegmentedControlOption>\n        ))}\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}