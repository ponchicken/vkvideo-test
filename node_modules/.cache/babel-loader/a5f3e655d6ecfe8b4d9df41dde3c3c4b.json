{"ast":null,"code":"import * as React from \"react\";\nimport { transitionEvent } from \"../lib/supportEvents\";\nexport var useWaitTransitionFinish = function useWaitTransitionFinish() {\n  var timeoutRef = React.useRef(null);\n\n  var waitTransitionFinish = function waitTransitionFinish(element, eventHandler, durationFallback) {\n    if (element) {\n      if (transitionEvent.supported && transitionEvent.name) {\n        element.removeEventListener(transitionEvent.name, eventHandler);\n        element.addEventListener(transitionEvent.name, eventHandler);\n      } else {\n        if (timeoutRef !== null && timeoutRef !== void 0 && timeoutRef.current) {\n          clearTimeout(timeoutRef.current);\n        }\n\n        timeoutRef.current = setTimeout(eventHandler, durationFallback);\n      }\n    }\n  };\n\n  return {\n    waitTransitionFinish: waitTransitionFinish\n  };\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,eAAT;AAEA,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;EAC3C,IAAMC,UAAU,GAAGH,KAAK,CAACI,MAANJ,CAAmD,IAAnDA,CAAnB;;EAEA,IAAMK,oBAAoB,GAAG,SAAvBA,oBAAuB,CAC3BC,OAD2B,EAE3BC,YAF2B,EAG3BC,gBAH2B,EAIxB;IACH,IAAIF,OAAJ,EAAa;MACX,IAAIL,eAAe,CAACQ,SAAhBR,IAA6BA,eAAe,CAACS,IAAjD,EAAuD;QACrDJ,OAAO,CAACK,mBAARL,CAA4BL,eAAe,CAACS,IAA5CJ,EAAkDC,YAAlDD;QACAA,OAAO,CAACM,gBAARN,CAAyBL,eAAe,CAACS,IAAzCJ,EAA+CC,YAA/CD;MAFF,OAGO;QACL,IAAIH,UAAJ,SAAIA,cAAJ,WAAIA,cAAU,CAAEU,OAAhB,EAAyB;UACvBC,YAAY,CAACX,UAAU,CAACU,OAAZ,CAAZC;QACD;;QACDX,UAAU,CAACU,OAAXV,GAAqBY,UAAU,CAACR,YAAD,EAAeC,gBAAf,CAA/BL;MACD;IACF;EAfH;;EAkBA,OAAO;IACLE,oBAAoB,EAApBA;EADK,CAAP;AArBK","names":["React","transitionEvent","useWaitTransitionFinish","timeoutRef","useRef","waitTransitionFinish","element","eventHandler","durationFallback","supported","name","removeEventListener","addEventListener","current","clearTimeout","setTimeout"],"sources":["/Users/al.balandin/code/vkvideo-test/node_modules/@vkontakte/vkui/src/hooks/useWaitTransitionFinish.ts"],"sourcesContent":["import * as React from \"react\";\nimport { transitionEvent } from \"../lib/supportEvents\";\n\nexport const useWaitTransitionFinish = () => {\n  const timeoutRef = React.useRef<ReturnType<typeof setTimeout> | null>(null);\n\n  const waitTransitionFinish = (\n    element: HTMLElement | null,\n    eventHandler: VoidFunction,\n    durationFallback: number\n  ) => {\n    if (element) {\n      if (transitionEvent.supported && transitionEvent.name) {\n        element.removeEventListener(transitionEvent.name, eventHandler);\n        element.addEventListener(transitionEvent.name, eventHandler);\n      } else {\n        if (timeoutRef?.current) {\n          clearTimeout(timeoutRef.current);\n        }\n        timeoutRef.current = setTimeout(eventHandler, durationFallback);\n      }\n    }\n  };\n\n  return {\n    waitTransitionFinish,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}