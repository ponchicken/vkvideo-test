{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"activeStory\", \"tabbar\", \"children\", \"viewWidth\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { withAdaptivity, ViewWidth } from \"../../hoc/withAdaptivity\";\nimport { ScrollSaver } from \"./ScrollSaver\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nvar warn = warnOnce(\"Epic\");\nexport var Epic = function Epic(props) {\n  var _ref;\n\n  var platform = usePlatform();\n  var scroll = React.useRef({}).current;\n\n  var activeStory = props.activeStory,\n      tabbar = props.tabbar,\n      children = props.children,\n      viewWidth = props.viewWidth,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  if (process.env.NODE_ENV === \"development\" && !tabbar && viewWidth < ViewWidth.SMALL_TABLET) {\n    warn(\"Using Epic without tabbar is not recommended on mobile\");\n  }\n\n  var story = (_ref = React.Children.toArray(children).find(function (story) {\n    return /*#__PURE__*/React.isValidElement(story) && getNavId(story.props, warn) === activeStory;\n  })) !== null && _ref !== void 0 ? _ref : null;\n  return createScopedElement(\"div\", _extends({}, restProps, {\n    vkuiClass: getClassName(\"Epic\", platform)\n  }), createScopedElement(ScrollSaver, {\n    key: activeStory,\n    initialScroll: scroll[activeStory] || 0,\n    saveScroll: function saveScroll(value) {\n      return scroll[activeStory] = value;\n    }\n  }, story), tabbar);\n}; // eslint-disable-next-line import/no-default-export\n\nexport default withAdaptivity(Epic, {\n  viewWidth: true\n});","map":{"version":3,"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT;AACA,SAASC,WAAT;AACA,SAASC,cAAT,EAAyBC,SAAzB;AACA,SAASC,WAAT;AACA,SAASC,QAAT;AACA,SAASC,QAAT;AAcA,IAAMC,IAAI,GAAGD,QAAQ,CAAC,MAAD,CAArB;AAEA,OAAO,IAAME,IAAsD,GAAG,SAAzDA,IAAyD,CACpEC,KADoE,EAEjE;EAAA;;EACH,IAAMC,QAAQ,GAAGT,WAAW,EAA5B;EACA,IAAMU,MAAM,GAAGZ,KAAK,CAACa,MAANb,CAAwC,EAAxCA,EAA4Cc,OAA3D;;EACA,IAAQC,WAAR,GAAmEL,KAAnE,CAAQK,WAAR;EAAA,IAAqBC,MAArB,GAAmEN,KAAnE,CAAqBM,MAArB;EAAA,IAA6BC,QAA7B,GAAmEP,KAAnE,CAA6BO,QAA7B;EAAA,IAAuCC,SAAvC,GAAmER,KAAnE,CAAuCQ,SAAvC;EAAA,IAAqDC,SAArD,4BAAmET,KAAnE;;EAEA,IACEU,OAAO,CAACC,GAARD,CAAYE,QAAZF,KAAyB,aAAzBA,IACA,CAACJ,MADDI,IAEAF,SAAS,GAAGd,SAAS,CAACmB,YAHxB,EAIE;IACAf,IAAI,CAAC,wDAAD,CAAJA;EACD;;EACD,IAAMgB,KAAK,WACRxB,KAAK,CAACyB,QAANzB,CAAe0B,OAAf1B,CAAuBiB,QAAvBjB,EAAiC2B,IAAjC3B,CACC,UAACwB,KAAD;IAAA,OACE,kBAAK,CAACI,cAAN5B,CAAqBwB,KAArBxB,KACAM,QAAQ,CAACkB,KAAK,CAACd,KAAP,EAAcF,IAAd,CAARF,KAAgCS,WAFlC;EADD,EADQ,uCAK+B,IAL1C;EAOA,OACEc,wCAASV,SAAT;IAAoBW,SAAS,EAAE7B,YAAY,CAAC,MAAD,EAASU,QAAT;EAA3C,IACEkB,oBAACxB,WAAD;IACE0B,GAAG,EAAEhB,WADP;IAEEiB,aAAa,EAAEpB,MAAM,CAACG,WAAD,CAANH,IAAuB,CAFxC;IAGEqB,UAAU,EAAE,oBAACC,KAAD;MAAA,OAAYtB,MAAM,CAACG,WAAD,CAANH,GAAsBsB,KAAlC;IAAA;EAHd,GAKGV,KALH,CADF,EAQGR,MARH,CADF;AArBK,E,CAmCP;;AACA,eAAeb,cAAc,CAACM,IAAD,EAAO;EAClCS,SAAS,EAAE;AADuB,CAAP,CAA7B","names":["React","getClassName","usePlatform","withAdaptivity","ViewWidth","ScrollSaver","getNavId","warnOnce","warn","Epic","props","platform","scroll","useRef","current","activeStory","tabbar","children","viewWidth","restProps","process","env","NODE_ENV","SMALL_TABLET","story","Children","toArray","find","isValidElement","createScopedElement","vkuiClass","key","initialScroll","saveScroll","value"],"sources":["/Users/al.balandin/code/vkvideo-test/node_modules/@vkontakte/vkui/src/components/Epic/Epic.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { withAdaptivity, ViewWidth } from \"../../hoc/withAdaptivity\";\nimport { ScrollSaver } from \"./ScrollSaver\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport {\n  AdaptivityContextInterface,\n  AdaptivityProps,\n} from \"../AdaptivityProvider/AdaptivityContext\";\nimport \"./Epic.css\";\n\nexport interface EpicProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    AdaptivityProps {\n  tabbar?: React.ReactNode;\n  activeStory: string;\n}\n\nconst warn = warnOnce(\"Epic\");\n\nexport const Epic: React.FC<EpicProps & AdaptivityContextInterface> = (\n  props\n) => {\n  const platform = usePlatform();\n  const scroll = React.useRef<{ [key: string]: number }>({}).current;\n  const { activeStory, tabbar, children, viewWidth, ...restProps } = props;\n\n  if (\n    process.env.NODE_ENV === \"development\" &&\n    !tabbar &&\n    viewWidth < ViewWidth.SMALL_TABLET\n  ) {\n    warn(\"Using Epic without tabbar is not recommended on mobile\");\n  }\n  const story =\n    (React.Children.toArray(children).find(\n      (story) =>\n        React.isValidElement(story) &&\n        getNavId(story.props, warn) === activeStory\n    ) as React.ReactElement | undefined) ?? null;\n\n  return (\n    <div {...restProps} vkuiClass={getClassName(\"Epic\", platform)}>\n      <ScrollSaver\n        key={activeStory}\n        initialScroll={scroll[activeStory] || 0}\n        saveScroll={(value) => (scroll[activeStory] = value)}\n      >\n        {story}\n      </ScrollSaver>\n      {tabbar}\n    </div>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default withAdaptivity(Epic, {\n  viewWidth: true,\n});\n"]},"metadata":{},"sourceType":"module"}