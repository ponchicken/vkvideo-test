{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from \"react\";\nexport function useEnsuredControl(props, options) {\n  var isControlled = props.hasOwnProperty(\"value\");\n\n  var _React$useState = React.useState(options.defaultValue),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      localValue = _React$useState2[0],\n      setLocalValue = _React$useState2[1];\n\n  var onChange = React.useCallback(function (e) {\n    !isControlled && setLocalValue(e.target.value);\n    props.onChange && props.onChange(e);\n  }, [isControlled, props]);\n  return [isControlled ? props.value : localValue, onChange];\n}","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAO,SAASC,iBAAT,CACLC,KADK,EAELC,OAFK,EAG2B;EAChC,IAAMC,YAAY,GAAGF,KAAK,CAACG,cAANH,CAAqB,OAArBA,CAArB;;EACA,sBAAoCF,KAAK,CAACM,QAANN,CAAeG,OAAO,CAACI,YAAvBP,CAApC;EAAA;EAAA,IAAOQ,UAAP;EAAA,IAAmBC,aAAnB;;EACA,IAAMC,QAAQ,GAAGV,KAAK,CAACW,WAANX,CACf,UAACY,CAAD,EAAO;IACL,CAACR,YAAD,IAAiBK,aAAa,CAACG,CAAC,CAACC,MAAFD,CAASE,KAAV,CAA9B;IACAZ,KAAK,CAACQ,QAANR,IAAkBA,KAAK,CAACQ,QAANR,CAAeU,CAAfV,CAAlBA;EAHa,GAKf,CAACE,YAAD,EAAeF,KAAf,CALeF,CAAjB;EAOA,OAAO,CAACI,YAAY,GAAGF,KAAK,CAACY,KAAT,GAAiBN,UAA9B,EAA0CE,QAA1C,CAAP;AACD","names":["React","useEnsuredControl","props","options","isControlled","hasOwnProperty","useState","defaultValue","localValue","setLocalValue","onChange","useCallback","e","target","value"],"sources":["/Users/al.balandin/code/vkvideo-test/node_modules/@vkontakte/vkui/src/hooks/useEnsuredControl.ts"],"sourcesContent":["import * as React from \"react\";\n\nexport function useEnsuredControl<V, E>(\n  props: { value?: V; onChange?: (e: E) => any },\n  options: { defaultValue: V }\n): [V | undefined, (e: E) => any] {\n  const isControlled = props.hasOwnProperty(\"value\");\n  const [localValue, setLocalValue] = React.useState(options.defaultValue);\n  const onChange = React.useCallback(\n    (e) => {\n      !isControlled && setLocalValue(e.target.value);\n      props.onChange && props.onChange(e);\n    },\n    [isControlled, props]\n  );\n  return [isControlled ? props.value : localValue, onChange];\n}\n"]},"metadata":{},"sourceType":"module"}