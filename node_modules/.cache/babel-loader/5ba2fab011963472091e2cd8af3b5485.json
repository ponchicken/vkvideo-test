{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from \"react\";\nexport var useBooleanState = function useBooleanState() {\n  var defaultValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  var _React$useState = React.useState(defaultValue),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var setTrue = React.useCallback(function () {\n    setValue(true);\n  }, []);\n  var setFalse = React.useCallback(function () {\n    setValue(false);\n  }, []);\n  var toggle = React.useCallback(function () {\n    setValue(!value);\n  }, [value]);\n  return {\n    value: value,\n    setTrue: setTrue,\n    setFalse: setFalse,\n    toggle: toggle\n  };\n};","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAA0B;EAAA,IAAzBC,YAAyB,uEAAV,KAAU;;EACvD,sBAA0BF,KAAK,CAACG,QAANH,CAAeE,YAAfF,CAA1B;EAAA;EAAA,IAAOI,KAAP;EAAA,IAAcC,QAAd;;EAEA,IAAMC,OAAO,GAAGN,KAAK,CAACO,WAANP,CAAkB,YAAM;IACtCK,QAAQ,CAAC,IAAD,CAARA;EADc,GAEb,EAFaL,CAAhB;EAIA,IAAMQ,QAAQ,GAAGR,KAAK,CAACO,WAANP,CAAkB,YAAM;IACvCK,QAAQ,CAAC,KAAD,CAARA;EADe,GAEd,EAFcL,CAAjB;EAIA,IAAMS,MAAM,GAAGT,KAAK,CAACO,WAANP,CAAkB,YAAM;IACrCK,QAAQ,CAAC,CAACD,KAAF,CAARC;EADa,GAEZ,CAACD,KAAD,CAFYJ,CAAf;EAIA,OAAO;IAAEI,KAAK,EAALA,KAAF;IAASE,OAAO,EAAPA,OAAT;IAAkBE,QAAQ,EAARA,QAAlB;IAA4BC,MAAM,EAANA;EAA5B,CAAP;AAfK","names":["React","useBooleanState","defaultValue","useState","value","setValue","setTrue","useCallback","setFalse","toggle"],"sources":["/Users/al.balandin/code/vkvideo-test/node_modules/@vkontakte/vkui/src/hooks/useBooleanState.ts"],"sourcesContent":["import * as React from \"react\";\n\nexport const useBooleanState = (defaultValue = false) => {\n  const [value, setValue] = React.useState(defaultValue);\n\n  const setTrue = React.useCallback(() => {\n    setValue(true);\n  }, []);\n\n  const setFalse = React.useCallback(() => {\n    setValue(false);\n  }, []);\n\n  const toggle = React.useCallback(() => {\n    setValue(!value);\n  }, [value]);\n\n  return { value, setTrue, setFalse, toggle };\n};\n"]},"metadata":{},"sourceType":"module"}