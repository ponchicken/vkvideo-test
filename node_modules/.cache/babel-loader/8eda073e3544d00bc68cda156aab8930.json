{"ast":null,"code":"import { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\n\nfunction calcStrokeDashOffset(value, radius) {\n  var progress = value / 100;\n  return 2 * Math.PI * radius * (1 - progress);\n}\n\nvar PullToRefreshSpinner = function PullToRefreshSpinner(_ref) {\n  var _ref$on = _ref.on,\n      on = _ref$on === void 0 ? true : _ref$on,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      _ref$strokeWidth = _ref.strokeWidth,\n      strokeWidth = _ref$strokeWidth === void 0 ? 2.5 : _ref$strokeWidth,\n      style = _ref.style,\n      _ref$progress = _ref.progress,\n      progress = _ref$progress === void 0 ? 0 : _ref$progress,\n      _ref$ariaLabel = _ref[\"aria-label\"],\n      ariaLabel = _ref$ariaLabel === void 0 ? \"Пожалуйста, подождите...\" : _ref$ariaLabel;\n  var radius = 0.5 * size - 0.5 * strokeWidth;\n  var dasharray = 2 * Math.PI * radius;\n  var circleCenter = 0.5 * size;\n  var dashoffset = calcStrokeDashOffset(on ? 80 : progress, radius);\n  return createScopedElement(\"div\", {\n    vkuiClass: classNames(\"PullToRefresh__spinner\", {\n      \"PullToRefresh__spinner--on\": on\n    }),\n    style: style,\n    \"aria-label\": on ? ariaLabel : undefined\n  }, createScopedElement(\"svg\", {\n    role: \"presentation\",\n    vkuiClass: \"PullToRefresh__spinner-self\",\n    style: {\n      width: size,\n      height: size\n    },\n    viewBox: \"0 0 \".concat(size, \" \").concat(size),\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, createScopedElement(\"g\", {\n    style: {\n      width: size,\n      height: size,\n      transformOrigin: \"\".concat(circleCenter, \"px \").concat(circleCenter, \"px\")\n    }\n  }, createScopedElement(\"circle\", {\n    vkuiClass: \"PullToRefresh__spinner-path\",\n    fill: \"none\",\n    strokeDasharray: dasharray,\n    strokeDashoffset: dashoffset,\n    strokeWidth: strokeWidth,\n    strokeLinecap: \"round\",\n    cx: circleCenter,\n    cy: circleCenter,\n    r: radius\n  }))));\n}; // eslint-disable-next-line import/no-default-export\n\n\nexport default /*#__PURE__*/React.memo(PullToRefreshSpinner);","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT;;AAGA,SAASC,oBAAT,CAA8BC,KAA9B,EAA6CC,MAA7C,EAA6D;EAC3D,IAAMC,QAAQ,GAAGF,KAAK,GAAG,GAAzB;EACA,OAAO,IAAIG,IAAI,CAACC,EAAT,GAAcH,MAAd,IAAwB,IAAIC,QAA5B,CAAP;AACD;;AAWD,IAAMG,oBAEL,GAAG,SAFEA,oBAEF,OAO6B;EAAA,mBAN/BC,EAM+B;EAAA,IAN/BA,EAM+B,wBAN1B,IAM0B;EAAA,qBAL/BC,IAK+B;EAAA,IAL/BA,IAK+B,0BALxB,EAKwB;EAAA,4BAJ/BC,WAI+B;EAAA,IAJ/BA,WAI+B,iCAJjB,GAIiB;EAAA,IAH/BC,KAG+B,QAH/BA,KAG+B;EAAA,yBAF/BP,QAE+B;EAAA,IAF/BA,QAE+B,8BAFpB,CAEoB;EAAA,0BAD/B,YAC+B;EAAA,IADjBQ,SACiB,+BADL,0BACK;EAC/B,IAAMT,MAAM,GAAG,MAAMM,IAAN,GAAa,MAAMC,WAAlC;EACA,IAAMG,SAAS,GAAG,IAAIR,IAAI,CAACC,EAAT,GAAcH,MAAhC;EACA,IAAMW,YAAY,GAAG,MAAML,IAA3B;EAEA,IAAMM,UAAU,GAAGd,oBAAoB,CAACO,EAAE,GAAG,EAAH,GAAQJ,QAAX,EAAqBD,MAArB,CAAvC;EAEA,OACEa;IACEC,SAAS,EAAEjB,UAAU,CAAC,wBAAD,EAA2B;MAC9C,8BAA8BQ;IADgB,CAA3B,CADvB;IAIEG,KAAK,EAAEA,KAJT;IAKE,cAAYH,EAAE,GAAGI,SAAH,GAAeM;EAL/B,GAOEF;IACEG,IAAI,EAAC,cADP;IAEEF,SAAS,EAAC,6BAFZ;IAGEN,KAAK,EAAE;MACLS,KAAK,EAAEX,IADF;MAELY,MAAM,EAAEZ;IAFH,CAHT;IAOEa,OAAO,gBAASb,IAAT,cAAiBA,IAAjB,CAPT;IAQEc,KAAK,EAAC;EARR,GAUEP;IACEL,KAAK,EAAE;MACLS,KAAK,EAAEX,IADF;MAELY,MAAM,EAAEZ,IAFH;MAGLe,eAAe,YAAKV,YAAL,gBAAuBA,YAAvB;IAHV;EADT,GAOEE;IACEC,SAAS,EAAC,6BADZ;IAEEQ,IAAI,EAAC,MAFP;IAGEC,eAAe,EAAEb,SAHnB;IAIEc,gBAAgB,EAAEZ,UAJpB;IAKEL,WAAW,EAAEA,WALf;IAMEkB,aAAa,EAAC,OANhB;IAOEC,EAAE,EAAEf,YAPN;IAQEgB,EAAE,EAAEhB,YARN;IASEiB,CAAC,EAAE5B;EATL,EAPF,CAVF,CAPF,CADF;AAhBF,E,CA0DA;;;AACA,4BAAeJ,KAAK,CAACiC,IAANjC,CAAWQ,oBAAXR,CAAf","names":["React","classNames","calcStrokeDashOffset","value","radius","progress","Math","PI","PullToRefreshSpinner","on","size","strokeWidth","style","ariaLabel","dasharray","circleCenter","dashoffset","createScopedElement","vkuiClass","undefined","role","width","height","viewBox","xmlns","transformOrigin","fill","strokeDasharray","strokeDashoffset","strokeLinecap","cx","cy","r","memo"],"sources":["/Users/al.balandin/code/vkvideo-test/node_modules/@vkontakte/vkui/src/components/PullToRefresh/PullToRefreshSpinner.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport \"./PullToRefresh.css\";\n\nfunction calcStrokeDashOffset(value: number, radius: number) {\n  const progress = value / 100;\n  return 2 * Math.PI * radius * (1 - progress);\n}\n\nexport interface PullToRefreshSpinnerProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  size?: number;\n  strokeWidth?: number;\n  on?: boolean;\n  progress?: number;\n  \"aria-label\"?: string;\n}\n\nconst PullToRefreshSpinner: React.FunctionComponent<\n  PullToRefreshSpinnerProps\n> = ({\n  on = true,\n  size = 24,\n  strokeWidth = 2.5,\n  style,\n  progress = 0,\n  \"aria-label\": ariaLabel = \"Пожалуйста, подождите...\",\n}: PullToRefreshSpinnerProps) => {\n  const radius = 0.5 * size - 0.5 * strokeWidth;\n  const dasharray = 2 * Math.PI * radius;\n  const circleCenter = 0.5 * size;\n\n  const dashoffset = calcStrokeDashOffset(on ? 80 : progress, radius);\n\n  return (\n    <div\n      vkuiClass={classNames(\"PullToRefresh__spinner\", {\n        \"PullToRefresh__spinner--on\": on,\n      })}\n      style={style}\n      aria-label={on ? ariaLabel : undefined}\n    >\n      <svg\n        role=\"presentation\"\n        vkuiClass=\"PullToRefresh__spinner-self\"\n        style={{\n          width: size,\n          height: size,\n        }}\n        viewBox={`0 0 ${size} ${size}`}\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g\n          style={{\n            width: size,\n            height: size,\n            transformOrigin: `${circleCenter}px ${circleCenter}px`,\n          }}\n        >\n          <circle\n            vkuiClass=\"PullToRefresh__spinner-path\"\n            fill=\"none\"\n            strokeDasharray={dasharray}\n            strokeDashoffset={dashoffset}\n            strokeWidth={strokeWidth}\n            strokeLinecap=\"round\"\n            cx={circleCenter}\n            cy={circleCenter}\n            r={radius}\n          />\n        </g>\n      </svg>\n    </div>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default React.memo(PullToRefreshSpinner);\n"]},"metadata":{},"sourceType":"module"}