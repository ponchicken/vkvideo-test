import { IError, ISubject } from '@vkontakte/videoplayer-shared';
import { IApi, ILogItem } from './Api';
export interface ILogger {
    /**
     * Ставит элемент в очередь на отправку
     */
    log(item: ILogItem): void;
    /**
     * Отправляет и очищает текущую очередь принудительно
     */
    flush(useBeacon?: boolean): void;
    /**
     * Ставит отправку событий на паузу. Они будут накапливаться до вызова `resume()`
     */
    pause(): void;
    /**
     * Снимает паузу отправки событий
     */
    resume(): void;
    destroy(): void;
}
export interface ILoggerParams {
    api: IApi;
    error$: ISubject<IError>;
}
export declare class Logger implements ILogger {
    private api;
    private error$;
    private requestQueue;
    private subscription;
    private isPaused;
    private debouncedFlush;
    constructor(params: ILoggerParams);
    log(item: ILogItem): void;
    flush(useBeacon?: boolean): void;
    pause(): void;
    resume(): void;
    destroy(): void;
}
