import { IRectangle } from '@vkontakte/videoplayer-shared';
import { ExactVideoQuality, VideoQuality } from './types';
export declare const isHigher: (a: ExactVideoQuality, b: ExactVideoQuality) => boolean;
export declare const isHigherOrEqual: (a: ExactVideoQuality, b: ExactVideoQuality) => boolean;
export declare const isLower: (a: ExactVideoQuality, b: ExactVideoQuality) => boolean;
export declare const isLowerOrEqual: (a: ExactVideoQuality, b: ExactVideoQuality) => boolean;
export declare const getHighestQuality: (qualities: VideoQuality[]) => VideoQuality | undefined;
/**
 * Выбирает качество, наиболее близкое к указанной высоте кадра, но не менее её.
 * @param tolerance позволяет выбрать качество менее заданной высоты на величину погрешности (в процентах)
 */
export declare const videoHeightToQuality: (height: number, tolerance?: number) => ExactVideoQuality | undefined;
/**
 * Выбирает качество описывающее заданные размеры видео потока, т.е. не меньше его.
 */
export declare const videoSizeToQuality: ({ width, height }: IRectangle) => ExactVideoQuality | undefined;
export declare const videoQualityToHeight: (quality: ExactVideoQuality) => number;
export declare const isInvariantQuality: (quality: VideoQuality) => quality is VideoQuality.INVARIANT;
export declare const areQualitiesExact: (qualities: VideoQuality[]) => qualities is ExactVideoQuality[];
export declare function assertQualityIsExact(quality: VideoQuality): asserts quality is ExactVideoQuality;
