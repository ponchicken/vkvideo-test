import { ITuningConfig } from "./tuningConfig";
import { Kbps, Milliseconds, IRectangle } from '@vkontakte/videoplayer-shared';
import { IVideoTrack } from "../player/types";
import { QualityLimits } from "./quality/types";
export interface Constraints {
    container?: IRectangle;
    throughput?: Kbps;
    tuning: ITuningConfig['autoTrackSelection'];
    limits?: QualityLimits;
    reserve?: Kbps;
    playbackRate?: number;
    forwardBufferHealth?: number;
    current?: IVideoTrack;
    history?: TrackHistory;
}
export declare class TrackHistory {
    last: IVideoTrack | undefined;
    history: Record<IVideoTrack['id'], Milliseconds>;
    recordSelection(track: IVideoTrack): void;
    recordSwitch(track: IVideoTrack): void;
    clear(): void;
}
declare const autoSelectVideoTrack: (tracks: IVideoTrack[], { container, throughput, tuning, limits, reserve, forwardBufferHealth, playbackRate, current, history, }: Constraints) => IVideoTrack;
export default autoSelectVideoTrack;
