import { IExternalTextTrack, ITextTrack } from "../../player/types";
import { IDesiredState, IProviderOutput } from "../types";
declare class HtmlVideoTextTrackManager {
    private available$;
    private current$;
    private error$;
    private video;
    private cueSettings;
    private subscription;
    private externalTracks;
    connect(video: HTMLVideoElement, desiredState: Pick<IDesiredState, 'externalTextTracks' | 'currentTextTrack' | 'textTrackCuesSettings'>, providerOutput: Pick<IProviderOutput, 'availableTextTracks$' | 'currentTextTrack$' | 'error$'>): void;
    private subscribe;
    private applyCueSettings;
    private htmlTextTracksAsArray;
    private htmlTextTrackToITextTrack;
    private static isHealthyTrack;
    setExternal(tracks: IExternalTextTrack[]): void;
    select(selectedId: ITextTrack['id'] | undefined): void;
    destroy(): void;
    private attach;
    private detach;
}
export default HtmlVideoTextTrackManager;
