import { AdsSection } from '../../types';
import type { AdsParams } from '../../types';
import type { ILogger, ISubject } from '@vkontakte/videoplayer-shared';
import type { IAdsState, IUIState } from '../../store';
declare type ExternalActions = {
    switchFromAdsToVideo: (callPlay?: boolean) => void;
    switchFromVideoToAds: () => void;
    setMuted: (muted: boolean) => void;
};
export declare type AdmanInitParams = {
    width: number;
    height: number;
    isFullscreen: boolean;
    isAutoplay: boolean;
    slotId: number;
    params?: AdsParams;
    duration: number;
    previewParam?: number;
    adsContainer: HTMLElement;
    adsVideoElement: HTMLVideoElement;
};
export interface IAdEvents {
    slotRequested$: ISubject<void>;
    started$: ISubject<AdsSection>;
    paused$: ISubject<void>;
    resumed$: ISubject<void>;
    ended$: ISubject<void>;
    skipped$: ISubject<void>;
    clicked$: ISubject<void>;
}
declare type PartialUIState = Pick<IUIState, 'isMobile' | 'mobileUnmuteButtonVisible'>;
export declare class AdmanWrapper {
    private adman;
    private initialVolume;
    private videoElement;
    private currentAdSection;
    private actions;
    private adsState;
    private uiState;
    private readonly log;
    events: IAdEvents;
    constructor(logger: ILogger);
    init(actions: ExternalActions, adsState: IAdsState, uiState: PartialUIState): void;
    loadAdman: (abortSignal: AbortSignal) => Promise<void>;
    onAdmanLoadingError(): void;
    initAdman(initParams: AdmanInitParams): void;
    private switchToVideo;
    togglePlay(): void;
    setInitialVolume(volume: number): void;
    setVolume(volume: number): void;
    setFullscreen(isFullscreen: boolean): void;
    startPreroll(): void;
    startPostroll(): void;
    private onAdsReady;
    private onAdStarted;
    private onAdTimeRemained;
    private onAdPaused;
    private onAdPlayed;
    private onAdMidrollPoint;
    private onAdSkipped;
    private onAdClosed;
    private onAdCompleted;
    private onAdClicked;
    private onAdError;
    play(): void;
    pause(): void;
    skip(): void;
    setPosition(position: number, duration: number): void;
    destroy(): void;
}
export {};
