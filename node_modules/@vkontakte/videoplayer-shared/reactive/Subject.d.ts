import type { IEmitter, ISubject, ISubscription, IUnsubscriber } from './types';
import Observable from './Observable';
export default class Subject<T> extends Observable<T> implements ISubject<T> {
    private keyCounter;
    private subscribers;
    constructor();
    next(value: T): void;
    error(value: T): void;
    protected _subscribe(emitter: IEmitter<T>): IUnsubscriber | ISubscription | void;
}
