import type { IEmitter, ISubscription, IUnsubscriber, IValueSubject } from './types';
import Subject from './Subject';
export default class ValueSubject<T> extends Subject<T> implements IValueSubject<T> {
    private value;
    constructor(initialValue: T);
    next(value: T): void;
    error(value: T): void;
    getValue(): T;
    protected _subscribe(emitter: IEmitter<T>): IUnsubscriber | ISubscription | void;
}
